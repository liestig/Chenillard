

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 20 08:47:01 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 21/07/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F46K22 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     
    51                           	psect	idataCOMRAM
    52   00107E                     __pidataCOMRAM:
    53                           	callstack 0
    54                           
    55                           ;initializer for _increase
    56   00107E  01                 	db	1
    57   000000                     _TRISCbits	set	3988
    58   000000                     _T2CONbits	set	4026
    59   000000                     _CCP1CONbits	set	4029
    60   000000                     _CCPR1L	set	4030
    61   000000                     _PR2	set	4027
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66   001066                     __pcinit:
    67                           	callstack 0
    68   001066                     start_initialization:
    69                           	callstack 0
    70   001066                     __initialization:
    71                           	callstack 0
    72                           
    73                           ; Initialize objects allocated to COMRAM (1 bytes)
    74                           ; load TBLPTR registers with __pidataCOMRAM
    75   001066  0E7E               	movlw	low __pidataCOMRAM
    76   001068  6EF6               	movwf	tblptrl,c
    77   00106A  0E10               	movlw	high __pidataCOMRAM
    78   00106C  6EF7               	movwf	tblptrh,c
    79   00106E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    80   001070  6EF8               	movwf	tblptru,c
    81   001072  0009               	tblrd		*+	;fetch initializer
    82   001074  CFF5 F003          	movff	tablat,__pdataCOMRAM
    83   001078                     end_of_initialization:
    84                           	callstack 0
    85   001078                     __end_of__initialization:
    86                           	callstack 0
    87   001078  0100               	movlb	0
    88   00107A  EF01  F008         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	dataCOMRAM
    91   000003                     __pdataCOMRAM:
    92                           	callstack 0
    93   000003                     _increase:
    94                           	callstack 0
    95   000003                     	ds	1
    96                           
    97                           	psect	cstackCOMRAM
    98   000001                     __pcstackCOMRAM:
    99                           	callstack 0
   100   000001                     ??_main:
   101                           
   102                           ; 1 bytes @ 0x0
   103   000001                     	ds	2
   104                           
   105 ;;
   106 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   107 ;;
   108 ;; *************** function _main *****************
   109 ;; Defined at:
   110 ;;		line 100 in file "main.c"
   111 ;; Parameters:    Size  Location     Type
   112 ;;		None
   113 ;; Auto vars:     Size  Location     Type
   114 ;;		None
   115 ;; Return value:  Size  Location     Type
   116 ;;                  1    wreg      void 
   117 ;; Registers used:
   118 ;;		wreg, status,2, cstack
   119 ;; Tracked objects:
   120 ;;		On entry : 0/0
   121 ;;		On exit  : 0/0
   122 ;;		Unchanged: 0/0
   123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   128 ;;Total ram usage:        2 bytes
   129 ;; Hardware stack levels required when called: 1
   130 ;; This function calls:
   131 ;;		_configurePWM
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           	psect	text0
   138   001002                     __ptext0:
   139                           	callstack 0
   140   001002                     _main:
   141                           	callstack 30
   142   001002                     
   143                           ;main.c: 101:     configurePWM();
   144   001002  EC25  F008         	call	_configurePWM	;wreg free
   145   001006                     l711:
   146                           
   147                           ;main.c: 104:         PR2 = 71;
   148   001006  0E47               	movlw	71
   149   001008  6EBB               	movwf	187,c	;volatile
   150   00100A                     
   151                           ;main.c: 105:         CCPR1L = 36;
   152   00100A  0E24               	movlw	36
   153   00100C  6EBE               	movwf	190,c	;volatile
   154   00100E                     
   155                           ;main.c: 106:         _delay((unsigned long)((1000)*(1000000UL/4000.0)));
   156   00100E  0E02               	movlw	2
   157   001010  6E02               	movwf	(??_main+1)^0,c
   158   001012  0E45               	movlw	69
   159   001014  6E01               	movwf	??_main^0,c
   160   001016  0EAA               	movlw	170
   161   001018                     u17:
   162   001018  2EE8               	decfsz	wreg,f,c
   163   00101A  D7FE               	bra	u17
   164   00101C  2E01               	decfsz	??_main^0,f,c
   165   00101E  D7FC               	bra	u17
   166   001020  2E02               	decfsz	(??_main+1)^0,f,c
   167   001022  D7FA               	bra	u17
   168   001024                     
   169                           ;main.c: 107:         PR2 = 142;
   170   001024  0E8E               	movlw	142
   171   001026  6EBB               	movwf	187,c	;volatile
   172   001028                     
   173                           ;main.c: 108:         CCPR1L = 71;
   174   001028  0E47               	movlw	71
   175   00102A  6EBE               	movwf	190,c	;volatile
   176   00102C                     
   177                           ;main.c: 109:         _delay((unsigned long)((1000)*(1000000UL/4000.0)));
   178   00102C  0E02               	movlw	2
   179   00102E  6E02               	movwf	(??_main+1)^0,c
   180   001030  0E45               	movlw	69
   181   001032  6E01               	movwf	??_main^0,c
   182   001034  0EAA               	movlw	170
   183   001036                     u27:
   184   001036  2EE8               	decfsz	wreg,f,c
   185   001038  D7FE               	bra	u27
   186   00103A  2E01               	decfsz	??_main^0,f,c
   187   00103C  D7FC               	bra	u27
   188   00103E  2E02               	decfsz	(??_main+1)^0,f,c
   189   001040  D7FA               	bra	u27
   190   001042  EF03  F008         	goto	l711
   191   001046  EF00  F000         	goto	start
   192   00104A                     __end_of_main:
   193                           	callstack 0
   194                           
   195 ;; *************** function _configurePWM *****************
   196 ;; Defined at:
   197 ;;		line 84 in file "main.c"
   198 ;; Parameters:    Size  Location     Type
   199 ;;		None
   200 ;; Auto vars:     Size  Location     Type
   201 ;;		None
   202 ;; Return value:  Size  Location     Type
   203 ;;                  1    wreg      void 
   204 ;; Registers used:
   205 ;;		wreg, status,2
   206 ;; Tracked objects:
   207 ;;		On entry : 0/0
   208 ;;		On exit  : 0/0
   209 ;;		Unchanged: 0/0
   210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   215 ;;Total ram usage:        0 bytes
   216 ;; Hardware stack levels used: 1
   217 ;; This function calls:
   218 ;;		Nothing
   219 ;; This function is called by:
   220 ;;		_main
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           	psect	text1
   225   00104A                     __ptext1:
   226                           	callstack 0
   227   00104A                     _configurePWM:
   228                           	callstack 30
   229   00104A                     
   230                           ;main.c: 86:     CCP1CONbits.CCP1M = 0b1100;
   231   00104A  50BD               	movf	189,w,c	;volatile
   232   00104C  0BF0               	andlw	-16
   233   00104E  090C               	iorlw	12
   234   001050  6EBD               	movwf	189,c	;volatile
   235                           
   236                           ;main.c: 87:     CCPR1L = 128;
   237   001052  0E80               	movlw	128
   238   001054  6EBE               	movwf	190,c	;volatile
   239   001056                     
   240                           ;main.c: 89:     T2CONbits.TMR2ON = 0;
   241   001056  94BA               	bcf	186,2,c	;volatile
   242                           
   243                           ;main.c: 91:     T2CONbits.T2CKPS = 0b00;
   244   001058  0EFC               	movlw	-4
   245   00105A  16BA               	andwf	186,f,c	;volatile
   246                           
   247                           ;main.c: 93:     T2CONbits.T2OUTPS = 0b0000;
   248   00105C  0E87               	movlw	-121
   249   00105E  16BA               	andwf	186,f,c	;volatile
   250   001060                     
   251                           ;main.c: 95:     TRISCbits.TRISC2 = 0;
   252   001060  9494               	bcf	148,2,c	;volatile
   253   001062                     
   254                           ;main.c: 97:     T2CONbits.TMR2ON = 1;
   255   001062  84BA               	bsf	186,2,c	;volatile
   256   001064  0012               	return		;funcret
   257   001066                     __end_of_configurePWM:
   258                           	callstack 0
   259                           
   260                           	psect	smallconst
   261   001000                     __psmallconst:
   262                           	callstack 0
   263   001000  00                 	db	0
   264   001001  00                 	db	0	; dummy byte at the end
   265   000000                     
   266                           	psect	rparam
   267   000000                     
   268                           	psect	config
   269                           
   270                           ; Padding undefined space
   271   300000                     	org	3145728
   272   300000  FF                 	db	255
   273                           
   274                           ;Config register CONFIG1H @ 0x300001
   275                           ;	Oscillator Selection bits
   276                           ;	FOSC = INTIO7, Internal oscillator block, CLKOUT function on OSC2
   277                           ;	4X PLL Enable
   278                           ;	PLLCFG = OFF, Oscillator used directly
   279                           ;	Primary clock enable bit
   280                           ;	PRICLKEN = ON, Primary clock is always enabled
   281                           ;	Fail-Safe Clock Monitor Enable bit
   282                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   283                           ;	Internal/External Oscillator Switchover bit
   284                           ;	IESO = OFF, Oscillator Switchover mode disabled
   285   300001                     	org	3145729
   286   300001  29                 	db	41
   287                           
   288                           ;Config register CONFIG2L @ 0x300002
   289                           ;	Power-up Timer Enable bit
   290                           ;	PWRTEN = OFF, Power up timer disabled
   291                           ;	Brown-out Reset Enable bits
   292                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   293                           ;	Brown Out Reset Voltage bits
   294                           ;	BORV = 190, VBOR set to 1.90 V nominal
   295   300002                     	org	3145730
   296   300002  1F                 	db	31
   297                           
   298                           ;Config register CONFIG2H @ 0x300003
   299                           ;	Watchdog Timer Enable bits
   300                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   301                           ;	Watchdog Timer Postscale Select bits
   302                           ;	WDTPS = 32768, 1:32768
   303   300003                     	org	3145731
   304   300003  3C                 	db	60
   305                           
   306                           ; Padding undefined space
   307   300004                     	org	3145732
   308   300004  FF                 	db	255
   309                           
   310                           ;Config register CONFIG3H @ 0x300005
   311                           ;	CCP2 MUX bit
   312                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   313                           ;	PORTB A/D Enable bit
   314                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
   315                           ;	P3A/CCP3 Mux bit
   316                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   317                           ;	HFINTOSC Fast Start-up
   318                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   319                           ;	Timer3 Clock input mux bit
   320                           ;	T3CMX = PORTC0, T3CKI is on RC0
   321                           ;	ECCP2 B output mux bit
   322                           ;	P2BMX = PORTD2, P2B is on RD2
   323                           ;	MCLR Pin Enable bit
   324                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   325   300005                     	org	3145733
   326   300005  BD                 	db	189
   327                           
   328                           ;Config register CONFIG4L @ 0x300006
   329                           ;	Stack Full/Underflow Reset Enable bit
   330                           ;	STVREN = ON, Stack full/underflow will cause Reset
   331                           ;	Single-Supply ICSP Enable bit
   332                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   333                           ;	Extended Instruction Set Enable bit
   334                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   335                           ;	Background Debug
   336                           ;	DEBUG = 0x1, unprogrammed default
   337   300006                     	org	3145734
   338   300006  85                 	db	133
   339                           
   340                           ; Padding undefined space
   341   300007                     	org	3145735
   342   300007  FF                 	db	255
   343                           
   344                           ;Config register CONFIG5L @ 0x300008
   345                           ;	Code Protection Block 0
   346                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   347                           ;	Code Protection Block 1
   348                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   349                           ;	Code Protection Block 2
   350                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   351                           ;	Code Protection Block 3
   352                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   353   300008                     	org	3145736
   354   300008  0F                 	db	15
   355                           
   356                           ;Config register CONFIG5H @ 0x300009
   357                           ;	Boot Block Code Protection bit
   358                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   359                           ;	Data EEPROM Code Protection bit
   360                           ;	CPD = OFF, Data EEPROM not code-protected
   361   300009                     	org	3145737
   362   300009  C0                 	db	192
   363                           
   364                           ;Config register CONFIG6L @ 0x30000A
   365                           ;	Write Protection Block 0
   366                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   367                           ;	Write Protection Block 1
   368                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   369                           ;	Write Protection Block 2
   370                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   371                           ;	Write Protection Block 3
   372                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   373   30000A                     	org	3145738
   374   30000A  0F                 	db	15
   375                           
   376                           ;Config register CONFIG6H @ 0x30000B
   377                           ;	Configuration Register Write Protection bit
   378                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   379                           ;	Boot Block Write Protection bit
   380                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   381                           ;	Data EEPROM Write Protection bit
   382                           ;	WRTD = OFF, Data EEPROM not write-protected
   383   30000B                     	org	3145739
   384   30000B  E0                 	db	224
   385                           
   386                           ;Config register CONFIG7L @ 0x30000C
   387                           ;	Table Read Protection Block 0
   388                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   389                           ;	Table Read Protection Block 1
   390                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   391                           ;	Table Read Protection Block 2
   392                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   393                           ;	Table Read Protection Block 3
   394                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   395   30000C                     	org	3145740
   396   30000C  0F                 	db	15
   397                           
   398                           ;Config register CONFIG7H @ 0x30000D
   399                           ;	Boot Block Table Read Protection bit
   400                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   401   30000D                     	org	3145741
   402   30000D  40                 	db	64
   403                           tosu	equ	0xFFF
   404                           tosh	equ	0xFFE
   405                           tosl	equ	0xFFD
   406                           stkptr	equ	0xFFC
   407                           pclatu	equ	0xFFB
   408                           pclath	equ	0xFFA
   409                           pcl	equ	0xFF9
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           prodh	equ	0xFF4
   415                           prodl	equ	0xFF3
   416                           indf0	equ	0xFEF
   417                           postinc0	equ	0xFEE
   418                           postdec0	equ	0xFED
   419                           preinc0	equ	0xFEC
   420                           plusw0	equ	0xFEB
   421                           fsr0h	equ	0xFEA
   422                           fsr0l	equ	0xFE9
   423                           wreg	equ	0xFE8
   424                           indf1	equ	0xFE7
   425                           postinc1	equ	0xFE6
   426                           postdec1	equ	0xFE5
   427                           preinc1	equ	0xFE4
   428                           plusw1	equ	0xFE3
   429                           fsr1h	equ	0xFE2
   430                           fsr1l	equ	0xFE1
   431                           bsr	equ	0xFE0
   432                           indf2	equ	0xFDF
   433                           postinc2	equ	0xFDE
   434                           postdec2	equ	0xFDD
   435                           preinc2	equ	0xFDC
   436                           plusw2	equ	0xFDB
   437                           fsr2h	equ	0xFDA
   438                           fsr2l	equ	0xFD9
   439                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                       _configurePWM
 ---------------------------------------------------------------------------------
 (1) _configurePWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configurePWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       3       1        3.2%
BITBIGSFRlll        5C      0       0      39        0.0%
BITBIGSFRh          41      0       0      36        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRllh        25      0       0      38        0.0%
BITBIGSFRlh          1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3      40        0.0%
DATA                 0      0       3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 20 08:47:01 2024

          ?_configurePWM 0001                       l17 1064                       u17 1018  
                     u27 1036                      l701 104A                      l703 1056  
                    l711 1006                      l705 1060                      l721 102C  
                    l713 100A                      l707 1062                      l715 100E  
                    l717 1024                      l709 1002                      l719 1028  
                    _PR2 0FBB                      wreg 0FE8                     _main 1002  
                   start 0000           ??_configurePWM 0001             ___param_bank 0000  
                  ?_main 0001                    tablat 0FF5          __initialization 1066  
           __end_of_main 104A                   ??_main 0001            __activetblptr 0000  
                 _CCPR1L 0FBE                   isa$std 0001             __pdataCOMRAM 0003  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8     __end_of_configurePWM 1066               __accesstop 0060  
__end_of__initialization 1078            ___rparam_used 0001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 1000  
                __pcinit 1066                  __ramtop 1000                  __ptext0 1002  
                __ptext1 104A                _T2CONbits 0FBA     end_of_initialization 1078  
           _configurePWM 104A                _TRISCbits 0F94              _CCP1CONbits 0FBD  
          __pidataCOMRAM 107E      start_initialization 1066              __smallconst 1000  
               __Hrparam 0000                 __Lrparam 0000                 _increase 0003  
               isa$xinst 0000  
