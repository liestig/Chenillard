

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 16 08:44:26 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 21/07/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F46K22 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     _SSP1STATbits	set	4039
    71   000000                     _SSP1ADD	set	4040
    72   000000                     _SSP1CON2bits	set	4037
    73   000000                     _LATD	set	3980
    74   000000                     _ANSELCbits	set	3898
    75   000000                     _PORTD	set	3971
    76   000000                     _LATDbits	set	3980
    77   000000                     _TRISCbits	set	3988
    78   000000                     _TRISDbits	set	3989
    79   000000                     _PIR1bits	set	3998
    80   000000                     _SSP1CON1	set	4038
    81   000000                     _SSP1BUF	set	4041
    82   000000                     _SSP1CON3bits	set	4043
    83   000000                     _PIR2bits	set	4001
    84   000000                     _SSP1CON2	set	4037
    85                           
    86                           	psect	smallconst
    87   001000                     __psmallconst:
    88                           	callstack 0
    89   001000  00                 	db	0
    90   001001  30                 	db	48	;'0'
    91   001002  31                 	db	49	;'1'
    92   001003  32                 	db	50	;'2'
    93   001004  33                 	db	51	;'3'
    94   001005  34                 	db	52	;'4'
    95   001006  35                 	db	53	;'5'
    96   001007  36                 	db	54	;'6'
    97   001008  37                 	db	55	;'7'
    98   001009  38                 	db	56	;'8'
    99   00100A  39                 	db	57	;'9'
   100   00100B  41                 	db	65	;'A'
   101   00100C  42                 	db	66	;'B'
   102   00100D  43                 	db	67	;'C'
   103   00100E  44                 	db	68	;'D'
   104   00100F  45                 	db	69	;'E'
   105   001010  46                 	db	70	;'F'
   106   001011  00                 	db	0
   107   001012                     STR_1:
   108   001012  54                 	db	84	;'T'
   109   001013  65                 	db	101	;'e'
   110   001014  6D                 	db	109	;'m'
   111   001015  70                 	db	112	;'p'
   112   001016  3A                 	db	58	;':'
   113   001017  20                 	db	32
   114   001018  00                 	db	0
   115   001019                     STR_2:
   116   001019  20                 	db	32
   117   00101A  43                 	db	67	;'C'
   118   00101B  00                 	db	0
   119   00101C  00                 	db	0	; dummy byte at the end
   120   000000                     
   121                           ; #config settings
   122                           
   123                           	psect	cinit
   124   001908                     __pcinit:
   125                           	callstack 0
   126   001908                     start_initialization:
   127                           	callstack 0
   128   001908                     __initialization:
   129                           	callstack 0
   130   001908                     end_of_initialization:
   131                           	callstack 0
   132   001908                     __end_of__initialization:
   133                           	callstack 0
   134   001908  0E00               	movlw	low (__Lmediumconst shr (0+16))
   135   00190A  6EF8               	movwf	tblptru,c
   136   00190C  0100               	movlb	0
   137   00190E  EFD8  F00A         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	cstackCOMRAM
   140   000001                     __pcstackCOMRAM:
   141                           	callstack 0
   142   000001                     ??_i2c_waitForIdle:
   143   000001                     ?___awdiv:
   144                           	callstack 0
   145   000001                     ?___awmod:
   146                           	callstack 0
   147   000001                     ReadByte@status:
   148                           	callstack 0
   149   000001                     WriteNibble@data:
   150                           	callstack 0
   151   000001                     ___awdiv@dividend:
   152                           	callstack 0
   153   000001                     ___awmod@dividend:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0x0
   157   000001                     	ds	1
   158   000002                     ??_WriteNibble:
   159   000002                     WaitLCD@status:
   160                           	callstack 0
   161   000002                     i2c_read@i2cReadData:
   162                           	callstack 0
   163   000002                     i2c_write@i2cWriteData:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x1
   167   000002                     	ds	1
   168   000003                     ?___xxtofl:
   169                           	callstack 0
   170   000003                     WriteNibble@cmd:
   171                           	callstack 0
   172   000003                     ___awdiv@divisor:
   173                           	callstack 0
   174   000003                     ___awmod@divisor:
   175                           	callstack 0
   176   000003                     ___xxtofl@val:
   177                           	callstack 0
   178                           
   179                           ; 4 bytes @ 0x2
   180   000003                     	ds	1
   181   000004                     ??_LCDInit:
   182   000004                     WriteByte@data:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x3
   186   000004                     	ds	1
   187   000005                     WriteByte@cmd:
   188                           	callstack 0
   189   000005                     ___awdiv@counter:
   190                           	callstack 0
   191   000005                     ___awmod@counter:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x4
   195   000005                     	ds	1
   196   000006                     LCDGoto@row:
   197                           	callstack 0
   198   000006                     LCDPutChar@data:
   199                           	callstack 0
   200   000006                     ___awdiv@sign:
   201                           	callstack 0
   202   000006                     ___awmod@sign:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0x5
   206   000006                     	ds	1
   207   000007                     ??_LCDGoto:
   208   000007                     ??___xxtofl:
   209   000007                     LCDWriteStr@string:
   210                           	callstack 0
   211   000007                     ___awdiv@quotient:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x6
   215   000007                     	ds	2
   216   000009                     ??_LCDWriteStr:
   217   000009                     _LCDGoto$239:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x8
   221   000009                     	ds	2
   222   00000B                     LCDGoto@column:
   223                           	callstack 0
   224   00000B                     LCDWriteStr@i:
   225                           	callstack 0
   226   00000B                     ___xxtofl@sign:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0xA
   230   00000B                     	ds	1
   231   00000C                     LCDWriteInt@row:
   232                           	callstack 0
   233   00000C                     ___xxtofl@exp:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0xB
   237   00000C                     	ds	1
   238   00000D                     LCDWriteInt@value:
   239                           	callstack 0
   240   00000D                     ___xxtofl@arg:
   241                           	callstack 0
   242                           
   243                           ; 4 bytes @ 0xC
   244   00000D                     	ds	1
   245   00000E                     LCDWriteInt@column:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0xD
   249   00000E                     	ds	1
   250   00000F                     LCDWriteInt@string:
   251                           	callstack 0
   252                           
   253                           ; 3 bytes @ 0xE
   254   00000F                     	ds	2
   255   000011                     ?_readTemperature:
   256                           	callstack 0
   257                           
   258                           ; 4 bytes @ 0x10
   259   000011                     	ds	4
   260   000015                     ??_readTemperature:
   261                           
   262                           ; 1 bytes @ 0x14
   263   000015                     	ds	1
   264   000016                     readTemperature@temperature:
   265                           	callstack 0
   266                           
   267                           ; 4 bytes @ 0x15
   268   000016                     	ds	4
   269   00001A                     ?___fltol:
   270                           	callstack 0
   271   00001A                     ___fltol@f1:
   272                           	callstack 0
   273                           
   274                           ; 4 bytes @ 0x19
   275   00001A                     	ds	4
   276   00001E                     ??___fltol:
   277                           
   278                           ; 1 bytes @ 0x1D
   279   00001E                     	ds	4
   280   000022                     ___fltol@sign1:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x21
   284   000022                     	ds	1
   285   000023                     ___fltol@exp1:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x22
   289   000023                     	ds	1
   290   000024                     main@temperature:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x23
   294   000024                     	ds	2
   295                           
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 90 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  temperature     2   35[COMRAM] int 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  2   33[None  ] int 
   308 ;; Registers used:
   309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;Total ram usage:        2 bytes
   320 ;; Hardware stack levels required when called: 5
   321 ;; This function calls:
   322 ;;		_LCDGoto
   323 ;;		_LCDInit
   324 ;;		_LCDWriteInt
   325 ;;		_LCDWriteStr
   326 ;;		___fltol
   327 ;;		_i2c_init
   328 ;;		_readTemperature
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text0
   335   0015B0                     __ptext0:
   336                           	callstack 0
   337   0015B0                     _main:
   338                           	callstack 26
   339   0015B0  8E8C               	bsf	140,7,c	;volatile
   340   0015B2  EC6C  F009         	call	_LCDInit	;wreg free
   341   0015B6  ECF4  F00B         	call	_i2c_init	;wreg free
   342   0015BA                     l1645:
   343   0015BA  EC47  F00B         	call	_readTemperature	;wreg free
   344   0015BE  C011  F01A         	movff	?_readTemperature,___fltol@f1
   345   0015C2  C012  F01B         	movff	?_readTemperature+1,___fltol@f1+1
   346   0015C6  C013  F01C         	movff	?_readTemperature+2,___fltol@f1+2
   347   0015CA  C014  F01D         	movff	?_readTemperature+3,___fltol@f1+3
   348   0015CE  ECE9  F008         	call	___fltol	;wreg free
   349   0015D2  C01A  F024         	movff	?___fltol,main@temperature
   350   0015D6  C01B  F025         	movff	?___fltol+1,main@temperature+1
   351   0015DA  0E00               	movlw	0
   352   0015DC  6E06               	movwf	LCDGoto@row^0,c
   353   0015DE  0E00               	movlw	0
   354   0015E0  EC12  F00B         	call	_LCDGoto
   355   0015E4  0E12               	movlw	low STR_1
   356   0015E6  6E07               	movwf	LCDWriteStr@string^0,c
   357   0015E8  5007               	movf	LCDWriteStr@string^0,w,c
   358   0015EA  A4D8               	btfss	status,2,c
   359   0015EC  0E10               	movlw	high __smallconst
   360   0015EE  6E08               	movwf	(LCDWriteStr@string+1)^0,c
   361   0015F0  EC9A  F00A         	call	_LCDWriteStr	;wreg free
   362   0015F4  0E01               	movlw	1
   363   0015F6  6E0C               	movwf	LCDWriteInt@row^0,c
   364   0015F8  C024  F00D         	movff	main@temperature,LCDWriteInt@value
   365   0015FC  0E00               	movlw	0
   366   0015FE  EC7A  F00B         	call	_LCDWriteInt
   367   001602  0E08               	movlw	8
   368   001604  6E06               	movwf	LCDGoto@row^0,c
   369   001606  0E00               	movlw	0
   370   001608  EC12  F00B         	call	_LCDGoto
   371   00160C  0E19               	movlw	low STR_2
   372   00160E  6E07               	movwf	LCDWriteStr@string^0,c
   373   001610  5007               	movf	LCDWriteStr@string^0,w,c
   374   001612  A4D8               	btfss	status,2,c
   375   001614  0E10               	movlw	high __smallconst
   376   001616  6E08               	movwf	(LCDWriteStr@string+1)^0,c
   377   001618  EC9A  F00A         	call	_LCDWriteStr	;wreg free
   378   00161C  EFDD  F00A         	goto	l1645
   379   001620  EF00  F000         	goto	start
   380   001624                     __end_of_main:
   381                           	callstack 0
   382                           
   383 ;; *************** function _readTemperature *****************
   384 ;; Defined at:
   385 ;;		line 71 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  temperature     4   21[COMRAM] float 
   390 ;; Return value:  Size  Location     Type
   391 ;;                  4   16[COMRAM] float 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;Total ram usage:        9 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; Hardware stack levels required when called: 2
   406 ;; This function calls:
   407 ;;		___xxtofl
   408 ;;		_i2c_ACK
   409 ;;		_i2c_NAK
   410 ;;		_i2c_read
   411 ;;		_i2c_repStart
   412 ;;		_i2c_start
   413 ;;		_i2c_stop
   414 ;;		_i2c_write
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text1
   421   00168E                     __ptext1:
   422                           	callstack 0
   423   00168E                     _readTemperature:
   424                           	callstack 28
   425   00168E  EC71  F00C         	call	_i2c_start	;wreg free
   426   001692  0E9A               	movlw	154
   427   001694  EC1A  F00C         	call	_i2c_write
   428   001698  EC66  F00C         	call	_i2c_ACK	;wreg free
   429   00169C  0E00               	movlw	0
   430   00169E  EC1A  F00C         	call	_i2c_write
   431   0016A2  EC66  F00C         	call	_i2c_ACK	;wreg free
   432   0016A6  EC4F  F00C         	call	_i2c_repStart	;wreg free
   433   0016AA  0E9B               	movlw	155
   434   0016AC  EC1A  F00C         	call	_i2c_write
   435   0016B0  EC66  F00C         	call	_i2c_ACK	;wreg free
   436   0016B4  EC0A  F00C         	call	_i2c_read	;wreg free
   437   0016B8  6E15               	movwf	??_readTemperature^0,c
   438   0016BA  5015               	movf	??_readTemperature^0,w,c
   439   0016BC  6E03               	movwf	___xxtofl@val^0,c
   440   0016BE  6A04               	clrf	(___xxtofl@val+1)^0,c
   441   0016C0  6A05               	clrf	(___xxtofl@val+2)^0,c
   442   0016C2  6A06               	clrf	(___xxtofl@val+3)^0,c
   443   0016C4  0E00               	movlw	0
   444   0016C6  EC0F  F008         	call	___xxtofl
   445   0016CA  C003  F016         	movff	?___xxtofl,readTemperature@temperature
   446   0016CE  C004  F017         	movff	?___xxtofl+1,readTemperature@temperature+1
   447   0016D2  C005  F018         	movff	?___xxtofl+2,readTemperature@temperature+2
   448   0016D6  C006  F019         	movff	?___xxtofl+3,readTemperature@temperature+3
   449   0016DA  EC5B  F00C         	call	_i2c_NAK	;wreg free
   450   0016DE  EC43  F00C         	call	_i2c_stop	;wreg free
   451   0016E2  C016  F011         	movff	readTemperature@temperature,?_readTemperature
   452   0016E6  C017  F012         	movff	readTemperature@temperature+1,?_readTemperature+1
   453   0016EA  C018  F013         	movff	readTemperature@temperature+2,?_readTemperature+2
   454   0016EE  C019  F014         	movff	readTemperature@temperature+3,?_readTemperature+3
   455   0016F2  0012               	return		;funcret
   456   0016F4                     __end_of_readTemperature:
   457                           	callstack 0
   458                           
   459 ;; *************** function _i2c_write *****************
   460 ;; Defined at:
   461 ;;		line 102 in file "i2c.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;  i2cWriteData    1    wreg     unsigned char 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  i2cWriteData    1    1[COMRAM] unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:        1 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 1
   482 ;; This function calls:
   483 ;;		_i2c_waitForIdle
   484 ;; This function is called by:
   485 ;;		_readTemperature
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text2
   490   001834                     __ptext2:
   491                           	callstack 0
   492   001834                     _i2c_write:
   493                           	callstack 28
   494                           
   495                           ;incstack = 0
   496                           ;i2c_write@i2cWriteData stored from wreg
   497   001834  6E02               	movwf	i2c_write@i2cWriteData^0,c
   498   001836                     
   499                           ;i2c.c: 104:     i2c_waitForIdle();
   500   001836  ECDE  F00B         	call	_i2c_waitForIdle	;wreg free
   501   00183A                     
   502                           ;i2c.c: 106:     PIR1bits.SSP1IF = 0;
   503   00183A  969E               	bcf	158,3,c	;volatile
   504   00183C                     
   505                           ;i2c.c: 107:     SSP1BUF = i2cWriteData;
   506   00183C  C002  FFC9         	movff	i2c_write@i2cWriteData,4041	;volatile
   507   001840                     l178:
   508   001840  A69E               	btfss	158,3,c	;volatile
   509   001842  EF25  F00C         	goto	u71
   510   001846  EF27  F00C         	goto	u70
   511   00184A                     u71:
   512   00184A  EF20  F00C         	goto	l178
   513   00184E                     u70:
   514   00184E  0012               	return		;funcret
   515   001850                     __end_of_i2c_write:
   516                           	callstack 0
   517                           
   518 ;; *************** function _i2c_stop *****************
   519 ;; Defined at:
   520 ;;		line 64 in file "i2c.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used: 1
   540 ;; Hardware stack levels required when called: 1
   541 ;; This function calls:
   542 ;;		_i2c_waitForIdle
   543 ;; This function is called by:
   544 ;;		_readTemperature
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text3
   549   001886                     __ptext3:
   550                           	callstack 0
   551   001886                     _i2c_stop:
   552                           	callstack 28
   553   001886                     
   554                           ;i2c.c: 66:     i2c_waitForIdle();
   555   001886  ECDE  F00B         	call	_i2c_waitForIdle	;wreg free
   556   00188A                     
   557                           ;i2c.c: 68:     PIR1bits.SSP1IF = 0;
   558   00188A  969E               	bcf	158,3,c	;volatile
   559   00188C                     
   560                           ;i2c.c: 69:     SSP1CON2bits.PEN = 1;
   561   00188C  84C5               	bsf	197,2,c	;volatile
   562   00188E                     l154:
   563   00188E  A69E               	btfss	158,3,c	;volatile
   564   001890  EF4C  F00C         	goto	u121
   565   001894  EF4E  F00C         	goto	u120
   566   001898                     u121:
   567   001898  EF47  F00C         	goto	l154
   568   00189C                     u120:
   569   00189C  0012               	return		;funcret
   570   00189E                     __end_of_i2c_stop:
   571                           	callstack 0
   572                           
   573 ;; *************** function _i2c_start *****************
   574 ;; Defined at:
   575 ;;		line 48 in file "i2c.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		None
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_readTemperature
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text4
   603   0018E2                     __ptext4:
   604                           	callstack 0
   605   0018E2                     _i2c_start:
   606                           	callstack 29
   607   0018E2                     
   608                           ;i2c.c: 50:     PIR1bits.SSP1IF = 0;
   609   0018E2  969E               	bcf	158,3,c	;volatile
   610                           
   611                           ;i2c.c: 51:     SSP1CON2bits.SEN = 1;
   612   0018E4  80C5               	bsf	197,0,c	;volatile
   613   0018E6                     l142:
   614   0018E6  A69E               	btfss	158,3,c	;volatile
   615   0018E8  EF78  F00C         	goto	u61
   616   0018EC  EF7A  F00C         	goto	u60
   617   0018F0                     u61:
   618   0018F0  EF73  F00C         	goto	l142
   619   0018F4                     u60:
   620   0018F4  0012               	return		;funcret
   621   0018F6                     __end_of_i2c_start:
   622                           	callstack 0
   623                           
   624 ;; *************** function _i2c_repStart *****************
   625 ;; Defined at:
   626 ;;		line 55 in file "i2c.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 1
   647 ;; This function calls:
   648 ;;		_i2c_waitForIdle
   649 ;; This function is called by:
   650 ;;		_readTemperature
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text5
   655   00189E                     __ptext5:
   656                           	callstack 0
   657   00189E                     _i2c_repStart:
   658                           	callstack 28
   659   00189E                     
   660                           ;i2c.c: 57:     i2c_waitForIdle();
   661   00189E  ECDE  F00B         	call	_i2c_waitForIdle	;wreg free
   662   0018A2                     
   663                           ;i2c.c: 59:     PIR1bits.SSP1IF = 0;
   664   0018A2  969E               	bcf	158,3,c	;volatile
   665   0018A4                     
   666                           ;i2c.c: 60:     SSP1CON2bits.RSEN = 1;
   667   0018A4  82C5               	bsf	197,1,c	;volatile
   668   0018A6                     l148:
   669   0018A6  A69E               	btfss	158,3,c	;volatile
   670   0018A8  EF58  F00C         	goto	u91
   671   0018AC  EF5A  F00C         	goto	u90
   672   0018B0                     u91:
   673   0018B0  EF53  F00C         	goto	l148
   674   0018B4                     u90:
   675   0018B4  0012               	return		;funcret
   676   0018B6                     __end_of_i2c_repStart:
   677                           	callstack 0
   678                           
   679 ;; *************** function _i2c_read *****************
   680 ;; Defined at:
   681 ;;		line 88 in file "i2c.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  i2cReadData     1    1[COMRAM] unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      unsigned char 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;Total ram usage:        1 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; Hardware stack levels required when called: 1
   702 ;; This function calls:
   703 ;;		_i2c_waitForIdle
   704 ;; This function is called by:
   705 ;;		_readTemperature
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text6
   710   001814                     __ptext6:
   711                           	callstack 0
   712   001814                     _i2c_read:
   713                           	callstack 28
   714   001814                     
   715                           ;i2c.c: 91:     i2c_waitForIdle();
   716   001814  ECDE  F00B         	call	_i2c_waitForIdle	;wreg free
   717   001818                     
   718                           ;i2c.c: 93:     PIR1bits.SSP1IF = 0;
   719   001818  969E               	bcf	158,3,c	;volatile
   720   00181A                     
   721                           ;i2c.c: 94:     SSP1CON2bits.RCEN = 1;
   722   00181A  86C5               	bsf	197,3,c	;volatile
   723   00181C                     l172:
   724   00181C  A0C7               	btfss	199,0,c	;volatile
   725   00181E  EF13  F00C         	goto	u101
   726   001822  EF15  F00C         	goto	u100
   727   001826                     u101:
   728   001826  EF0E  F00C         	goto	l172
   729   00182A                     u100:
   730   00182A                     
   731                           ;i2c.c: 97:     PIR1bits.SSP1IF = 0;
   732   00182A  969E               	bcf	158,3,c	;volatile
   733                           
   734                           ;i2c.c: 98:     i2cReadData = SSP1BUF;
   735   00182C  CFC9 F002          	movff	4041,i2c_read@i2cReadData	;volatile
   736   001830                     
   737                           ;i2c.c: 99:     return i2cReadData;
   738   001830  5002               	movf	i2c_read@i2cReadData^0,w,c
   739   001832  0012               	return		;funcret
   740   001834                     __end_of_i2c_read:
   741                           	callstack 0
   742                           
   743 ;; *************** function _i2c_waitForIdle *****************
   744 ;; Defined at:
   745 ;;		line 42 in file "i2c.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;Total ram usage:        1 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_i2c_repStart
   769 ;;		_i2c_stop
   770 ;;		_i2c_read
   771 ;;		_i2c_write
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text7
   776   0017BC                     __ptext7:
   777                           	callstack 0
   778   0017BC                     _i2c_waitForIdle:
   779                           	callstack 28
   780   0017BC                     l913:
   781   0017BC  B4C7               	btfsc	199,2,c	;volatile
   782   0017BE  EFE3  F00B         	goto	u41
   783   0017C2  EFE7  F00B         	goto	u40
   784   0017C6                     u41:
   785   0017C6  6A01               	clrf	??_i2c_waitForIdle^0,c
   786   0017C8  2A01               	incf	??_i2c_waitForIdle^0,f,c
   787   0017CA  EFE8  F00B         	goto	u48
   788   0017CE                     u40:
   789   0017CE  6A01               	clrf	??_i2c_waitForIdle^0,c
   790   0017D0                     u48:
   791   0017D0  50C5               	movf	197,w,c	;volatile
   792   0017D2  0B1F               	andlw	31
   793   0017D4  1001               	iorwf	??_i2c_waitForIdle^0,w,c
   794   0017D6  0900               	iorlw	0
   795   0017D8  A4D8               	btfss	status,2,c
   796   0017DA  EFF1  F00B         	goto	u51
   797   0017DE  EFF3  F00B         	goto	u50
   798   0017E2                     u51:
   799   0017E2  EFDE  F00B         	goto	l913
   800   0017E6                     u50:
   801   0017E6  0012               	return		;funcret
   802   0017E8                     __end_of_i2c_waitForIdle:
   803                           	callstack 0
   804                           
   805 ;; *************** function _i2c_NAK *****************
   806 ;; Defined at:
   807 ;;		line 80 in file "i2c.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		None
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;Total ram usage:        0 bytes
   826 ;; Hardware stack levels used: 1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_readTemperature
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text8
   835   0018B6                     __ptext8:
   836                           	callstack 0
   837   0018B6                     _i2c_NAK:
   838                           	callstack 29
   839   0018B6                     
   840                           ;i2c.c: 82:     PIR1bits.SSP1IF = 0;
   841   0018B6  969E               	bcf	158,3,c	;volatile
   842                           
   843                           ;i2c.c: 83:     SSP1CON2bits.ACKDT = 1;
   844   0018B8  8AC5               	bsf	197,5,c	;volatile
   845                           
   846                           ;i2c.c: 84:     SSP1CON2bits.ACKEN = 1;
   847   0018BA  88C5               	bsf	197,4,c	;volatile
   848   0018BC                     l166:
   849   0018BC  A69E               	btfss	158,3,c	;volatile
   850   0018BE  EF63  F00C         	goto	u111
   851   0018C2  EF65  F00C         	goto	u110
   852   0018C6                     u111:
   853   0018C6  EF5E  F00C         	goto	l166
   854   0018CA                     u110:
   855   0018CA  0012               	return		;funcret
   856   0018CC                     __end_of_i2c_NAK:
   857                           	callstack 0
   858                           
   859 ;; *************** function _i2c_ACK *****************
   860 ;; Defined at:
   861 ;;		line 73 in file "i2c.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		None
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;Total ram usage:        0 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_readTemperature
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text9
   889   0018CC                     __ptext9:
   890                           	callstack 0
   891   0018CC                     _i2c_ACK:
   892                           	callstack 29
   893   0018CC                     
   894                           ;i2c.c: 75:     PIR1bits.SSP1IF = 0;
   895   0018CC  969E               	bcf	158,3,c	;volatile
   896                           
   897                           ;i2c.c: 76:     SSP1CON2bits.ACKDT= 0;
   898   0018CE  9AC5               	bcf	197,5,c	;volatile
   899                           
   900                           ;i2c.c: 77:     SSP1CON2bits.ACKEN = 1;
   901   0018D0  88C5               	bsf	197,4,c	;volatile
   902   0018D2                     l160:
   903   0018D2  A69E               	btfss	158,3,c	;volatile
   904   0018D4  EF6E  F00C         	goto	u81
   905   0018D8  EF70  F00C         	goto	u80
   906   0018DC                     u81:
   907   0018DC  EF69  F00C         	goto	l160
   908   0018E0                     u80:
   909   0018E0  0012               	return		;funcret
   910   0018E2                     __end_of_i2c_ACK:
   911                           	callstack 0
   912                           
   913 ;; *************** function ___xxtofl *****************
   914 ;; Defined at:
   915 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  sign            1    wreg     unsigned char 
   918 ;;  val             4    2[COMRAM] long 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  sign            1   10[COMRAM] unsigned char 
   921 ;;  arg             4   12[COMRAM] unsigned long 
   922 ;;  exp             1   11[COMRAM] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  4    2[COMRAM] unsigned char 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;Total ram usage:       14 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_readTemperature
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text10
   946   00101E                     __ptext10:
   947                           	callstack 0
   948   00101E                     ___xxtofl:
   949                           	callstack 29
   950                           
   951                           ;incstack = 0
   952                           ;___xxtofl@sign stored from wreg
   953   00101E  6E0B               	movwf	___xxtofl@sign^0,c
   954   001020  500B               	movf	___xxtofl@sign^0,w,c
   955   001022  B4D8               	btfsc	status,2,c
   956   001024  EF16  F008         	goto	u701
   957   001028  EF18  F008         	goto	u700
   958   00102C                     u701:
   959   00102C  EF3A  F008         	goto	l839
   960   001030                     u700:
   961   001030  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
   962   001032  EF1F  F008         	goto	u710
   963   001036  EF1D  F008         	goto	u711
   964   00103A                     u711:
   965   00103A  EF3A  F008         	goto	l839
   966   00103E                     u710:
   967   00103E  C003  F007         	movff	___xxtofl@val,??___xxtofl
   968   001042  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
   969   001046  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
   970   00104A  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
   971   00104E  1E07               	comf	??___xxtofl^0,f,c
   972   001050  1E08               	comf	(??___xxtofl+1)^0,f,c
   973   001052  1E09               	comf	(??___xxtofl+2)^0,f,c
   974   001054  1E0A               	comf	(??___xxtofl+3)^0,f,c
   975   001056  2A07               	incf	??___xxtofl^0,f,c
   976   001058  0E00               	movlw	0
   977   00105A  2208               	addwfc	(??___xxtofl+1)^0,f,c
   978   00105C  2209               	addwfc	(??___xxtofl+2)^0,f,c
   979   00105E  220A               	addwfc	(??___xxtofl+3)^0,f,c
   980   001060  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
   981   001064  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
   982   001068  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
   983   00106C  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
   984   001070  EF42  F008         	goto	l1473
   985   001074                     l839:
   986   001074  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
   987   001078  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
   988   00107C  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
   989   001080  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
   990   001084                     l1473:
   991   001084  5003               	movf	___xxtofl@val^0,w,c
   992   001086  1004               	iorwf	(___xxtofl@val+1)^0,w,c
   993   001088  1005               	iorwf	(___xxtofl@val+2)^0,w,c
   994   00108A  1006               	iorwf	(___xxtofl@val+3)^0,w,c
   995   00108C  A4D8               	btfss	status,2,c
   996   00108E  EF4B  F008         	goto	u721
   997   001092  EF4D  F008         	goto	u720
   998   001096                     u721:
   999   001096  EF57  F008         	goto	l1479
  1000   00109A                     u720:
  1001   00109A  0E00               	movlw	0
  1002   00109C  6E03               	movwf	?___xxtofl^0,c
  1003   00109E  0E00               	movlw	0
  1004   0010A0  6E04               	movwf	(?___xxtofl+1)^0,c
  1005   0010A2  0E00               	movlw	0
  1006   0010A4  6E05               	movwf	(?___xxtofl+2)^0,c
  1007   0010A6  0E00               	movlw	0
  1008   0010A8  6E06               	movwf	(?___xxtofl+3)^0,c
  1009   0010AA  EFE8  F008         	goto	l842
  1010   0010AE                     l1479:
  1011   0010AE  0E96               	movlw	150
  1012   0010B0  6E0C               	movwf	___xxtofl@exp^0,c
  1013   0010B2  EF61  F008         	goto	l1483
  1014   0010B6                     l1481:
  1015   0010B6  2A0C               	incf	___xxtofl@exp^0,f,c
  1016   0010B8  90D8               	bcf	status,0,c
  1017   0010BA  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  1018   0010BC  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  1019   0010BE  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  1020   0010C0  320D               	rrcf	___xxtofl@arg^0,f,c
  1021   0010C2                     l1483:
  1022   0010C2  0E00               	movlw	0
  1023   0010C4  140D               	andwf	___xxtofl@arg^0,w,c
  1024   0010C6  6E07               	movwf	??___xxtofl^0,c
  1025   0010C8  0E00               	movlw	0
  1026   0010CA  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  1027   0010CC  6E08               	movwf	(??___xxtofl+1)^0,c
  1028   0010CE  0E00               	movlw	0
  1029   0010D0  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  1030   0010D2  6E09               	movwf	(??___xxtofl+2)^0,c
  1031   0010D4  0EFE               	movlw	254
  1032   0010D6  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  1033   0010D8  6E0A               	movwf	(??___xxtofl+3)^0,c
  1034   0010DA  5007               	movf	??___xxtofl^0,w,c
  1035   0010DC  1008               	iorwf	(??___xxtofl+1)^0,w,c
  1036   0010DE  1009               	iorwf	(??___xxtofl+2)^0,w,c
  1037   0010E0  100A               	iorwf	(??___xxtofl+3)^0,w,c
  1038   0010E2  A4D8               	btfss	status,2,c
  1039   0010E4  EF76  F008         	goto	u731
  1040   0010E8  EF78  F008         	goto	u730
  1041   0010EC                     u731:
  1042   0010EC  EF5B  F008         	goto	l1481
  1043   0010F0                     u730:
  1044   0010F0  EF86  F008         	goto	l846
  1045   0010F4                     l1485:
  1046   0010F4  2A0C               	incf	___xxtofl@exp^0,f,c
  1047   0010F6  0E01               	movlw	1
  1048   0010F8  260D               	addwf	___xxtofl@arg^0,f,c
  1049   0010FA  0E00               	movlw	0
  1050   0010FC  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  1051   0010FE  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  1052   001100  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  1053   001102  90D8               	bcf	status,0,c
  1054   001104  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  1055   001106  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  1056   001108  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  1057   00110A  320D               	rrcf	___xxtofl@arg^0,f,c
  1058   00110C                     l846:
  1059   00110C  0E00               	movlw	0
  1060   00110E  140D               	andwf	___xxtofl@arg^0,w,c
  1061   001110  6E07               	movwf	??___xxtofl^0,c
  1062   001112  0E00               	movlw	0
  1063   001114  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  1064   001116  6E08               	movwf	(??___xxtofl+1)^0,c
  1065   001118  0E00               	movlw	0
  1066   00111A  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  1067   00111C  6E09               	movwf	(??___xxtofl+2)^0,c
  1068   00111E  0EFF               	movlw	255
  1069   001120  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  1070   001122  6E0A               	movwf	(??___xxtofl+3)^0,c
  1071   001124  5007               	movf	??___xxtofl^0,w,c
  1072   001126  1008               	iorwf	(??___xxtofl+1)^0,w,c
  1073   001128  1009               	iorwf	(??___xxtofl+2)^0,w,c
  1074   00112A  100A               	iorwf	(??___xxtofl+3)^0,w,c
  1075   00112C  A4D8               	btfss	status,2,c
  1076   00112E  EF9B  F008         	goto	u741
  1077   001132  EF9D  F008         	goto	u740
  1078   001136                     u741:
  1079   001136  EF7A  F008         	goto	l1485
  1080   00113A                     u740:
  1081   00113A  EFA5  F008         	goto	l1493
  1082   00113E                     l1491:
  1083   00113E  060C               	decf	___xxtofl@exp^0,f,c
  1084   001140  90D8               	bcf	status,0,c
  1085   001142  360D               	rlcf	___xxtofl@arg^0,f,c
  1086   001144  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  1087   001146  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  1088   001148  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  1089   00114A                     l1493:
  1090   00114A  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  1091   00114C  EFAA  F008         	goto	u751
  1092   001150  EFAC  F008         	goto	u750
  1093   001154                     u751:
  1094   001154  EFB4  F008         	goto	l853
  1095   001158                     u750:
  1096   001158  0E02               	movlw	2
  1097   00115A  600C               	cpfslt	___xxtofl@exp^0,c
  1098   00115C  EFB2  F008         	goto	u761
  1099   001160  EFB4  F008         	goto	u760
  1100   001164                     u761:
  1101   001164  EF9F  F008         	goto	l1491
  1102   001168                     u760:
  1103   001168                     l853:
  1104   001168  B00C               	btfsc	___xxtofl@exp^0,0,c
  1105   00116A  EFB9  F008         	goto	u771
  1106   00116E  EFBB  F008         	goto	u770
  1107   001172                     u771:
  1108   001172  EFBC  F008         	goto	l1499
  1109   001176                     u770:
  1110   001176  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  1111   001178                     l1499:
  1112   001178  90D8               	bcf	status,0,c
  1113   00117A  320C               	rrcf	___xxtofl@exp^0,f,c
  1114   00117C  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  1115   001180  6A08               	clrf	(??___xxtofl+1)^0,c
  1116   001182  6A09               	clrf	(??___xxtofl+2)^0,c
  1117   001184  6A0A               	clrf	(??___xxtofl+3)^0,c
  1118   001186  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  1119   00118A  6A09               	clrf	(??___xxtofl+2)^0,c
  1120   00118C  6A08               	clrf	(??___xxtofl+1)^0,c
  1121   00118E  6A07               	clrf	??___xxtofl^0,c
  1122   001190  5007               	movf	??___xxtofl^0,w,c
  1123   001192  120D               	iorwf	___xxtofl@arg^0,f,c
  1124   001194  5008               	movf	(??___xxtofl+1)^0,w,c
  1125   001196  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  1126   001198  5009               	movf	(??___xxtofl+2)^0,w,c
  1127   00119A  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  1128   00119C  500A               	movf	(??___xxtofl+3)^0,w,c
  1129   00119E  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  1130   0011A0  500B               	movf	___xxtofl@sign^0,w,c
  1131   0011A2  B4D8               	btfsc	status,2,c
  1132   0011A4  EFD6  F008         	goto	u781
  1133   0011A8  EFD8  F008         	goto	u780
  1134   0011AC                     u781:
  1135   0011AC  EFE0  F008         	goto	l1509
  1136   0011B0                     u780:
  1137   0011B0  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  1138   0011B2  EFDF  F008         	goto	u790
  1139   0011B6  EFDD  F008         	goto	u791
  1140   0011BA                     u791:
  1141   0011BA  EFE0  F008         	goto	l1509
  1142   0011BE                     u790:
  1143   0011BE  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  1144   0011C0                     l1509:
  1145   0011C0  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  1146   0011C4  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  1147   0011C8  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  1148   0011CC  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  1149   0011D0                     l842:
  1150   0011D0  0012               	return		;funcret
  1151   0011D2                     __end_of___xxtofl:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _i2c_init *****************
  1155 ;; Defined at:
  1156 ;;		line 19 in file "i2c.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text11
  1184   0017E8                     __ptext11:
  1185                           	callstack 0
  1186   0017E8                     _i2c_init:
  1187                           	callstack 30
  1188   0017E8                     
  1189                           ;i2c.c: 21:     TRISCbits.TRISC3 = 1;
  1190   0017E8  8694               	bsf	148,3,c	;volatile
  1191                           
  1192                           ;i2c.c: 22:     TRISCbits.TRISC4 = 1;
  1193   0017EA  8894               	bsf	148,4,c	;volatile
  1194                           
  1195                           ;i2c.c: 23:     ANSELCbits.ANSC3 = 0;
  1196   0017EC  010F               	movlb	15	; () banked
  1197   0017EE  973A               	bcf	58,3,b	;volatile
  1198                           
  1199                           ;i2c.c: 24:     ANSELCbits.ANSC4 = 0;
  1200   0017F0  993A               	bcf	58,4,b	;volatile
  1201   0017F2                     
  1202                           ; BSR set to: 15
  1203                           ;i2c.c: 26:     SSP1CON1 = 0b00101000;
  1204   0017F2  0E28               	movlw	40
  1205   0017F4  6EC6               	movwf	198,c	;volatile
  1206   0017F6                     
  1207                           ; BSR set to: 15
  1208                           ;i2c.c: 27:     __nop();
  1209   0017F6  0000               	nop	
  1210   0017F8                     
  1211                           ;i2c.c: 28:     __nop();
  1212   0017F8  0000               	nop	
  1213   0017FA                     
  1214                           ;i2c.c: 29:     __nop();
  1215   0017FA  0000               	nop	
  1216                           
  1217                           ;i2c.c: 30:     SSP1ADD = 9;
  1218   0017FC  0E09               	movlw	9
  1219   0017FE  6EC8               	movwf	200,c	;volatile
  1220   001800                     
  1221                           ;i2c.c: 31:     __nop();
  1222   001800  0000               	nop	
  1223   001802                     
  1224                           ;i2c.c: 32:     __nop();
  1225   001802  0000               	nop	
  1226   001804                     
  1227                           ;i2c.c: 33:     __nop();
  1228   001804  0000               	nop	
  1229   001806                     
  1230                           ;i2c.c: 34:     SSP1STATbits.SMP = 1;
  1231   001806  8EC7               	bsf	199,7,c	;volatile
  1232   001808                     
  1233                           ;i2c.c: 35:     SSP1STATbits.CKE = 1;
  1234   001808  8CC7               	bsf	199,6,c	;volatile
  1235   00180A                     
  1236                           ;i2c.c: 36:     SSP1CON3bits.SCIE = 0;
  1237   00180A  9ACB               	bcf	203,5,c	;volatile
  1238   00180C                     
  1239                           ;i2c.c: 37:     SSP1CON3bits.PCIE = 0;
  1240   00180C  9CCB               	bcf	203,6,c	;volatile
  1241   00180E                     
  1242                           ;i2c.c: 38:     PIR1bits.SSP1IF = 0;
  1243   00180E  969E               	bcf	158,3,c	;volatile
  1244   001810                     
  1245                           ;i2c.c: 39:     PIR2bits.BCL1IF = 0;
  1246   001810  96A1               	bcf	161,3,c	;volatile
  1247   001812  0012               	return		;funcret
  1248   001814                     __end_of_i2c_init:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function ___fltol *****************
  1252 ;; Defined at:
  1253 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  f1              4   25[COMRAM] void 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  exp1            1   34[COMRAM] unsigned char 
  1258 ;;  sign1           1   33[COMRAM] unsigned char 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  4   25[COMRAM] long 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;Total ram usage:       10 bytes
  1273 ;; Hardware stack levels used: 1
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;;		_LCDWriteFloat
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text12
  1283   0011D2                     __ptext12:
  1284                           	callstack 0
  1285   0011D2                     ___fltol:
  1286                           	callstack 30
  1287   0011D2  341C               	rlcf	(___fltol@f1+2)^0,w,c
  1288   0011D4  341D               	rlcf	(___fltol@f1+3)^0,w,c
  1289   0011D6  6E23               	movwf	___fltol@exp1^0,c
  1290   0011D8  5023               	movf	___fltol@exp1^0,w,c
  1291   0011DA  A4D8               	btfss	status,2,c
  1292   0011DC  EFF2  F008         	goto	u801
  1293   0011E0  EFF4  F008         	goto	u800
  1294   0011E4                     u801:
  1295   0011E4  EFFE  F008         	goto	l1601
  1296   0011E8                     u800:
  1297   0011E8                     l1597:
  1298   0011E8  0E00               	movlw	0
  1299   0011EA  6E1A               	movwf	?___fltol^0,c
  1300   0011EC  0E00               	movlw	0
  1301   0011EE  6E1B               	movwf	(?___fltol+1)^0,c
  1302   0011F0  0E00               	movlw	0
  1303   0011F2  6E1C               	movwf	(?___fltol+2)^0,c
  1304   0011F4  0E00               	movlw	0
  1305   0011F6  6E1D               	movwf	(?___fltol+3)^0,c
  1306   0011F8  EF6B  F009         	goto	l481
  1307   0011FC                     l1601:
  1308   0011FC  C01A  F01E         	movff	___fltol@f1,??___fltol
  1309   001200  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  1310   001204  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  1311   001208  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  1312   00120C  0E20               	movlw	32
  1313   00120E  EF0E  F009         	goto	u810
  1314   001212                     u815:
  1315   001212  90D8               	bcf	status,0,c
  1316   001214  3221               	rrcf	(??___fltol+3)^0,f,c
  1317   001216  3220               	rrcf	(??___fltol+2)^0,f,c
  1318   001218  321F               	rrcf	(??___fltol+1)^0,f,c
  1319   00121A  321E               	rrcf	??___fltol^0,f,c
  1320   00121C                     u810:
  1321   00121C  2EE8               	decfsz	wreg,f,c
  1322   00121E  EF09  F009         	goto	u815
  1323   001222  501E               	movf	??___fltol^0,w,c
  1324   001224  6E22               	movwf	___fltol@sign1^0,c
  1325   001226  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  1326   001228  0EFF               	movlw	255
  1327   00122A  161A               	andwf	___fltol@f1^0,f,c
  1328   00122C  0EFF               	movlw	255
  1329   00122E  161B               	andwf	(___fltol@f1+1)^0,f,c
  1330   001230  0EFF               	movlw	255
  1331   001232  161C               	andwf	(___fltol@f1+2)^0,f,c
  1332   001234  0E00               	movlw	0
  1333   001236  161D               	andwf	(___fltol@f1+3)^0,f,c
  1334   001238  0E96               	movlw	150
  1335   00123A  5E23               	subwf	___fltol@exp1^0,f,c
  1336   00123C  BE23               	btfsc	___fltol@exp1^0,7,c
  1337   00123E  EF25  F009         	goto	u820
  1338   001242  EF23  F009         	goto	u821
  1339   001246                     u821:
  1340   001246  EF3B  F009         	goto	l1621
  1341   00124A                     u820:
  1342   00124A  5023               	movf	___fltol@exp1^0,w,c
  1343   00124C  0A80               	xorlw	128
  1344   00124E  0F97               	addlw	151
  1345   001250  B0D8               	btfsc	status,0,c
  1346   001252  EF2D  F009         	goto	u831
  1347   001256  EF2F  F009         	goto	u830
  1348   00125A                     u831:
  1349   00125A  EF31  F009         	goto	l1617
  1350   00125E                     u830:
  1351   00125E  EFF4  F008         	goto	l1597
  1352   001262                     l1617:
  1353   001262  90D8               	bcf	status,0,c
  1354   001264  321D               	rrcf	(___fltol@f1+3)^0,f,c
  1355   001266  321C               	rrcf	(___fltol@f1+2)^0,f,c
  1356   001268  321B               	rrcf	(___fltol@f1+1)^0,f,c
  1357   00126A  321A               	rrcf	___fltol@f1^0,f,c
  1358   00126C  3E23               	incfsz	___fltol@exp1^0,f,c
  1359   00126E  EF31  F009         	goto	l1617
  1360   001272  EF53  F009         	goto	l1631
  1361   001276                     l1621:
  1362   001276  0E1F               	movlw	31
  1363   001278  6423               	cpfsgt	___fltol@exp1^0,c
  1364   00127A  EF41  F009         	goto	u841
  1365   00127E  EF43  F009         	goto	u840
  1366   001282                     u841:
  1367   001282  EF4B  F009         	goto	l1629
  1368   001286                     u840:
  1369   001286  EFF4  F008         	goto	l1597
  1370   00128A                     l1627:
  1371   00128A  90D8               	bcf	status,0,c
  1372   00128C  361A               	rlcf	___fltol@f1^0,f,c
  1373   00128E  361B               	rlcf	(___fltol@f1+1)^0,f,c
  1374   001290  361C               	rlcf	(___fltol@f1+2)^0,f,c
  1375   001292  361D               	rlcf	(___fltol@f1+3)^0,f,c
  1376   001294  0623               	decf	___fltol@exp1^0,f,c
  1377   001296                     l1629:
  1378   001296  5023               	movf	___fltol@exp1^0,w,c
  1379   001298  A4D8               	btfss	status,2,c
  1380   00129A  EF51  F009         	goto	u851
  1381   00129E  EF53  F009         	goto	u850
  1382   0012A2                     u851:
  1383   0012A2  EF45  F009         	goto	l1627
  1384   0012A6                     u850:
  1385   0012A6                     l1631:
  1386   0012A6  5022               	movf	___fltol@sign1^0,w,c
  1387   0012A8  B4D8               	btfsc	status,2,c
  1388   0012AA  EF59  F009         	goto	u861
  1389   0012AE  EF5B  F009         	goto	u860
  1390   0012B2                     u861:
  1391   0012B2  EF63  F009         	goto	l1635
  1392   0012B6                     u860:
  1393   0012B6  1E1D               	comf	(___fltol@f1+3)^0,f,c
  1394   0012B8  1E1C               	comf	(___fltol@f1+2)^0,f,c
  1395   0012BA  1E1B               	comf	(___fltol@f1+1)^0,f,c
  1396   0012BC  6C1A               	negf	___fltol@f1^0,c
  1397   0012BE  0E00               	movlw	0
  1398   0012C0  221B               	addwfc	(___fltol@f1+1)^0,f,c
  1399   0012C2  221C               	addwfc	(___fltol@f1+2)^0,f,c
  1400   0012C4  221D               	addwfc	(___fltol@f1+3)^0,f,c
  1401   0012C6                     l1635:
  1402   0012C6  C01A  F01A         	movff	___fltol@f1,?___fltol
  1403   0012CA  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  1404   0012CE  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  1405   0012D2  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  1406   0012D6                     l481:
  1407   0012D6  0012               	return		;funcret
  1408   0012D8                     __end_of___fltol:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _LCDWriteInt *****************
  1412 ;; Defined at:
  1413 ;;		line 199 in file "lcd.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  column          1    wreg     unsigned char 
  1416 ;;  row             1   11[COMRAM] unsigned char 
  1417 ;;  value           1   12[COMRAM] unsigned char 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  column          1   13[COMRAM] unsigned char 
  1420 ;;  string          3   14[COMRAM] unsigned char [3]
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;Total ram usage:        6 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 4
  1437 ;; This function calls:
  1438 ;;		_LCDGoto
  1439 ;;		_LCDWriteStr
  1440 ;;		___awdiv
  1441 ;;		___awmod
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text13
  1448   0016F4                     __ptext13:
  1449                           	callstack 0
  1450   0016F4                     _LCDWriteInt:
  1451                           	callstack 26
  1452                           
  1453                           ;incstack = 0
  1454                           ;LCDWriteInt@column stored from wreg
  1455   0016F4  6E0E               	movwf	LCDWriteInt@column^0,c
  1456   0016F6                     
  1457                           ;lcd.c: 200:     char string[3];;lcd.c: 202:     string[0] = value / 10 + '0';
  1458   0016F6  C00D  F001         	movff	LCDWriteInt@value,___awdiv@dividend
  1459   0016FA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1460   0016FC  0E00               	movlw	0
  1461   0016FE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1462   001700  0E0A               	movlw	10
  1463   001702  6E03               	movwf	___awdiv@divisor^0,c
  1464   001704  ECE0  F009         	call	___awdiv	;wreg free
  1465   001708  5001               	movf	?___awdiv^0,w,c
  1466   00170A  0F30               	addlw	48
  1467   00170C  6E0F               	movwf	LCDWriteInt@string^0,c
  1468                           
  1469                           ;lcd.c: 203:     string[1] = value % 10 + '0';
  1470   00170E  C00D  F001         	movff	LCDWriteInt@value,___awmod@dividend
  1471   001712  6A02               	clrf	(___awmod@dividend+1)^0,c
  1472   001714  0E00               	movlw	0
  1473   001716  6E04               	movwf	(___awmod@divisor+1)^0,c
  1474   001718  0E0A               	movlw	10
  1475   00171A  6E03               	movwf	___awmod@divisor^0,c
  1476   00171C  EC42  F00A         	call	___awmod	;wreg free
  1477   001720  5001               	movf	?___awmod^0,w,c
  1478   001722  0F30               	addlw	48
  1479   001724  6E10               	movwf	(LCDWriteInt@string+1)^0,c
  1480   001726                     
  1481                           ;lcd.c: 204:     string[2] = '\0';
  1482   001726  0E00               	movlw	0
  1483   001728  6E11               	movwf	(LCDWriteInt@string+2)^0,c
  1484   00172A                     
  1485                           ;lcd.c: 206:     LCDGoto(column, row);
  1486   00172A  C00C  F006         	movff	LCDWriteInt@row,LCDGoto@row
  1487   00172E  500E               	movf	LCDWriteInt@column^0,w,c
  1488   001730  EC12  F00B         	call	_LCDGoto
  1489   001734                     
  1490                           ;lcd.c: 207:     LCDWriteStr(string);
  1491   001734  0E0F               	movlw	low LCDWriteInt@string
  1492   001736  6E07               	movwf	LCDWriteStr@string^0,c
  1493   001738  6A08               	clrf	(LCDWriteStr@string+1)^0,c
  1494   00173A  EC9A  F00A         	call	_LCDWriteStr	;wreg free
  1495   00173E  0012               	return		;funcret
  1496   001740                     __end_of_LCDWriteInt:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function ___awmod *****************
  1500 ;; Defined at:
  1501 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  dividend        2    0[COMRAM] int 
  1504 ;;  divisor         2    2[COMRAM] int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  sign            1    5[COMRAM] unsigned char 
  1507 ;;  counter         1    4[COMRAM] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  2    0[COMRAM] int 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;Total ram usage:        6 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_LCDWriteInt
  1527 ;;		_LCDPutByte
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text14
  1532   001484                     __ptext14:
  1533                           	callstack 0
  1534   001484                     ___awmod:
  1535                           	callstack 29
  1536   001484  0E00               	movlw	0
  1537   001486  6E06               	movwf	___awmod@sign^0,c
  1538   001488  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1539   00148A  EF4B  F00A         	goto	u640
  1540   00148E  EF49  F00A         	goto	u641
  1541   001492                     u641:
  1542   001492  EF51  F00A         	goto	l1439
  1543   001496                     u640:
  1544   001496  6C01               	negf	___awmod@dividend^0,c
  1545   001498  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1546   00149A  B0D8               	btfsc	status,0,c
  1547   00149C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1548   00149E  0E01               	movlw	1
  1549   0014A0  6E06               	movwf	___awmod@sign^0,c
  1550   0014A2                     l1439:
  1551   0014A2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1552   0014A4  EF58  F00A         	goto	u650
  1553   0014A8  EF56  F00A         	goto	u651
  1554   0014AC                     u651:
  1555   0014AC  EF5C  F00A         	goto	l1443
  1556   0014B0                     u650:
  1557   0014B0  6C03               	negf	___awmod@divisor^0,c
  1558   0014B2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1559   0014B4  B0D8               	btfsc	status,0,c
  1560   0014B6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1561   0014B8                     l1443:
  1562   0014B8  5003               	movf	___awmod@divisor^0,w,c
  1563   0014BA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1564   0014BC  B4D8               	btfsc	status,2,c
  1565   0014BE  EF63  F00A         	goto	u661
  1566   0014C2  EF65  F00A         	goto	u660
  1567   0014C6                     u661:
  1568   0014C6  EF89  F00A         	goto	l1459
  1569   0014CA                     u660:
  1570   0014CA  0E01               	movlw	1
  1571   0014CC  6E05               	movwf	___awmod@counter^0,c
  1572   0014CE  EF6D  F00A         	goto	l1449
  1573   0014D2                     l1447:
  1574   0014D2  90D8               	bcf	status,0,c
  1575   0014D4  3603               	rlcf	___awmod@divisor^0,f,c
  1576   0014D6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1577   0014D8  2A05               	incf	___awmod@counter^0,f,c
  1578   0014DA                     l1449:
  1579   0014DA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1580   0014DC  EF72  F00A         	goto	u671
  1581   0014E0  EF74  F00A         	goto	u670
  1582   0014E4                     u671:
  1583   0014E4  EF69  F00A         	goto	l1447
  1584   0014E8                     u670:
  1585   0014E8                     l1451:
  1586   0014E8  5003               	movf	___awmod@divisor^0,w,c
  1587   0014EA  5C01               	subwf	___awmod@dividend^0,w,c
  1588   0014EC  5004               	movf	(___awmod@divisor+1)^0,w,c
  1589   0014EE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1590   0014F0  A0D8               	btfss	status,0,c
  1591   0014F2  EF7D  F00A         	goto	u681
  1592   0014F6  EF7F  F00A         	goto	u680
  1593   0014FA                     u681:
  1594   0014FA  EF83  F00A         	goto	l1455
  1595   0014FE                     u680:
  1596   0014FE  5003               	movf	___awmod@divisor^0,w,c
  1597   001500  5E01               	subwf	___awmod@dividend^0,f,c
  1598   001502  5004               	movf	(___awmod@divisor+1)^0,w,c
  1599   001504  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1600   001506                     l1455:
  1601   001506  90D8               	bcf	status,0,c
  1602   001508  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1603   00150A  3203               	rrcf	___awmod@divisor^0,f,c
  1604   00150C  2E05               	decfsz	___awmod@counter^0,f,c
  1605   00150E  EF74  F00A         	goto	l1451
  1606   001512                     l1459:
  1607   001512  5006               	movf	___awmod@sign^0,w,c
  1608   001514  B4D8               	btfsc	status,2,c
  1609   001516  EF8F  F00A         	goto	u691
  1610   00151A  EF91  F00A         	goto	u690
  1611   00151E                     u691:
  1612   00151E  EF95  F00A         	goto	l1463
  1613   001522                     u690:
  1614   001522  6C01               	negf	___awmod@dividend^0,c
  1615   001524  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1616   001526  B0D8               	btfsc	status,0,c
  1617   001528  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1618   00152A                     l1463:
  1619   00152A  C001  F001         	movff	___awmod@dividend,?___awmod
  1620   00152E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1621   001532  0012               	return		;funcret
  1622   001534                     __end_of___awmod:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function ___awdiv *****************
  1626 ;; Defined at:
  1627 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  dividend        2    0[COMRAM] int 
  1630 ;;  divisor         2    2[COMRAM] int 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  quotient        2    6[COMRAM] int 
  1633 ;;  sign            1    5[COMRAM] unsigned char 
  1634 ;;  counter         1    4[COMRAM] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  2    0[COMRAM] int 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;Total ram usage:        8 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_LCDWriteInt
  1654 ;;		_LCDPutByte
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text15
  1659   0013C0                     __ptext15:
  1660                           	callstack 0
  1661   0013C0                     ___awdiv:
  1662                           	callstack 29
  1663   0013C0  0E00               	movlw	0
  1664   0013C2  6E06               	movwf	___awdiv@sign^0,c
  1665   0013C4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1666   0013C6  EFE9  F009         	goto	u580
  1667   0013CA  EFE7  F009         	goto	u581
  1668   0013CE                     u581:
  1669   0013CE  EFEF  F009         	goto	l1395
  1670   0013D2                     u580:
  1671   0013D2  6C03               	negf	___awdiv@divisor^0,c
  1672   0013D4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1673   0013D6  B0D8               	btfsc	status,0,c
  1674   0013D8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1675   0013DA  0E01               	movlw	1
  1676   0013DC  6E06               	movwf	___awdiv@sign^0,c
  1677   0013DE                     l1395:
  1678   0013DE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1679   0013E0  EFF6  F009         	goto	u590
  1680   0013E4  EFF4  F009         	goto	u591
  1681   0013E8                     u591:
  1682   0013E8  EFFC  F009         	goto	l1401
  1683   0013EC                     u590:
  1684   0013EC  6C01               	negf	___awdiv@dividend^0,c
  1685   0013EE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1686   0013F0  B0D8               	btfsc	status,0,c
  1687   0013F2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1688   0013F4  0E01               	movlw	1
  1689   0013F6  1A06               	xorwf	___awdiv@sign^0,f,c
  1690   0013F8                     l1401:
  1691   0013F8  0E00               	movlw	0
  1692   0013FA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1693   0013FC  0E00               	movlw	0
  1694   0013FE  6E07               	movwf	___awdiv@quotient^0,c
  1695   001400  5003               	movf	___awdiv@divisor^0,w,c
  1696   001402  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1697   001404  B4D8               	btfsc	status,2,c
  1698   001406  EF07  F00A         	goto	u601
  1699   00140A  EF09  F00A         	goto	u600
  1700   00140E                     u601:
  1701   00140E  EF31  F00A         	goto	l1423
  1702   001412                     u600:
  1703   001412  0E01               	movlw	1
  1704   001414  6E05               	movwf	___awdiv@counter^0,c
  1705   001416  EF11  F00A         	goto	l1409
  1706   00141A                     l1407:
  1707   00141A  90D8               	bcf	status,0,c
  1708   00141C  3603               	rlcf	___awdiv@divisor^0,f,c
  1709   00141E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1710   001420  2A05               	incf	___awdiv@counter^0,f,c
  1711   001422                     l1409:
  1712   001422  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1713   001424  EF16  F00A         	goto	u611
  1714   001428  EF18  F00A         	goto	u610
  1715   00142C                     u611:
  1716   00142C  EF0D  F00A         	goto	l1407
  1717   001430                     u610:
  1718   001430                     l1411:
  1719   001430  90D8               	bcf	status,0,c
  1720   001432  3607               	rlcf	___awdiv@quotient^0,f,c
  1721   001434  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1722   001436  5003               	movf	___awdiv@divisor^0,w,c
  1723   001438  5C01               	subwf	___awdiv@dividend^0,w,c
  1724   00143A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1725   00143C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1726   00143E  A0D8               	btfss	status,0,c
  1727   001440  EF24  F00A         	goto	u621
  1728   001444  EF26  F00A         	goto	u620
  1729   001448                     u621:
  1730   001448  EF2B  F00A         	goto	l1419
  1731   00144C                     u620:
  1732   00144C  5003               	movf	___awdiv@divisor^0,w,c
  1733   00144E  5E01               	subwf	___awdiv@dividend^0,f,c
  1734   001450  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1735   001452  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1736   001454  8007               	bsf	___awdiv@quotient^0,0,c
  1737   001456                     l1419:
  1738   001456  90D8               	bcf	status,0,c
  1739   001458  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1740   00145A  3203               	rrcf	___awdiv@divisor^0,f,c
  1741   00145C  2E05               	decfsz	___awdiv@counter^0,f,c
  1742   00145E  EF18  F00A         	goto	l1411
  1743   001462                     l1423:
  1744   001462  5006               	movf	___awdiv@sign^0,w,c
  1745   001464  B4D8               	btfsc	status,2,c
  1746   001466  EF37  F00A         	goto	u631
  1747   00146A  EF39  F00A         	goto	u630
  1748   00146E                     u631:
  1749   00146E  EF3D  F00A         	goto	l1427
  1750   001472                     u630:
  1751   001472  6C07               	negf	___awdiv@quotient^0,c
  1752   001474  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1753   001476  B0D8               	btfsc	status,0,c
  1754   001478  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1755   00147A                     l1427:
  1756   00147A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1757   00147E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1758   001482  0012               	return		;funcret
  1759   001484                     __end_of___awdiv:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _LCDWriteStr *****************
  1763 ;; Defined at:
  1764 ;;		line 163 in file "lcd.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  string          2    6[COMRAM] PTR const unsigned char 
  1767 ;;		 -> LCDWriteInt@string(3), LCDWriteFloat@string(5), LCDWriteHexa@string(3), STR_2(3), 
  1768 ;;		 -> STR_1(7), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  i               1   10[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;Total ram usage:        5 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 3
  1787 ;; This function calls:
  1788 ;;		_LCDPutChar
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;;		_LCDWriteInt
  1792 ;;		_LCDWriteHexa
  1793 ;;		_LCDWriteFloat
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text16
  1798   001534                     __ptext16:
  1799                           	callstack 0
  1800   001534                     _LCDWriteStr:
  1801                           	callstack 27
  1802   001534                     
  1803                           ;lcd.c: 163: void LCDWriteStr(const char *string);lcd.c: 164: {;lcd.c: 165:   UINT8_T i 
      +                          = 0;
  1804   001534  0E00               	movlw	0
  1805   001536  6E0B               	movwf	LCDWriteStr@i^0,c
  1806                           
  1807                           ;lcd.c: 167:   while (string[i])
  1808   001538  EFB8  F00A         	goto	l1385
  1809   00153C                     l1381:
  1810                           
  1811                           ;lcd.c: 168:     LCDPutChar(string[i++]);
  1812   00153C  500B               	movf	LCDWriteStr@i^0,w,c
  1813   00153E  2407               	addwf	LCDWriteStr@string^0,w,c
  1814   001540  6E09               	movwf	??_LCDWriteStr^0,c
  1815   001542  0E00               	movlw	0
  1816   001544  2008               	addwfc	(LCDWriteStr@string+1)^0,w,c
  1817   001546  6E0A               	movwf	(??_LCDWriteStr+1)^0,c
  1818   001548  C009  FFF6         	movff	??_LCDWriteStr,tblptrl
  1819   00154C  C00A  FFF7         	movff	??_LCDWriteStr+1,tblptrh
  1820   001550  0E00               	movlw	low (__smallconst shr (0+16))
  1821   001552  6EF8               	movwf	tblptru,c
  1822   001554  0E0F               	movlw	(high __ramtop+-1)
  1823   001556  64F7               	cpfsgt	tblptrh,c
  1824   001558  D003               	bra	u557
  1825   00155A  0008               	tblrd		*
  1826   00155C  50F5               	movf	tablat,w,c
  1827   00155E  D005               	bra	u550
  1828   001560                     u557:
  1829   001560  CFF6 FFE9          	movff	tblptrl,fsr0l
  1830   001564  CFF7 FFEA          	movff	tblptrh,fsr0h
  1831   001568  50EF               	movf	indf0,w,c
  1832   00156A                     u550:
  1833   00156A  EC7B  F00C         	call	_LCDPutChar
  1834   00156E  2A0B               	incf	LCDWriteStr@i^0,f,c
  1835   001570                     l1385:
  1836                           
  1837                           ;lcd.c: 167:   while (string[i])
  1838   001570  500B               	movf	LCDWriteStr@i^0,w,c
  1839   001572  2407               	addwf	LCDWriteStr@string^0,w,c
  1840   001574  6E09               	movwf	??_LCDWriteStr^0,c
  1841   001576  0E00               	movlw	0
  1842   001578  2008               	addwfc	(LCDWriteStr@string+1)^0,w,c
  1843   00157A  6E0A               	movwf	(??_LCDWriteStr+1)^0,c
  1844   00157C  C009  FFF6         	movff	??_LCDWriteStr,tblptrl
  1845   001580  C00A  FFF7         	movff	??_LCDWriteStr+1,tblptrh
  1846   001584  0E00               	movlw	low (__smallconst shr (0+16))
  1847   001586  6EF8               	movwf	tblptru,c
  1848   001588  0E0F               	movlw	(high __ramtop+-1)
  1849   00158A  64F7               	cpfsgt	tblptrh,c
  1850   00158C  D003               	bra	u567
  1851   00158E  0008               	tblrd		*
  1852   001590  50F5               	movf	tablat,w,c
  1853   001592  D005               	bra	u560
  1854   001594                     u567:
  1855   001594  CFF6 FFE9          	movff	tblptrl,fsr0l
  1856   001598  CFF7 FFEA          	movff	tblptrh,fsr0h
  1857   00159C  50EF               	movf	indf0,w,c
  1858   00159E                     u560:
  1859   00159E  0900               	iorlw	0
  1860   0015A0  A4D8               	btfss	status,2,c
  1861   0015A2  EFD5  F00A         	goto	u571
  1862   0015A6  EFD7  F00A         	goto	u570
  1863   0015AA                     u571:
  1864   0015AA  EF9E  F00A         	goto	l1381
  1865   0015AE                     u570:
  1866   0015AE  0012               	return		;funcret
  1867   0015B0                     __end_of_LCDWriteStr:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function _LCDPutChar *****************
  1871 ;; Defined at:
  1872 ;;		line 150 in file "lcd.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  data            1    wreg     unsigned char 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  data            1    5[COMRAM] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;Total ram usage:        1 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; Hardware stack levels required when called: 2
  1893 ;; This function calls:
  1894 ;;		_WaitLCD
  1895 ;;		_WriteByte
  1896 ;; This function is called by:
  1897 ;;		_LCDWriteStr
  1898 ;;		_LCDPutByte
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text17
  1903   0018F6                     __ptext17:
  1904                           	callstack 0
  1905   0018F6                     _LCDPutChar:
  1906                           	callstack 27
  1907                           
  1908                           ;incstack = 0
  1909                           ;LCDPutChar@data stored from wreg
  1910   0018F6  6E06               	movwf	LCDPutChar@data^0,c
  1911   0018F8                     
  1912                           ;lcd.c: 150: void LCDPutChar(UINT8_T data);lcd.c: 151: {;lcd.c: 152:     WriteByte(0, da
      +                          ta);
  1913   0018F8  C006  F004         	movff	LCDPutChar@data,WriteByte@data
  1914   0018FC  0E00               	movlw	0
  1915   0018FE  EC36  F00C         	call	_WriteByte
  1916                           
  1917                           ;lcd.c: 153:     WaitLCD();
  1918   001902  EC28  F00C         	call	_WaitLCD	;wreg free
  1919   001906  0012               	return		;funcret
  1920   001908                     __end_of_LCDPutChar:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _LCDGoto *****************
  1924 ;; Defined at:
  1925 ;;		line 141 in file "lcd.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  column          1    wreg     unsigned char 
  1928 ;;  row             1    5[COMRAM] unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  column          1   10[COMRAM] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1940 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;Total ram usage:        6 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 2
  1947 ;; This function calls:
  1948 ;;		_WaitLCD
  1949 ;;		_WriteByte
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;;		_LCDWriteInt
  1953 ;;		_LCDWriteHexa
  1954 ;;		_LCDWriteFloat
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text18
  1959   001624                     __ptext18:
  1960                           	callstack 0
  1961   001624                     _LCDGoto:
  1962                           	callstack 27
  1963                           
  1964                           ;incstack = 0
  1965                           ;LCDGoto@column stored from wreg
  1966   001624  6E0B               	movwf	LCDGoto@column^0,c
  1967   001626                     
  1968                           ;lcd.c: 141: void LCDGoto(UINT8_T column, UINT8_T row);lcd.c: 142: {;lcd.c: 143:     if 
      +                          ((row > (2 - 1)) || (column > (16 - 1)))
  1969   001626  0E02               	movlw	2
  1970   001628  6006               	cpfslt	LCDGoto@row^0,c
  1971   00162A  EF19  F00B         	goto	u521
  1972   00162E  EF1B  F00B         	goto	u520
  1973   001632                     u521:
  1974   001632  EF46  F00B         	goto	l75
  1975   001636                     u520:
  1976   001636  0E0F               	movlw	15
  1977   001638  640B               	cpfsgt	LCDGoto@column^0,c
  1978   00163A  EF21  F00B         	goto	u531
  1979   00163E  EF23  F00B         	goto	u530
  1980   001642                     u531:
  1981   001642  EF25  F00B         	goto	l1369
  1982   001646                     u530:
  1983   001646  EF46  F00B         	goto	l75
  1984   00164A                     l1369:
  1985                           
  1986                           ;lcd.c: 146:     WriteByte(1, (row == 1) ? (0xC0 | column) : (0x80 | column));
  1987   00164A  0406               	decf	LCDGoto@row^0,w,c
  1988   00164C  B4D8               	btfsc	status,2,c
  1989   00164E  EF2B  F00B         	goto	u541
  1990   001652  EF2D  F00B         	goto	u540
  1991   001656                     u541:
  1992   001656  EF37  F00B         	goto	l1373
  1993   00165A                     u540:
  1994   00165A  0E80               	movlw	128
  1995   00165C  C00B  F007         	movff	LCDGoto@column,??_LCDGoto
  1996   001660  6A08               	clrf	(??_LCDGoto+1)^0,c
  1997   001662  1007               	iorwf	??_LCDGoto^0,w,c
  1998   001664  6E09               	movwf	_LCDGoto$239^0,c
  1999   001666  5008               	movf	(??_LCDGoto+1)^0,w,c
  2000   001668  6E0A               	movwf	(_LCDGoto$239+1)^0,c
  2001   00166A  EF3F  F00B         	goto	l1375
  2002   00166E                     l1373:
  2003   00166E  0EC0               	movlw	192
  2004   001670  C00B  F007         	movff	LCDGoto@column,??_LCDGoto
  2005   001674  6A08               	clrf	(??_LCDGoto+1)^0,c
  2006   001676  1007               	iorwf	??_LCDGoto^0,w,c
  2007   001678  6E09               	movwf	_LCDGoto$239^0,c
  2008   00167A  5008               	movf	(??_LCDGoto+1)^0,w,c
  2009   00167C  6E0A               	movwf	(_LCDGoto$239+1)^0,c
  2010   00167E                     l1375:
  2011   00167E  C009  F004         	movff	_LCDGoto$239,WriteByte@data
  2012   001682  0E01               	movlw	1
  2013   001684  EC36  F00C         	call	_WriteByte
  2014   001688                     
  2015                           ;lcd.c: 147:     WaitLCD();
  2016   001688  EC28  F00C         	call	_WaitLCD	;wreg free
  2017   00168C                     l75:
  2018   00168C  0012               	return		;funcret
  2019   00168E                     __end_of_LCDGoto:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _WriteByte *****************
  2023 ;; Defined at:
  2024 ;;		line 88 in file "lcd.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  cmd             1    wreg     unsigned char 
  2027 ;;  data            1    3[COMRAM] unsigned char 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  cmd             1    4[COMRAM] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2039 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;Total ram usage:        2 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 1
  2046 ;; This function calls:
  2047 ;;		_WriteNibble
  2048 ;; This function is called by:
  2049 ;;		_LCDGoto
  2050 ;;		_LCDPutChar
  2051 ;;		_LCDClear
  2052 ;;		_LCDShiftDisplay
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text19
  2057   00186C                     __ptext19:
  2058                           	callstack 0
  2059   00186C                     _WriteByte:
  2060                           	callstack 27
  2061                           
  2062                           ;incstack = 0
  2063                           ;WriteByte@cmd stored from wreg
  2064   00186C  6E05               	movwf	WriteByte@cmd^0,c
  2065   00186E                     
  2066                           ;lcd.c: 88: void WriteByte(UINT8_T cmd, UINT8_T data);lcd.c: 89: {;lcd.c: 90:     WriteN
      +                          ibble(cmd, data >> 4);
  2067   00186E  3804               	swapf	WriteByte@data^0,w,c
  2068   001870  0B0F               	andlw	15
  2069   001872  6E01               	movwf	WriteNibble@data^0,c
  2070   001874  5005               	movf	WriteByte@cmd^0,w,c
  2071   001876  ECA0  F00B         	call	_WriteNibble
  2072                           
  2073                           ;lcd.c: 91:     WriteNibble(cmd, data);
  2074   00187A  C004  F001         	movff	WriteByte@data,WriteNibble@data
  2075   00187E  5005               	movf	WriteByte@cmd^0,w,c
  2076   001880  ECA0  F00B         	call	_WriteNibble
  2077   001884  0012               	return		;funcret
  2078   001886                     __end_of_WriteByte:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _LCDInit *****************
  2082 ;; Defined at:
  2083 ;;		line 94 in file "lcd.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;Total ram usage:        1 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 2
  2104 ;; This function calls:
  2105 ;;		_WaitLCD
  2106 ;;		_WriteNibble
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text20
  2113   0012D8                     __ptext20:
  2114                           	callstack 0
  2115   0012D8                     _LCDInit:
  2116                           	callstack 28
  2117   0012D8                     
  2118                           ;lcd.c: 96:     TRISDbits.TRISD7 = 0;
  2119   0012D8  9E95               	bcf	149,7,c	;volatile
  2120                           
  2121                           ;lcd.c: 97:     TRISDbits.TRISD6 = 0;
  2122   0012DA  9C95               	bcf	149,6,c	;volatile
  2123                           
  2124                           ;lcd.c: 98:     TRISDbits.TRISD5 = 0;
  2125   0012DC  9A95               	bcf	149,5,c	;volatile
  2126                           
  2127                           ;lcd.c: 99:     TRISDbits.TRISD4 = 0;
  2128   0012DE  9895               	bcf	149,4,c	;volatile
  2129                           
  2130                           ;lcd.c: 100:     TRISDbits.TRISD0 = 0;
  2131   0012E0  9095               	bcf	149,0,c	;volatile
  2132                           
  2133                           ;lcd.c: 101:     TRISDbits.TRISD1 = 0;
  2134   0012E2  9295               	bcf	149,1,c	;volatile
  2135                           
  2136                           ;lcd.c: 102:     TRISDbits.TRISD2 = 0;
  2137   0012E4  9495               	bcf	149,2,c	;volatile
  2138                           
  2139                           ;lcd.c: 103:     TRISDbits.TRISD3 = 0;
  2140   0012E6  9695               	bcf	149,3,c	;volatile
  2141                           
  2142                           ;lcd.c: 105:     LATDbits.LATD7 = 1;
  2143   0012E8  8E8C               	bsf	140,7,c	;volatile
  2144   0012EA                     
  2145                           ;lcd.c: 106:     _delay(30000);
  2146   0012EA  0E27               	movlw	39
  2147   0012EC  6E04               	movwf	??_LCDInit^0,c
  2148   0012EE  0EF5               	movlw	245
  2149   0012F0                     u887:
  2150   0012F0  2EE8               	decfsz	wreg,f,c
  2151   0012F2  D7FE               	bra	u887
  2152   0012F4  2E04               	decfsz	??_LCDInit^0,f,c
  2153   0012F6  D7FC               	bra	u887
  2154   0012F8  0000               	nop	
  2155   0012FA                     
  2156                           ;lcd.c: 107:     WriteNibble(1, 0x03);
  2157   0012FA  0E03               	movlw	3
  2158   0012FC  6E01               	movwf	WriteNibble@data^0,c
  2159   0012FE  0E01               	movlw	1
  2160   001300  ECA0  F00B         	call	_WriteNibble
  2161   001304                     
  2162                           ;lcd.c: 108:     _delay(3000);
  2163   001304  0E04               	movlw	4
  2164   001306  6E04               	movwf	??_LCDInit^0,c
  2165   001308  0EE4               	movlw	228
  2166   00130A                     u897:
  2167   00130A  2EE8               	decfsz	wreg,f,c
  2168   00130C  D7FE               	bra	u897
  2169   00130E  2E04               	decfsz	??_LCDInit^0,f,c
  2170   001310  D7FC               	bra	u897
  2171   001312  D000               	nop2	
  2172                           
  2173                           ;lcd.c: 109:     WriteNibble(1, 0x03);
  2174   001314  0E03               	movlw	3
  2175   001316  6E01               	movwf	WriteNibble@data^0,c
  2176   001318  0E01               	movlw	1
  2177   00131A  ECA0  F00B         	call	_WriteNibble
  2178   00131E                     
  2179                           ;lcd.c: 110:     _delay(100);
  2180   00131E  0E21               	movlw	33
  2181   001320                     u907:
  2182   001320  2EE8               	decfsz	wreg,f,c
  2183   001322  D7FE               	bra	u907
  2184   001324  0000               	nop	
  2185   001326                     
  2186                           ;lcd.c: 111:     WriteNibble(1, 0x03);
  2187   001326  0E03               	movlw	3
  2188   001328  6E01               	movwf	WriteNibble@data^0,c
  2189   00132A  0E01               	movlw	1
  2190   00132C  ECA0  F00B         	call	_WriteNibble
  2191                           
  2192                           ;lcd.c: 112:     _delay(100);
  2193   001330  0E21               	movlw	33
  2194   001332                     u917:
  2195   001332  2EE8               	decfsz	wreg,f,c
  2196   001334  D7FE               	bra	u917
  2197   001336  0000               	nop	
  2198   001338                     
  2199                           ;lcd.c: 113:     WriteNibble(1, 0b00000010);
  2200   001338  0E02               	movlw	2
  2201   00133A  6E01               	movwf	WriteNibble@data^0,c
  2202   00133C  0E01               	movlw	1
  2203   00133E  ECA0  F00B         	call	_WriteNibble
  2204   001342                     
  2205                           ;lcd.c: 114:     WaitLCD();
  2206   001342  EC28  F00C         	call	_WaitLCD	;wreg free
  2207   001346                     
  2208                           ;lcd.c: 115:     WriteNibble(1, 0b00000010);
  2209   001346  0E02               	movlw	2
  2210   001348  6E01               	movwf	WriteNibble@data^0,c
  2211   00134A  0E01               	movlw	1
  2212   00134C  ECA0  F00B         	call	_WriteNibble
  2213   001350                     
  2214                           ;lcd.c: 116:     WriteNibble(1, 0b00001000);
  2215   001350  0E08               	movlw	8
  2216   001352  6E01               	movwf	WriteNibble@data^0,c
  2217   001354  0E01               	movlw	1
  2218   001356  ECA0  F00B         	call	_WriteNibble
  2219   00135A                     
  2220                           ;lcd.c: 117:     WaitLCD();
  2221   00135A  EC28  F00C         	call	_WaitLCD	;wreg free
  2222   00135E                     
  2223                           ;lcd.c: 118:     WriteNibble(1, 0b00000000);
  2224   00135E  0E00               	movlw	0
  2225   001360  6E01               	movwf	WriteNibble@data^0,c
  2226   001362  0E01               	movlw	1
  2227   001364  ECA0  F00B         	call	_WriteNibble
  2228   001368                     
  2229                           ;lcd.c: 119:     WriteNibble(1, 0b00001000);
  2230   001368  0E08               	movlw	8
  2231   00136A  6E01               	movwf	WriteNibble@data^0,c
  2232   00136C  0E01               	movlw	1
  2233   00136E  ECA0  F00B         	call	_WriteNibble
  2234   001372                     
  2235                           ;lcd.c: 120:     WaitLCD();
  2236   001372  EC28  F00C         	call	_WaitLCD	;wreg free
  2237   001376                     
  2238                           ;lcd.c: 121:     WriteNibble(1, 0b00000000);
  2239   001376  0E00               	movlw	0
  2240   001378  6E01               	movwf	WriteNibble@data^0,c
  2241   00137A  0E01               	movlw	1
  2242   00137C  ECA0  F00B         	call	_WriteNibble
  2243   001380                     
  2244                           ;lcd.c: 122:     WriteNibble(1, 0b00001100);
  2245   001380  0E0C               	movlw	12
  2246   001382  6E01               	movwf	WriteNibble@data^0,c
  2247   001384  0E01               	movlw	1
  2248   001386  ECA0  F00B         	call	_WriteNibble
  2249   00138A                     
  2250                           ;lcd.c: 125:     WaitLCD();
  2251   00138A  EC28  F00C         	call	_WaitLCD	;wreg free
  2252   00138E                     
  2253                           ;lcd.c: 126:     WriteNibble(1, 0b00000000);
  2254   00138E  0E00               	movlw	0
  2255   001390  6E01               	movwf	WriteNibble@data^0,c
  2256   001392  0E01               	movlw	1
  2257   001394  ECA0  F00B         	call	_WriteNibble
  2258   001398                     
  2259                           ;lcd.c: 127:     WriteNibble(1, 0b00000001);
  2260   001398  0E01               	movlw	1
  2261   00139A  6E01               	movwf	WriteNibble@data^0,c
  2262   00139C  0E01               	movlw	1
  2263   00139E  ECA0  F00B         	call	_WriteNibble
  2264   0013A2                     
  2265                           ;lcd.c: 128:     WaitLCD();
  2266   0013A2  EC28  F00C         	call	_WaitLCD	;wreg free
  2267   0013A6                     
  2268                           ;lcd.c: 129:     WriteNibble(1, 0b00000000);
  2269   0013A6  0E00               	movlw	0
  2270   0013A8  6E01               	movwf	WriteNibble@data^0,c
  2271   0013AA  0E01               	movlw	1
  2272   0013AC  ECA0  F00B         	call	_WriteNibble
  2273   0013B0                     
  2274                           ;lcd.c: 130:     WriteNibble(1, 0b00000110);
  2275   0013B0  0E06               	movlw	6
  2276   0013B2  6E01               	movwf	WriteNibble@data^0,c
  2277   0013B4  0E01               	movlw	1
  2278   0013B6  ECA0  F00B         	call	_WriteNibble
  2279   0013BA                     
  2280                           ;lcd.c: 131:     WaitLCD();
  2281   0013BA  EC28  F00C         	call	_WaitLCD	;wreg free
  2282   0013BE  0012               	return		;funcret
  2283   0013C0                     __end_of_LCDInit:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _WriteNibble *****************
  2287 ;; Defined at:
  2288 ;;		line 71 in file "lcd.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  cmd             1    wreg     unsigned char 
  2291 ;;  data            1    0[COMRAM] unsigned char 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  cmd             1    2[COMRAM] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2303 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;Total ram usage:        3 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_WriteByte
  2313 ;;		_LCDInit
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text21
  2318   001740                     __ptext21:
  2319                           	callstack 0
  2320   001740                     _WriteNibble:
  2321                           	callstack 27
  2322                           
  2323                           ;incstack = 0
  2324                           ;WriteNibble@cmd stored from wreg
  2325   001740  6E03               	movwf	WriteNibble@cmd^0,c
  2326   001742                     
  2327                           ;lcd.c: 71: void WriteNibble(UINT8_T cmd, UINT8_T data);lcd.c: 72: {;lcd.c: 73:     LATD
      +                          bits.LATD4 = (cmd ? 0 : 1);
  2328   001742  5003               	movf	WriteNibble@cmd^0,w,c
  2329   001744  B4D8               	btfsc	status,2,c
  2330   001746  EFA7  F00B         	goto	u491
  2331   00174A  EFAB  F00B         	goto	u490
  2332   00174E                     u491:
  2333   00174E  6A02               	clrf	??_WriteNibble^0,c
  2334   001750  2A02               	incf	??_WriteNibble^0,f,c
  2335   001752  EFAC  F00B         	goto	u508
  2336   001756                     u490:
  2337   001756  6A02               	clrf	??_WriteNibble^0,c
  2338   001758                     u508:
  2339   001758  3A02               	swapf	??_WriteNibble^0,f,c
  2340   00175A  508C               	movf	140,w,c	;volatile
  2341   00175C  1802               	xorwf	??_WriteNibble^0,w,c
  2342   00175E  0BEF               	andlw	-17
  2343   001760  1802               	xorwf	??_WriteNibble^0,w,c
  2344   001762  6E8C               	movwf	140,c	;volatile
  2345   001764                     
  2346                           ;lcd.c: 74:     LATDbits.LATD5 = 0;
  2347   001764  9A8C               	bcf	140,5,c	;volatile
  2348   001766                     
  2349                           ;lcd.c: 75:     LATDbits.LATD6 = 1;
  2350   001766  8C8C               	bsf	140,6,c	;volatile
  2351   001768                     
  2352                           ;lcd.c: 77:     LATDbits.LATD0 = LATDbits.LATD1 = LATDbits.LATD2 = LATDbits.LATD3 = 0;
  2353   001768  968C               	bcf	140,3,c	;volatile
  2354   00176A  948C               	bcf	140,2,c	;volatile
  2355   00176C  928C               	bcf	140,1,c	;volatile
  2356   00176E  908C               	bcf	140,0,c	;volatile
  2357   001770                     
  2358                           ;lcd.c: 78:     __nop();
  2359   001770  0000               	nop	
  2360   001772                     
  2361                           ;lcd.c: 79:     __nop();
  2362   001772  0000               	nop	
  2363                           
  2364                           ;lcd.c: 81:     LATD = (LATD & 0xF0) | (data & 0x0F);
  2365   001774  C001  F002         	movff	WriteNibble@data,??_WriteNibble
  2366   001778  0E0F               	movlw	15
  2367   00177A  1602               	andwf	??_WriteNibble^0,f,c
  2368   00177C  508C               	movf	140,w,c	;volatile
  2369   00177E  0BF0               	andlw	240
  2370   001780  1002               	iorwf	??_WriteNibble^0,w,c
  2371   001782  6E8C               	movwf	140,c	;volatile
  2372   001784                     
  2373                           ;lcd.c: 82:     __nop();
  2374   001784  0000               	nop	
  2375   001786                     
  2376                           ;lcd.c: 83:     __nop();
  2377   001786  0000               	nop	
  2378   001788                     
  2379                           ;lcd.c: 85:     LATDbits.LATD6 = 0;
  2380   001788  9C8C               	bcf	140,6,c	;volatile
  2381   00178A  0012               	return		;funcret
  2382   00178C                     __end_of_WriteNibble:
  2383                           	callstack 0
  2384                           
  2385 ;; *************** function _WaitLCD *****************
  2386 ;; Defined at:
  2387 ;;		line 57 in file "lcd.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  status          1    1[COMRAM] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;Total ram usage:        1 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 1
  2408 ;; This function calls:
  2409 ;;		_ReadByte
  2410 ;; This function is called by:
  2411 ;;		_LCDInit
  2412 ;;		_LCDGoto
  2413 ;;		_LCDPutChar
  2414 ;;		_LCDClear
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text22
  2419   001850                     __ptext22:
  2420                           	callstack 0
  2421   001850                     _WaitLCD:
  2422                           	callstack 27
  2423   001850                     
  2424                           ;lcd.c: 59:     UINT8_T status;;lcd.c: 61:     LATDbits.LATD4 = 0;
  2425   001850  988C               	bcf	140,4,c	;volatile
  2426                           
  2427                           ;lcd.c: 62:     LATDbits.LATD5 = 1;
  2428   001852  8A8C               	bsf	140,5,c	;volatile
  2429   001854                     l1357:
  2430                           
  2431                           ;lcd.c: 65:         status = ReadByte();
  2432   001854  ECC6  F00B         	call	_ReadByte	;wreg free
  2433   001858  6E02               	movwf	WaitLCD@status^0,c
  2434   00185A                     
  2435                           ;lcd.c: 66:     } while (status & 0x80);
  2436   00185A  BE02               	btfsc	WaitLCD@status^0,7,c
  2437   00185C  EF32  F00C         	goto	u511
  2438   001860  EF34  F00C         	goto	u510
  2439   001864                     u511:
  2440   001864  EF2A  F00C         	goto	l1357
  2441   001868                     u510:
  2442   001868                     
  2443                           ;lcd.c: 68:     LATDbits.LATD5 = 0;
  2444   001868  9A8C               	bcf	140,5,c	;volatile
  2445   00186A  0012               	return		;funcret
  2446   00186C                     __end_of_WaitLCD:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _ReadByte *****************
  2450 ;; Defined at:
  2451 ;;		line 26 in file "lcd.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  status          1    0[COMRAM] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      unsigned char 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;Total ram usage:        1 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_WaitLCD
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text23
  2479   00178C                     __ptext23:
  2480                           	callstack 0
  2481   00178C                     _ReadByte:
  2482                           	callstack 27
  2483   00178C                     
  2484                           ;lcd.c: 28:     UINT8_T status;;lcd.c: 30:     TRISDbits.TRISD0 = 1;
  2485   00178C  8095               	bsf	149,0,c	;volatile
  2486                           
  2487                           ;lcd.c: 31:     TRISDbits.TRISD1 = 1;
  2488   00178E  8295               	bsf	149,1,c	;volatile
  2489                           
  2490                           ;lcd.c: 32:     TRISDbits.TRISD2 = 1;
  2491   001790  8495               	bsf	149,2,c	;volatile
  2492                           
  2493                           ;lcd.c: 33:     TRISDbits.TRISD3 = 1;
  2494   001792  8695               	bsf	149,3,c	;volatile
  2495                           
  2496                           ;lcd.c: 35:     LATDbits.LATD6 = 1;
  2497   001794  8C8C               	bsf	140,6,c	;volatile
  2498                           
  2499                           ;lcd.c: 36:     __nop();
  2500   001796  0000               	nop	
  2501                           
  2502                           ;lcd.c: 37:     __nop();
  2503   001798  0000               	nop	
  2504   00179A                     
  2505                           ;lcd.c: 39:     status = PORTD << 4;
  2506   00179A  3883               	swapf	131,w,c	;volatile
  2507   00179C  0BF0               	andlw	240
  2508   00179E  6E01               	movwf	ReadByte@status^0,c
  2509   0017A0                     
  2510                           ;lcd.c: 40:     LATDbits.LATD6 = 0;
  2511   0017A0  9C8C               	bcf	140,6,c	;volatile
  2512   0017A2                     
  2513                           ;lcd.c: 42:     LATDbits.LATD6 = 1;
  2514   0017A2  8C8C               	bsf	140,6,c	;volatile
  2515   0017A4                     
  2516                           ;lcd.c: 43:     __nop();
  2517   0017A4  0000               	nop	
  2518   0017A6                     
  2519                           ;lcd.c: 44:     __nop();
  2520   0017A6  0000               	nop	
  2521                           
  2522                           ;lcd.c: 46:     status |= PORTD & 0x0F;
  2523   0017A8  5083               	movf	131,w,c	;volatile
  2524   0017AA  0B0F               	andlw	15
  2525   0017AC  1201               	iorwf	ReadByte@status^0,f,c
  2526   0017AE                     
  2527                           ;lcd.c: 47:     LATDbits.LATD6 = 0;
  2528   0017AE  9C8C               	bcf	140,6,c	;volatile
  2529   0017B0                     
  2530                           ;lcd.c: 49:     TRISDbits.TRISD0 = 0;
  2531   0017B0  9095               	bcf	149,0,c	;volatile
  2532   0017B2                     
  2533                           ;lcd.c: 50:     TRISDbits.TRISD1 = 0;
  2534   0017B2  9295               	bcf	149,1,c	;volatile
  2535   0017B4                     
  2536                           ;lcd.c: 51:     TRISDbits.TRISD2 = 0;
  2537   0017B4  9495               	bcf	149,2,c	;volatile
  2538   0017B6                     
  2539                           ;lcd.c: 52:     TRISDbits.TRISD3 = 0;
  2540   0017B6  9695               	bcf	149,3,c	;volatile
  2541   0017B8                     
  2542                           ;lcd.c: 54:     return(status);
  2543   0017B8  5001               	movf	ReadByte@status^0,w,c
  2544   0017BA  0012               	return		;funcret
  2545   0017BC                     __end_of_ReadByte:
  2546                           	callstack 0
  2547                           
  2548                           	psect	rparam
  2549   000000                     
  2550                           	psect	config
  2551                           
  2552                           ; Padding undefined space
  2553   300000                     	org	3145728
  2554   300000  FF                 	db	255
  2555                           
  2556                           ;Config register CONFIG1H @ 0x300001
  2557                           ;	Oscillator Selection bits
  2558                           ;	FOSC = INTIO7, Internal oscillator block, CLKOUT function on OSC2
  2559                           ;	4X PLL Enable
  2560                           ;	PLLCFG = OFF, Oscillator used directly
  2561                           ;	Primary clock enable bit
  2562                           ;	PRICLKEN = ON, Primary clock is always enabled
  2563                           ;	Fail-Safe Clock Monitor Enable bit
  2564                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2565                           ;	Internal/External Oscillator Switchover bit
  2566                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2567   300001                     	org	3145729
  2568   300001  29                 	db	41
  2569                           
  2570                           ;Config register CONFIG2L @ 0x300002
  2571                           ;	Power-up Timer Enable bit
  2572                           ;	PWRTEN = OFF, Power up timer disabled
  2573                           ;	Brown-out Reset Enable bits
  2574                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2575                           ;	Brown Out Reset Voltage bits
  2576                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2577   300002                     	org	3145730
  2578   300002  1F                 	db	31
  2579                           
  2580                           ;Config register CONFIG2H @ 0x300003
  2581                           ;	Watchdog Timer Enable bits
  2582                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2583                           ;	Watchdog Timer Postscale Select bits
  2584                           ;	WDTPS = 32768, 1:32768
  2585   300003                     	org	3145731
  2586   300003  3C                 	db	60
  2587                           
  2588                           ; Padding undefined space
  2589   300004                     	org	3145732
  2590   300004  FF                 	db	255
  2591                           
  2592                           ;Config register CONFIG3H @ 0x300005
  2593                           ;	CCP2 MUX bit
  2594                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2595                           ;	PORTB A/D Enable bit
  2596                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2597                           ;	P3A/CCP3 Mux bit
  2598                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  2599                           ;	HFINTOSC Fast Start-up
  2600                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2601                           ;	Timer3 Clock input mux bit
  2602                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2603                           ;	ECCP2 B output mux bit
  2604                           ;	P2BMX = PORTD2, P2B is on RD2
  2605                           ;	MCLR Pin Enable bit
  2606                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2607   300005                     	org	3145733
  2608   300005  BF                 	db	191
  2609                           
  2610                           ;Config register CONFIG4L @ 0x300006
  2611                           ;	Stack Full/Underflow Reset Enable bit
  2612                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2613                           ;	Single-Supply ICSP Enable bit
  2614                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2615                           ;	Extended Instruction Set Enable bit
  2616                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2617                           ;	Background Debug
  2618                           ;	DEBUG = 0x1, unprogrammed default
  2619   300006                     	org	3145734
  2620   300006  85                 	db	133
  2621                           
  2622                           ; Padding undefined space
  2623   300007                     	org	3145735
  2624   300007  FF                 	db	255
  2625                           
  2626                           ;Config register CONFIG5L @ 0x300008
  2627                           ;	Code Protection Block 0
  2628                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2629                           ;	Code Protection Block 1
  2630                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2631                           ;	Code Protection Block 2
  2632                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2633                           ;	Code Protection Block 3
  2634                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2635   300008                     	org	3145736
  2636   300008  0F                 	db	15
  2637                           
  2638                           ;Config register CONFIG5H @ 0x300009
  2639                           ;	Boot Block Code Protection bit
  2640                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2641                           ;	Data EEPROM Code Protection bit
  2642                           ;	CPD = OFF, Data EEPROM not code-protected
  2643   300009                     	org	3145737
  2644   300009  C0                 	db	192
  2645                           
  2646                           ;Config register CONFIG6L @ 0x30000A
  2647                           ;	Write Protection Block 0
  2648                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2649                           ;	Write Protection Block 1
  2650                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2651                           ;	Write Protection Block 2
  2652                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2653                           ;	Write Protection Block 3
  2654                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2655   30000A                     	org	3145738
  2656   30000A  0F                 	db	15
  2657                           
  2658                           ;Config register CONFIG6H @ 0x30000B
  2659                           ;	Configuration Register Write Protection bit
  2660                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2661                           ;	Boot Block Write Protection bit
  2662                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2663                           ;	Data EEPROM Write Protection bit
  2664                           ;	WRTD = OFF, Data EEPROM not write-protected
  2665   30000B                     	org	3145739
  2666   30000B  E0                 	db	224
  2667                           
  2668                           ;Config register CONFIG7L @ 0x30000C
  2669                           ;	Table Read Protection Block 0
  2670                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2671                           ;	Table Read Protection Block 1
  2672                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2673                           ;	Table Read Protection Block 2
  2674                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2675                           ;	Table Read Protection Block 3
  2676                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2677   30000C                     	org	3145740
  2678   30000C  0F                 	db	15
  2679                           
  2680                           ;Config register CONFIG7H @ 0x30000D
  2681                           ;	Boot Block Table Read Protection bit
  2682                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2683   30000D                     	org	3145741
  2684   30000D  40                 	db	64
  2685                           tosu	equ	0xFFF
  2686                           tosh	equ	0xFFE
  2687                           tosl	equ	0xFFD
  2688                           stkptr	equ	0xFFC
  2689                           pclatu	equ	0xFFB
  2690                           pclath	equ	0xFFA
  2691                           pcl	equ	0xFF9
  2692                           tblptru	equ	0xFF8
  2693                           tblptrh	equ	0xFF7
  2694                           tblptrl	equ	0xFF6
  2695                           tablat	equ	0xFF5
  2696                           prodh	equ	0xFF4
  2697                           prodl	equ	0xFF3
  2698                           indf0	equ	0xFEF
  2699                           postinc0	equ	0xFEE
  2700                           postdec0	equ	0xFED
  2701                           preinc0	equ	0xFEC
  2702                           plusw0	equ	0xFEB
  2703                           fsr0h	equ	0xFEA
  2704                           fsr0l	equ	0xFE9
  2705                           wreg	equ	0xFE8
  2706                           indf1	equ	0xFE7
  2707                           postinc1	equ	0xFE6
  2708                           postdec1	equ	0xFE5
  2709                           preinc1	equ	0xFE4
  2710                           plusw1	equ	0xFE3
  2711                           fsr1h	equ	0xFE2
  2712                           fsr1l	equ	0xFE1
  2713                           bsr	equ	0xFE0
  2714                           indf2	equ	0xFDF
  2715                           postinc2	equ	0xFDE
  2716                           postdec2	equ	0xFDD
  2717                           preinc2	equ	0xFDC
  2718                           plusw2	equ	0xFDB
  2719                           fsr2h	equ	0xFDA
  2720                           fsr2l	equ	0xFD9
  2721                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    LCDWriteStr@string	PTR const unsigned char  size(2) Largest target is 7
		 -> LCDWriteFloat@string(COMRAM[5]), LCDWriteHexa@string(COMRAM[3]), LCDWriteInt@string(COMRAM[3]), STR_1(CODE[7]), 
		 -> STR_2(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _readTemperature->___xxtofl
    _i2c_write->_i2c_waitForIdle
    _i2c_stop->_i2c_waitForIdle
    _i2c_repStart->_i2c_waitForIdle
    _i2c_read->_i2c_waitForIdle
    ___xxtofl->_i2c_read
    ___fltol->_readTemperature
    _LCDWriteInt->_LCDGoto
    _LCDWriteInt->_LCDWriteStr
    _LCDWriteStr->_LCDPutChar
    _LCDPutChar->_WriteByte
    _LCDGoto->_WriteByte
    _WriteByte->_WriteNibble
    _LCDInit->_WriteNibble
    _WaitLCD->_ReadByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12792
                                             35 COMRAM     2     2      0
                            _LCDGoto
                            _LCDInit
                        _LCDWriteInt
                        _LCDWriteStr
                            ___fltol
                           _i2c_init
                    _readTemperature
 ---------------------------------------------------------------------------------
 (1) _readTemperature                                      9     5      4     452
                                             16 COMRAM     9     5      4
                           ___xxtofl
                            _i2c_ACK
                            _i2c_NAK
                           _i2c_read
                       _i2c_repStart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      15
                                              1 COMRAM     1     1      0
                    _i2c_waitForIdle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                    _i2c_waitForIdle
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_repStart                                         0     0      0       0
                    _i2c_waitForIdle
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             1     1      0      15
                                              1 COMRAM     1     1      0
                    _i2c_waitForIdle
 ---------------------------------------------------------------------------------
 (3) _i2c_waitForIdle                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_NAK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              2 COMRAM    14    10      4
                           _i2c_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                             25 COMRAM    10     6      4
                    _readTemperature (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                          6     4      2    6225
                                             11 COMRAM     6     4      2
                            _LCDGoto
                        _LCDWriteStr
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCDWriteStr                                          5     3      2    2191
                                              6 COMRAM     5     3      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           1     1      0    1721
                                              5 COMRAM     1     1      0
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              6     5      1    2213
                                              5 COMRAM     6     5      1
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (3) _WriteByte                                            2     1      1    1652
                                              3 COMRAM     2     1      1
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0    1307
                                              3 COMRAM     1     1      0
                            _WaitLCD
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (4) _WriteNibble                                          3     2      1    1260
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _WaitLCD                                              1     1      0      47
                                              1 COMRAM     1     1      0
                           _ReadByte
 ---------------------------------------------------------------------------------
 (4) _ReadByte                                             1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGoto
     _WaitLCD
       _ReadByte
     _WriteByte
       _WriteNibble
   _LCDInit
     _WaitLCD
     _WriteNibble
   _LCDWriteInt
     _LCDGoto
     _LCDWriteStr
       _LCDPutChar
         _WaitLCD
         _WriteByte
     ___awdiv
     ___awmod
   _LCDWriteStr
   ___fltol
     _readTemperature (ARG)
       ___xxtofl
         _i2c_read (ARG)
           _i2c_waitForIdle
       _i2c_ACK
       _i2c_NAK
       _i2c_read
       _i2c_repStart
         _i2c_waitForIdle
       _i2c_start
       _i2c_stop
         _i2c_waitForIdle
       _i2c_write
         _i2c_waitForIdle
   _i2c_init
   _readTemperature

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     25      25       1       38.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhh      34      0       0      36        0.0%
BITBIGSFRhhhhl       1      0       0      37        0.0%
BITBIGSFRhhlhh      23      0       0      38        0.0%
BITBIGSFRhhlhl       2      0       0      39        0.0%
BITBIGSFRhhll        8      0       0      40        0.0%
BITBIGSFRhl          7      0       0      41        0.0%
BITBIGSFRlh          8      0       0      42        0.0%
BITBIGSFRllh        48      0       0      43        0.0%
BITBIGSFRlll         2      0       0      44        0.0%
ABS                  0      0       0      45        0.0%
BIGRAM             F37      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 16 08:44:26 2024

               ?_LCDPutChar 0001                          l52 17BA                          l60 178A  
                        l29 16F2                          l63 1884                          l56 1868  
                        l57 186A                          l66 13BE                          l82 1906  
                        l75 168C                          l91 15AE                          u40 17CE  
                        u41 17C6                          u50 17E6                          u51 17E2  
                        u60 18F4                          u61 18F0                          u70 184E  
                        u71 184A                          u80 18E0                          u48 17D0  
                        u81 18DC                          u90 18B4                          u91 18B0  
              ___awdiv@sign 0006                         l100 173E                         l133 1812  
                       l142 18E6                         l151 18B4                         l160 18D2  
                       l145 18F4                         l154 188E                         l163 18E0  
                       l139 17E6                         l172 181C                         l148 18A6  
                       l157 189C                         l181 184E                         l166 18BC  
                       l174 182A                         l415 1482                         l175 1832  
                       l169 18CA                         l178 1840                         l428 1532  
                       l481 12D6                         l911 17BC                         l913 17BC  
                       l921 183C                         l842 11D0                         l923 18CC  
                       l931 1814                         l915 18E2                         l853 1168  
                       l933 1814                         l925 189E                         l917 1836  
                       l846 110C                         l839 1074                         l943 18B6  
                       l935 1818                         l927 18A2                         l919 183A  
                       l937 181A                         l929 18A4                         l945 1886  
                       l939 1830                         l947 188A                         l949 188C  
                       u100 182A                         u101 1826                         u110 18CA  
                       u111 18C6                         u120 189C                         u121 1898  
                       u510 1868                         u511 1864                         u520 1636  
                       u600 1412                         u521 1632                         u601 140E  
                       u530 1646                         u610 1430                         u531 1642  
                       u611 142C                         u508 1758                         u540 165A  
                       u620 144C                         u700 1030                         u541 1656  
                       u621 1448                         u701 102C                         u550 156A  
                       u630 1472                         u710 103E                         u631 146E  
                       u711 103A                         u560 159E                         u640 1496  
                       u800 11E8                         u720 109A                         u641 1492  
                       u801 11E4                         u721 1096                         u490 1756  
                       u570 15AE                         u650 14B0                         u810 121C  
                       u730 10F0                         u491 174E                         u571 15AA  
                       u651 14AC                         u731 10EC                         u580 13D2  
                       u660 14CA                         u820 124A                         u740 113A  
                       u557 1560                         u581 13CE                         u661 14C6  
                       u821 1246                         u741 1136                         u590 13EC  
                       u670 14E8                         u830 125E                         u750 1158  
                       u567 1594                         u591 13E8                         u671 14E4  
                       u831 125A                         u815 1212                         u751 1154  
                       u680 14FE                         u840 1286                         u760 1168  
                       u681 14FA                         u841 1282                         u761 1164  
                       u690 1522                         u850 12A6                         u770 1176  
                       u907 1320                         u691 151E                         u851 12A2  
                       u771 1172                         u860 12B6                         u780 11B0  
                       u917 1332                         u861 12B2                         u781 11AC  
                       u790 11BE                         u791 11BA                         u887 12F0  
                       u897 130A                ___awmod@sign 0006                         wreg 0FE8  
           __end_of_LCDInit 13C0             __end_of_LCDGoto 168E                ?_LCDWriteInt 000C  
              ?_LCDWriteStr 0007                ___fltol@exp1 0023                        l1311 178C  
                      l1321 17A6                        l1313 179A                        l1401 13F8  
                      l1331 17B6                        l1323 17AE                        l1315 17A0  
                      l1411 1430                        l1403 1400                        l1333 17B8  
                      l1325 17B0                        l1317 17A2                        l1341 1766  
                      l1421 145C                        l1413 1436                        l1405 1412  
                      l1181 17FA                        l1173 17E8                        l1501 117C  
                      l1327 17B2                        l1319 17A4                        l1351 1786  
                      l1343 1768                        l1415 144C                        l1407 141A  
                      l1423 1462                        l1431 1484                        l1191 1808  
                      l1183 1800                        l1175 17F2                        l1503 11A0  
                      l1329 17B4                        l1353 1788                        l1345 1770  
                      l1337 1742                        l1361 186E                        l1425 1472  
                      l1417 1454                        l1409 1422                        l1441 14B0  
                      l1433 1488                        l1601 11FC                        l1193 180A  
                      l1185 1802                        l1177 17F6                        l1505 11B0  
                      l1521 169C                        l1513 168E                        l1355 1850  
                      l1347 1772                        l1339 1764                        l1371 165A  
                      l1363 18F8                        l1427 147A                        l1419 1456  
                      l1451 14E8                        l1443 14B8                        l1435 1496  
                      l1611 124A                        l1603 1226                        l1195 180C  
                      l1187 1804                        l1179 17F8                        l1507 11BE  
                      l1531 16B4                        l1523 16A2                        l1515 168E  
                      l1357 1854                        l1349 1784                        l1541 12D8  
                      l1373 166E                        l1365 1626                        l1381 153C  
                      l1461 1522                        l1453 14FE                        l1445 14CA  
                      l1437 149E                        l1621 1276                        l1605 1228  
                      l1197 180E                        l1189 1806                        l1509 11C0  
                      l1533 16DA                        l1525 16A6                        l1517 1692  
                      l1359 185A                        l1551 1326                        l1543 12EA  
                      l1375 167E                        l1367 1636                        l1383 156E  
                      l1391 13D2                        l1463 152A                        l1455 1506  
                      l1447 14D2                        l1439 14A2                        l1631 12A6  
                      l1607 1238                        l1199 1810                        l1471 103E  
                      l1535 16DE                        l1527 16AA                        l1519 1698  
                      l1561 135A                        l1553 1338                        l1545 12FA  
                      l1377 1688                        l1369 164A                        l1385 1570  
                      l1393 13DA                        l1457 150C                        l1449 14DA  
                      l1633 12B6                        l1617 1262                        l1609 123C  
                      l1481 10B6                        l1473 1084                        l1537 16E2  
                      l1529 16B0                        l1641 15B2                        l1571 1380  
                      l1563 135E                        l1555 1342                        l1547 1304  
                      l1379 1534                        l1395 13DE                        l1387 13C0  
                      l1459 1512                        l1635 12C6                        l1627 128A  
                      l1619 126C                        l1491 113E                        l1483 10C2  
                      l1475 109A                        l1467 1020                        l1651 15F4  
                      l1643 15B6                        l1581 13A6                        l1573 138A  
                      l1565 1368                        l1557 1346                        l1549 131E  
                      l1397 13EC                        l1389 13C4                        l1629 1296  
                      l1493 114A                        l1485 10F4                        l1469 1030  
                      l1653 1602                        l1645 15BA                        l1583 13B0  
                      l1575 138E                        l1567 1372                        l1559 1350  
                      l1399 13F4                        l1591 172A                        l1495 1158  
                      l1487 10F6                        l1479 10AE                        l1655 160C  
                      l1647 15DA                        l1639 15B0                        l1585 13BA  
                      l1577 1398                        l1569 1376                        l1593 1734  
                      l1497 1176                        l1489 1102                        l1649 15E4  
                      l1579 13A2                        l1587 16F6                        l1595 11D2  
                      l1499 1178                        l1589 1726                        l1597 11E8  
                      STR_1 1012                        STR_2 1019                        STR_3 1001  
                      _LATD 0F8C                        _main 15B0                        fsr0h 0FEA  
                      indf0 0FEF                        fsr0l 0FE9           ??_i2c_waitForIdle 0001  
                      start 0000               ?_i2c_repStart 0001             __end_of_i2c_ACK 18E2  
           __end_of_i2c_NAK 18CC                ___param_bank 0000             __end_of_WaitLCD 186C  
             ___fltol@sign1 0022                       ?_main 0001             __end_of___awdiv 1484  
           __end_of___awmod 1534             __end_of___fltol 12D8             ___awdiv@divisor 0003  
           ___awdiv@counter 0005                       _PORTD 0F83                       tablat 0FF5  
                     status 0FD8               WaitLCD@status 0002              ??_i2c_repStart 0002  
           __initialization 1908                __end_of_main 1624            __end_of_i2c_init 1814  
          __end_of_i2c_read 1834            __end_of_ReadByte 17BC            __end_of_i2c_stop 189E  
                    ??_main 0024               __activetblptr 0002                   ??_LCDInit 0004  
                 ??_LCDGoto 0007             _readTemperature 168E            ___awdiv@dividend 0001  
             LCDGoto@column 000B                   ??_i2c_ACK 0001                   ??_i2c_NAK 0001  
          __end_of___xxtofl 11D2                   ??_WaitLCD 0002                   ??___awdiv 0005  
                 ??___awmod 0005                   ??___fltol 001E            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
     i2c_write@i2cWriteData 0002                __mediumconst 0000                      tblptrh 0FF7  
              LCDWriteStr@i 000B                      tblptrl 0FF6                      tblptru 0FF8  
              ___xxtofl@arg 000D                ___xxtofl@exp 000C                ___xxtofl@val 0003  
                __accesstop 0060     __end_of__initialization 1908               ___rparam_used 0001  
                ___fltol@f1 001A              __pcstackCOMRAM 0001              WriteNibble@cmd 0003  
              ??_LCDPutChar 0006     __end_of_readTemperature 16F4           __end_of_i2c_start 18F6  
         __end_of_i2c_write 1850        __end_of_i2c_repStart 18B6             _i2c_waitForIdle 17BC  
       i2c_read@i2cReadData 0002                WriteByte@cmd 0005                   ?_i2c_init 0001  
                 ?_i2c_read 0001                   ?_ReadByte 0001                   ?_i2c_stop 0001  
        __end_of_LCDPutChar 1908               ??_WriteNibble 0002           LCDWriteInt@column 000E  
         LCDWriteInt@string 000F           __end_of_WriteByte 1886                     _LCDInit 12D8  
                   _LCDGoto 1624                   ?___xxtofl 0003                     _SSP1ADD 0FC8  
                   _SSP1BUF 0FC9                  ??_i2c_init 0001                  ??_i2c_read 0002  
                ??_ReadByte 0001                  ??_i2c_stop 0002                     _i2c_ACK 18CC  
                   _i2c_NAK 18B6                     __Hparam 0000                     _WaitLCD 1850  
                   __Lparam 0000                     ___awdiv 13C0                     ___awmod 1484  
                   ___fltol 11D2                __psmallconst 1000                     __pcinit 1908  
          ?_readTemperature 0011                     __ramtop 1000     __end_of_i2c_waitForIdle 17E8  
                   __ptext0 15B0                     __ptext1 168E                     __ptext2 1834  
                   __ptext3 1886                     __ptext4 18E2                     __ptext5 189E  
                   __ptext6 1814                     __ptext7 17BC                     __ptext8 18B6  
                   __ptext9 18CC                  ??___xxtofl 0007         __end_of_WriteNibble 178C  
          ___awmod@dividend 0001        end_of_initialization 1908               __Lmediumconst 0000  
         LCDWriteStr@string 0007               ___xxtofl@sign 000B                   _TRISCbits 0F94  
                 _TRISDbits 0F95                  LCDGoto@row 0006                _i2c_repStart 189E  
           WriteNibble@data 0001                 _WriteNibble 1740            ?_i2c_waitForIdle 0001  
       start_initialization 1908                   _i2c_start 18E2                   _i2c_write 1834  
             ??_LCDWriteInt 000E               ??_LCDWriteStr 0009                    ?_LCDInit 0001  
                  ?_LCDGoto 0006               WriteByte@data 0004                  ?_i2c_start 0001  
                ?_i2c_write 0001                   _WriteByte 186C              LCDPutChar@data 0006  
                  ?_i2c_ACK 0001                    ?_i2c_NAK 0001         __end_of_LCDWriteInt 1740  
       __end_of_LCDWriteStr 15B0                    ?_WaitLCD 0001                    ?___awdiv 0001  
                  ?___awmod 0001                    ?___fltol 001A            LCDWriteInt@value 000D  
               __smallconst 1000                  ?_WriteByte 0004                    _LATDbits 0F8C  
               _LCDGoto$239 0009                    _PIR1bits 0F9E                    _PIR2bits 0FA1  
                  _SSP1CON1 0FC6                    _SSP1CON2 0FC5                 ??_i2c_start 0001  
               ??_i2c_write 0002                 _LCDWriteInt 16F4                 _LCDWriteStr 1534  
                  _i2c_init 17E8                    _i2c_read 1814                    _ReadByte 178C  
                  _i2c_stop 1886                    __Hrparam 0000                    __Lrparam 0000  
readTemperature@temperature 0016                ?_WriteNibble 0001                  _ANSELCbits 0F3A  
                  ___xxtofl 101E                 ??_WriteByte 0005                    __ptext10 101E  
                  __ptext11 17E8                    __ptext20 12D8                    __ptext12 11D2  
                  __ptext21 1740                    __ptext13 16F4                    __ptext22 1850  
                  __ptext14 1484                    __ptext23 178C                    __ptext15 13C0  
                  __ptext16 1534                    __ptext17 18F6                    __ptext18 1624  
                  __ptext19 186C                _SSP1CON2bits 0FC5                _SSP1CON3bits 0FCB  
                  isa$xinst 0000              ReadByte@status 0001                  _LCDPutChar 18F6  
              _SSP1STATbits 0FC7             main@temperature 0024              LCDWriteInt@row 000C  
         ??_readTemperature 0015  
