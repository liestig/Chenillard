

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 20 09:45:30 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Generated 21/07/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F46K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     _RCREG1	set	4014
    75   000000                     _TXREG1	set	4013
    76   000000                     _SPBRG1	set	4015
    77   000000                     _BAUDCON1bits	set	4024
    78   000000                     _PIR1bits	set	3998
    79   000000                     _RCSTA1bits	set	4011
    80   000000                     _TXSTA1bits	set	4012
    81   000000                     _LATD	set	3980
    82   000000                     _RCIE	set	31981
    83   000000                     _ANSELCbits	set	3898
    84   000000                     _PORTD	set	3971
    85   000000                     _LATDbits	set	3980
    86   000000                     _TRISCbits	set	3988
    87   000000                     _TRISDbits	set	3989
    88   000000                     _PIE1bits	set	3997
    89   000000                     _RCSTA1	set	4011
    90   000000                     _TXSTA1	set	4012
    91   000000                     _RCIP	set	31997
    92   000000                     _RCIF	set	31989
    93   000000                     _PEIE	set	32662
    94   000000                     _SPBRGH1	set	4016
    95                           
    96                           	psect	smallconst
    97   001000                     __psmallconst:
    98                           	callstack 0
    99   001000  00                 	db	0
   100   001001  30                 	db	48	;'0'
   101   001002  31                 	db	49	;'1'
   102   001003  32                 	db	50	;'2'
   103   001004  33                 	db	51	;'3'
   104   001005  34                 	db	52	;'4'
   105   001006  35                 	db	53	;'5'
   106   001007  36                 	db	54	;'6'
   107   001008  37                 	db	55	;'7'
   108   001009  38                 	db	56	;'8'
   109   00100A  39                 	db	57	;'9'
   110   00100B  41                 	db	65	;'A'
   111   00100C  42                 	db	66	;'B'
   112   00100D  43                 	db	67	;'C'
   113   00100E  44                 	db	68	;'D'
   114   00100F  45                 	db	69	;'E'
   115   001010  46                 	db	70	;'F'
   116   001011  00                 	db	0
   117   001012                     STR_3:
   118   001012  46                 	db	70	;'F'
   119   001013  72                 	db	114	;'r'
   120   001014  61                 	db	97	;'a'
   121   001015  6D                 	db	109	;'m'
   122   001016  69                 	db	105	;'i'
   123   001017  6E                 	db	110	;'n'
   124   001018  67                 	db	103	;'g'
   125   001019  20                 	db	32
   126   00101A  45                 	db	69	;'E'
   127   00101B  72                 	db	114	;'r'
   128   00101C  72                 	db	114	;'r'
   129   00101D  6F                 	db	111	;'o'
   130   00101E  72                 	db	114	;'r'
   131   00101F  00                 	db	0
   132   001020                     STR_4:
   133   001020  4F                 	db	79	;'O'
   134   001021  76                 	db	118	;'v'
   135   001022  65                 	db	101	;'e'
   136   001023  72                 	db	114	;'r'
   137   001024  72                 	db	114	;'r'
   138   001025  75                 	db	117	;'u'
   139   001026  6E                 	db	110	;'n'
   140   001027  20                 	db	32
   141   001028  45                 	db	69	;'E'
   142   001029  72                 	db	114	;'r'
   143   00102A  72                 	db	114	;'r'
   144   00102B  6F                 	db	111	;'o'
   145   00102C  72                 	db	114	;'r'
   146   00102D  00                 	db	0
   147   00102E                     STR_1:
   148   00102E  43                 	db	67	;'C'
   149   00102F  6F                 	db	111	;'o'
   150   001030  6D                 	db	109	;'m'
   151   001031  70                 	db	112	;'p'
   152   001032  74                 	db	116	;'t'
   153   001033  65                 	db	101	;'e'
   154   001034  75                 	db	117	;'u'
   155   001035  72                 	db	114	;'r'
   156   001036  3A                 	db	58	;':'
   157   001037  20                 	db	32
   158   001038  00                 	db	0
   159   001039  00                 	db	0	; dummy byte at the end
   160   000000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164   0016B6                     __pcinit:
   165                           	callstack 0
   166   0016B6                     start_initialization:
   167                           	callstack 0
   168   0016B6                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Clear objects allocated to COMRAM (7 bytes)
   172   0016B6  EE00  F02B         	lfsr	0,__pbssCOMRAM
   173   0016BA  0E07               	movlw	7
   174   0016BC                     clear_0:
   175   0016BC  6AEE               	clrf	postinc0,c
   176   0016BE  06E8               	decf	wreg,f,c
   177   0016C0  E1FD               	bnz	clear_0
   178   0016C2                     end_of_initialization:
   179                           	callstack 0
   180   0016C2                     __end_of__initialization:
   181                           	callstack 0
   182   0016C2  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   183   0016C4  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   184   0016C6  0100               	movlb	0
   185   0016C8  EF3B  F009         	goto	_main	;jump to C main() function
   186                           
   187                           	psect	bssCOMRAM
   188   00002B                     __pbssCOMRAM:
   189                           	callstack 0
   190   00002B                     _funcs:
   191                           	callstack 0
   192   00002B                     	ds	6
   193   000031                     _count:
   194                           	callstack 0
   195   000031                     	ds	1
   196                           
   197                           	psect	cstackCOMRAM
   198   000001                     __pcstackCOMRAM:
   199                           	callstack 0
   200   000001                     i1ReadByte@status:
   201                           	callstack 0
   202   000001                     i1WriteNibble@data:
   203                           	callstack 0
   204   000001                     __Exit@ec:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x0
   208   000001                     	ds	1
   209   000002                     ??i1_WriteNibble:
   210   000002                     i1WaitLCD@status:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0x1
   214   000002                     	ds	1
   215   000003                     i1WriteNibble@cmd:
   216                           	callstack 0
   217   000003                     exit@code:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x2
   221   000003                     	ds	1
   222   000004                     i1WriteByte@data:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x3
   226   000004                     	ds	1
   227   000005                     i1WriteByte@cmd:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x4
   231   000005                     	ds	1
   232   000006                     i1LCDGoto@row:
   233                           	callstack 0
   234   000006                     i1LCDPutChar@data:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x5
   238   000006                     	ds	1
   239   000007                     ??i1_LCDGoto:
   240   000007                     i1LCDWriteStr@string:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x6
   244   000007                     	ds	2
   245   000009                     ??i1_LCDWriteStr:
   246   000009                     i1_LCDGoto$217:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x8
   250   000009                     	ds	2
   251   00000B                     i1LCDGoto@column:
   252                           	callstack 0
   253   00000B                     i1LCDWriteStr@i:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0xA
   257   00000B                     	ds	1
   258   00000C                     ??_SerialRxPinInterrupt:
   259                           
   260                           ; 1 bytes @ 0xB
   261   00000C                     	ds	9
   262   000015                     ?___awmod:
   263                           	callstack 0
   264   000015                     ?___lldiv:
   265                           	callstack 0
   266   000015                     ReadByte@status:
   267                           	callstack 0
   268   000015                     WriteNibble@data:
   269                           	callstack 0
   270   000015                     UARTWriteByte@data:
   271                           	callstack 0
   272   000015                     ___awmod@dividend:
   273                           	callstack 0
   274   000015                     ___lldiv@dividend:
   275                           	callstack 0
   276                           
   277                           ; 4 bytes @ 0x14
   278   000015                     	ds	1
   279   000016                     ??_WriteNibble:
   280   000016                     WaitLCD@status:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x15
   284   000016                     	ds	1
   285   000017                     WriteNibble@cmd:
   286                           	callstack 0
   287   000017                     ___awmod@divisor:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x16
   291   000017                     	ds	1
   292   000018                     ??_LCDInit:
   293   000018                     WriteByte@data:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x17
   297   000018                     	ds	1
   298   000019                     WriteByte@cmd:
   299                           	callstack 0
   300   000019                     ___awmod@counter:
   301                           	callstack 0
   302   000019                     ___lldiv@divisor:
   303                           	callstack 0
   304                           
   305                           ; 4 bytes @ 0x18
   306   000019                     	ds	1
   307   00001A                     LCDGoto@row:
   308                           	callstack 0
   309   00001A                     LCDPutChar@data:
   310                           	callstack 0
   311   00001A                     ___awmod@sign:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x19
   315   00001A                     	ds	1
   316   00001B                     ??_LCDGoto:
   317   00001B                     LCDWriteStr@string:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x1A
   321   00001B                     	ds	2
   322   00001D                     ??_LCDWriteStr:
   323   00001D                     _LCDGoto$217:
   324                           	callstack 0
   325   00001D                     ___lldiv@quotient:
   326                           	callstack 0
   327                           
   328                           ; 4 bytes @ 0x1C
   329   00001D                     	ds	2
   330   00001F                     LCDGoto@column:
   331                           	callstack 0
   332   00001F                     LCDWriteStr@i:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x1E
   336   00001F                     	ds	2
   337   000021                     ___lldiv@counter:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x20
   341   000021                     	ds	1
   342   000022                     UARTInit@baudRate:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x21
   346   000022                     	ds	2
   347   000024                     ??_UARTInit:
   348                           
   349                           ; 1 bytes @ 0x23
   350   000024                     	ds	2
   351   000026                     ??_main:
   352                           
   353                           ; 1 bytes @ 0x25
   354   000026                     	ds	1
   355   000027                     main@r:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x26
   359   000027                     	ds	2
   360   000029                     main@t:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x28
   364   000029                     	ds	2
   365                           
   366 ;;
   367 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   368 ;;
   369 ;; *************** function _main *****************
   370 ;; Defined at:
   371 ;;		line 70 in file "main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;  t               2   40[COMRAM] int 
   376 ;;  r               2   38[COMRAM] int 
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   387 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   389 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   390 ;;Total ram usage:        5 bytes
   391 ;; Hardware stack levels required when called: 9
   392 ;; This function calls:
   393 ;;		_LCDGoto
   394 ;;		_LCDInit
   395 ;;		_LCDPutChar
   396 ;;		_LCDWriteStr
   397 ;;		_UARTInit
   398 ;;		_UARTReadByte
   399 ;;		_UARTWriteByte
   400 ;;		___awmod
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text0
   407   001276                     __ptext0:
   408                           	callstack 0
   409   001276                     _main:
   410                           	callstack 22
   411   001276  8E8C               	bsf	140,7,c	;volatile
   412   001278  EC1D  F008         	call	_LCDInit	;wreg free
   413   00127C  0E25               	movlw	37
   414   00127E  6E23               	movwf	(UARTInit@baudRate+1)^0,c
   415   001280  0E80               	movlw	128
   416   001282  6E22               	movwf	UARTInit@baudRate^0,c
   417   001284  ECFB  F009         	call	_UARTInit	;wreg free
   418   001288  0E00               	movlw	0
   419   00128A  6E2A               	movwf	(main@t+1)^0,c
   420   00128C  0E00               	movlw	0
   421   00128E  6E29               	movwf	main@t^0,c
   422   001290                     l1573:
   423   001290  C029  F015         	movff	main@t,___awmod@dividend
   424   001294  C02A  F016         	movff	main@t+1,___awmod@dividend+1
   425   001298  0E00               	movlw	0
   426   00129A  6E18               	movwf	(___awmod@divisor+1)^0,c
   427   00129C  0E1A               	movlw	26
   428   00129E  6E17               	movwf	___awmod@divisor^0,c
   429   0012A0  EC91  F008         	call	___awmod	;wreg free
   430   0012A4  5015               	movf	?___awmod^0,w,c
   431   0012A6  0F61               	addlw	97
   432   0012A8  EC66  F00B         	call	_UARTWriteByte
   433   0012AC  EC8F  F00B         	call	_UARTReadByte	;wreg free
   434   0012B0  6E26               	movwf	??_main^0,c
   435   0012B2  5026               	movf	??_main^0,w,c
   436   0012B4  6E27               	movwf	main@r^0,c
   437   0012B6  6A28               	clrf	(main@r+1)^0,c
   438   0012B8  0E00               	movlw	0
   439   0012BA  6E1A               	movwf	LCDGoto@row^0,c
   440   0012BC  0E00               	movlw	0
   441   0012BE  EC31  F00A         	call	_LCDGoto
   442   0012C2  0E2E               	movlw	low STR_1
   443   0012C4  6E1B               	movwf	LCDWriteStr@string^0,c
   444   0012C6  501B               	movf	LCDWriteStr@string^0,w,c
   445   0012C8  A4D8               	btfss	status,2,c
   446   0012CA  0E10               	movlw	high __smallconst
   447   0012CC  6E1C               	movwf	(LCDWriteStr@string+1)^0,c
   448   0012CE  EC7F  F009         	call	_LCDWriteStr	;wreg free
   449   0012D2  0E08               	movlw	8
   450   0012D4  6E1A               	movwf	LCDGoto@row^0,c
   451   0012D6  0E00               	movlw	0
   452   0012D8  EC31  F00A         	call	_LCDGoto
   453   0012DC  5027               	movf	main@r^0,w,c
   454   0012DE  EC71  F00B         	call	_LCDPutChar
   455   0012E2  4A29               	infsnz	main@t^0,f,c
   456   0012E4  2A2A               	incf	(main@t+1)^0,f,c
   457   0012E6  0EA3               	movlw	163
   458   0012E8  6E26               	movwf	??_main^0,c
   459   0012EA  0E55               	movlw	85
   460   0012EC                     u657:
   461   0012EC  2EE8               	decfsz	wreg,f,c
   462   0012EE  D7FE               	bra	u657
   463   0012F0  2E26               	decfsz	??_main^0,f,c
   464   0012F2  D7FC               	bra	u657
   465   0012F4  0000               	nop	
   466   0012F6  EF48  F009         	goto	l1573
   467   0012FA  EF70  F000         	goto	start
   468   0012FE                     __end_of_main:
   469                           	callstack 0
   470                           
   471 ;; *************** function ___awmod *****************
   472 ;; Defined at:
   473 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  dividend        2   20[COMRAM] int 
   476 ;;  divisor         2   22[COMRAM] int 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  sign            1   25[COMRAM] unsigned char 
   479 ;;  counter         1   24[COMRAM] unsigned char 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  2   20[COMRAM] int 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;Total ram usage:        6 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 5
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;;		_LCDPutByte
   501 ;;		_LCDWriteInt
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text1
   506   001122                     __ptext1:
   507                           	callstack 0
   508   001122                     ___awmod:
   509                           	callstack 25
   510   001122  0E00               	movlw	0
   511   001124  6E1A               	movwf	___awmod@sign^0,c
   512   001126  BE16               	btfsc	(___awmod@dividend+1)^0,7,c
   513   001128  EF9A  F008         	goto	u490
   514   00112C  EF98  F008         	goto	u491
   515   001130                     u491:
   516   001130  EFA0  F008         	goto	l1517
   517   001134                     u490:
   518   001134  6C15               	negf	___awmod@dividend^0,c
   519   001136  1E16               	comf	(___awmod@dividend+1)^0,f,c
   520   001138  B0D8               	btfsc	status,0,c
   521   00113A  2A16               	incf	(___awmod@dividend+1)^0,f,c
   522   00113C  0E01               	movlw	1
   523   00113E  6E1A               	movwf	___awmod@sign^0,c
   524   001140                     l1517:
   525   001140  BE18               	btfsc	(___awmod@divisor+1)^0,7,c
   526   001142  EFA7  F008         	goto	u500
   527   001146  EFA5  F008         	goto	u501
   528   00114A                     u501:
   529   00114A  EFAB  F008         	goto	l1521
   530   00114E                     u500:
   531   00114E  6C17               	negf	___awmod@divisor^0,c
   532   001150  1E18               	comf	(___awmod@divisor+1)^0,f,c
   533   001152  B0D8               	btfsc	status,0,c
   534   001154  2A18               	incf	(___awmod@divisor+1)^0,f,c
   535   001156                     l1521:
   536   001156  5017               	movf	___awmod@divisor^0,w,c
   537   001158  1018               	iorwf	(___awmod@divisor+1)^0,w,c
   538   00115A  B4D8               	btfsc	status,2,c
   539   00115C  EFB2  F008         	goto	u511
   540   001160  EFB4  F008         	goto	u510
   541   001164                     u511:
   542   001164  EFD8  F008         	goto	l1537
   543   001168                     u510:
   544   001168  0E01               	movlw	1
   545   00116A  6E19               	movwf	___awmod@counter^0,c
   546   00116C  EFBC  F008         	goto	l1527
   547   001170                     l1525:
   548   001170  90D8               	bcf	status,0,c
   549   001172  3617               	rlcf	___awmod@divisor^0,f,c
   550   001174  3618               	rlcf	(___awmod@divisor+1)^0,f,c
   551   001176  2A19               	incf	___awmod@counter^0,f,c
   552   001178                     l1527:
   553   001178  AE18               	btfss	(___awmod@divisor+1)^0,7,c
   554   00117A  EFC1  F008         	goto	u521
   555   00117E  EFC3  F008         	goto	u520
   556   001182                     u521:
   557   001182  EFB8  F008         	goto	l1525
   558   001186                     u520:
   559   001186                     l1529:
   560   001186  5017               	movf	___awmod@divisor^0,w,c
   561   001188  5C15               	subwf	___awmod@dividend^0,w,c
   562   00118A  5018               	movf	(___awmod@divisor+1)^0,w,c
   563   00118C  5816               	subwfb	(___awmod@dividend+1)^0,w,c
   564   00118E  A0D8               	btfss	status,0,c
   565   001190  EFCC  F008         	goto	u531
   566   001194  EFCE  F008         	goto	u530
   567   001198                     u531:
   568   001198  EFD2  F008         	goto	l1533
   569   00119C                     u530:
   570   00119C  5017               	movf	___awmod@divisor^0,w,c
   571   00119E  5E15               	subwf	___awmod@dividend^0,f,c
   572   0011A0  5018               	movf	(___awmod@divisor+1)^0,w,c
   573   0011A2  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
   574   0011A4                     l1533:
   575   0011A4  90D8               	bcf	status,0,c
   576   0011A6  3218               	rrcf	(___awmod@divisor+1)^0,f,c
   577   0011A8  3217               	rrcf	___awmod@divisor^0,f,c
   578   0011AA  2E19               	decfsz	___awmod@counter^0,f,c
   579   0011AC  EFC3  F008         	goto	l1529
   580   0011B0                     l1537:
   581   0011B0  501A               	movf	___awmod@sign^0,w,c
   582   0011B2  B4D8               	btfsc	status,2,c
   583   0011B4  EFDE  F008         	goto	u541
   584   0011B8  EFE0  F008         	goto	u540
   585   0011BC                     u541:
   586   0011BC  EFE4  F008         	goto	l1541
   587   0011C0                     u540:
   588   0011C0  6C15               	negf	___awmod@dividend^0,c
   589   0011C2  1E16               	comf	(___awmod@dividend+1)^0,f,c
   590   0011C4  B0D8               	btfsc	status,0,c
   591   0011C6  2A16               	incf	(___awmod@dividend+1)^0,f,c
   592   0011C8                     l1541:
   593   0011C8  C015  F015         	movff	___awmod@dividend,?___awmod
   594   0011CC  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
   595   0011D0  0012               	return		;funcret
   596   0011D2                     __end_of___awmod:
   597                           	callstack 0
   598                           
   599 ;; *************** function _UARTWriteByte *****************
   600 ;; Defined at:
   601 ;;		line 54 in file "uart.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  data            1    wreg     unsigned char 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  data            1   20[COMRAM] unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;Total ram usage:        1 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; Hardware stack levels required when called: 5
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text2
   630   0016CC                     __ptext2:
   631                           	callstack 0
   632   0016CC                     _UARTWriteByte:
   633                           	callstack 25
   634                           
   635                           ;incstack = 0
   636                           ;UARTWriteByte@data stored from wreg
   637   0016CC  6E15               	movwf	UARTWriteByte@data^0,c
   638   0016CE                     l143:
   639   0016CE  A2AC               	btfss	172,1,c	;volatile
   640   0016D0  EF6C  F00B         	goto	u111
   641   0016D4  EF6E  F00B         	goto	u110
   642   0016D8                     u111:
   643   0016D8  EF67  F00B         	goto	l143
   644   0016DC                     u110:
   645   0016DC                     
   646                           ;uart.c: 58:     TXREG1 = data;
   647   0016DC  C015  FFAD         	movff	UARTWriteByte@data,4013	;volatile
   648   0016E0  0012               	return		;funcret
   649   0016E2                     __end_of_UARTWriteByte:
   650                           	callstack 0
   651                           
   652 ;; *************** function _UARTReadByte *****************
   653 ;; Defined at:
   654 ;;		line 61 in file "uart.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      unsigned char 
   661 ;; Registers used:
   662 ;;		wreg, status,2
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 5
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text3
   683   00171E                     __ptext3:
   684                           	callstack 0
   685   00171E                     _UARTReadByte:
   686                           	callstack 25
   687   00171E                     
   688                           ;uart.c: 63:     return(RCREG1);
   689   00171E  50AE               	movf	174,w,c	;volatile
   690   001720  0012               	return		;funcret
   691   001722                     __end_of_UARTReadByte:
   692                           	callstack 0
   693                           
   694 ;; *************** function _UARTInit *****************
   695 ;; Defined at:
   696 ;;		line 21 in file "uart.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  baudRate        2   33[COMRAM] unsigned int 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;Total ram usage:        4 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; Hardware stack levels required when called: 6
   717 ;; This function calls:
   718 ;;		___lldiv
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text4
   725   0013F6                     __ptext4:
   726                           	callstack 0
   727   0013F6                     _UARTInit:
   728                           	callstack 24
   729   0013F6                     
   730                           ;uart.c: 23:     TRISCbits.TRISC6 = 1;
   731   0013F6  8C94               	bsf	148,6,c	;volatile
   732                           
   733                           ;uart.c: 24:     TRISCbits.TRISC7 = 1;
   734   0013F8  8E94               	bsf	148,7,c	;volatile
   735                           
   736                           ;uart.c: 25:     ANSELCbits.ANSC7 = 0;
   737   0013FA  010F               	movlb	15	; () banked
   738   0013FC  9F3A               	bcf	58,7,b	;volatile
   739   0013FE                     
   740                           ; BSR set to: 15
   741                           ;uart.c: 27:     TXSTA1 = 0;
   742   0013FE  0E00               	movlw	0
   743   001400  6EAC               	movwf	172,c	;volatile
   744                           
   745                           ;uart.c: 28:     RCSTA1 = 0;
   746   001402  0E00               	movlw	0
   747   001404  6EAB               	movwf	171,c	;volatile
   748   001406                     
   749                           ; BSR set to: 15
   750                           ;uart.c: 30:     TXSTA1bits.SYNC = 0;
   751   001406  98AC               	bcf	172,4,c	;volatile
   752   001408                     
   753                           ; BSR set to: 15
   754                           ;uart.c: 31:     TXSTA1bits.TX9 = 0;
   755   001408  9CAC               	bcf	172,6,c	;volatile
   756   00140A                     
   757                           ; BSR set to: 15
   758                           ;uart.c: 32:     RCSTA1bits.RX9 = 0;
   759   00140A  9CAB               	bcf	171,6,c	;volatile
   760   00140C                     
   761                           ; BSR set to: 15
   762                           ;uart.c: 33:     RCSTA1bits.CREN = 1;
   763   00140C  88AB               	bsf	171,4,c	;volatile
   764   00140E                     
   765                           ; BSR set to: 15
   766                           ;uart.c: 34:     RCSTA1bits.ADDEN = 1;
   767   00140E  86AB               	bsf	171,3,c	;volatile
   768   001410                     
   769                           ; BSR set to: 15
   770                           ;uart.c: 35:     PIE1bits.RC1IE = 1;
   771   001410  8A9D               	bsf	157,5,c	;volatile
   772   001412                     
   773                           ; BSR set to: 15
   774                           ;uart.c: 36:     PIE1bits.TX1IE = 0;
   775   001412  989D               	bcf	157,4,c	;volatile
   776   001414                     
   777                           ; BSR set to: 15
   778                           ;uart.c: 38:     TXSTA1bits.BRGH = 1;
   779   001414  84AC               	bsf	172,2,c	;volatile
   780   001416                     
   781                           ; BSR set to: 15
   782                           ;uart.c: 39:     BAUDCON1bits.BRG16 = 1;
   783   001416  86B8               	bsf	184,3,c	;volatile
   784   001418                     
   785                           ; BSR set to: 15
   786                           ;uart.c: 40:     SPBRG1 = (UINT8_T)(((1000000UL / (4 * baudRate)) - 1));
   787   001418  0E40               	movlw	64
   788   00141A  6E15               	movwf	___lldiv@dividend^0,c
   789   00141C  0E42               	movlw	66
   790   00141E  6E16               	movwf	(___lldiv@dividend+1)^0,c
   791   001420  0E0F               	movlw	15
   792   001422  6E17               	movwf	(___lldiv@dividend+2)^0,c
   793   001424  0E00               	movlw	0
   794   001426  6E18               	movwf	(___lldiv@dividend+3)^0,c
   795   001428  C022  F024         	movff	UARTInit@baudRate,??_UARTInit
   796   00142C  C023  F025         	movff	UARTInit@baudRate+1,??_UARTInit+1
   797   001430  90D8               	bcf	status,0,c
   798   001432  3624               	rlcf	??_UARTInit^0,f,c
   799   001434  3625               	rlcf	(??_UARTInit+1)^0,f,c
   800   001436  90D8               	bcf	status,0,c
   801   001438  3624               	rlcf	??_UARTInit^0,f,c
   802   00143A  3625               	rlcf	(??_UARTInit+1)^0,f,c
   803   00143C  C024  F019         	movff	??_UARTInit,___lldiv@divisor
   804   001440  C025  F01A         	movff	??_UARTInit+1,___lldiv@divisor+1
   805   001444  6A1B               	clrf	(___lldiv@divisor+2)^0,c
   806   001446  6A1C               	clrf	(___lldiv@divisor+3)^0,c
   807   001448  ECE9  F008         	call	___lldiv	;wreg free
   808   00144C  0415               	decf	?___lldiv^0,w,c
   809   00144E  6EAF               	movwf	175,c	;volatile
   810   001450                     
   811                           ;uart.c: 41:     SPBRGH1 = 0;
   812   001450  0E00               	movlw	0
   813   001452  6EB0               	movwf	176,c	;volatile
   814   001454                     
   815                           ;uart.c: 45:     TXSTA1bits.TXEN = 1;
   816   001454  8AAC               	bsf	172,5,c	;volatile
   817   001456                     
   818                           ;uart.c: 46:     RCSTA1bits.SPEN = 1;
   819   001456  8EAB               	bsf	171,7,c	;volatile
   820   001458                     
   821                           ;uart.c: 48:     RCIF = 0;
   822   001458  9A9E               	bcf	3998,5,c	;volatile
   823   00145A                     
   824                           ;uart.c: 49:     RCIP = 0;
   825   00145A  9A9F               	bcf	3999,5,c	;volatile
   826   00145C                     
   827                           ;uart.c: 50:     RCIE = 1;
   828   00145C  8A9D               	bsf	3997,5,c	;volatile
   829   00145E                     
   830                           ;uart.c: 51:     PEIE = 1;
   831   00145E  8CF2               	bsf	4082,6,c	;volatile
   832   001460  0012               	return		;funcret
   833   001462                     __end_of_UARTInit:
   834                           	callstack 0
   835                           
   836 ;; *************** function ___lldiv *****************
   837 ;; Defined at:
   838 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  dividend        4   20[COMRAM] unsigned long 
   841 ;;  divisor         4   24[COMRAM] unsigned long 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  quotient        4   28[COMRAM] unsigned long 
   844 ;;  counter         1   32[COMRAM] unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  4   20[COMRAM] unsigned long 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   854 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;Total ram usage:       13 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 5
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_UARTInit
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text5
   869   0011D2                     __ptext5:
   870                           	callstack 0
   871   0011D2                     ___lldiv:
   872                           	callstack 24
   873   0011D2  0E00               	movlw	0
   874   0011D4  6E1D               	movwf	___lldiv@quotient^0,c
   875   0011D6  0E00               	movlw	0
   876   0011D8  6E1E               	movwf	(___lldiv@quotient+1)^0,c
   877   0011DA  0E00               	movlw	0
   878   0011DC  6E1F               	movwf	(___lldiv@quotient+2)^0,c
   879   0011DE  0E00               	movlw	0
   880   0011E0  6E20               	movwf	(___lldiv@quotient+3)^0,c
   881   0011E2  5019               	movf	___lldiv@divisor^0,w,c
   882   0011E4  101A               	iorwf	(___lldiv@divisor+1)^0,w,c
   883   0011E6  101B               	iorwf	(___lldiv@divisor+2)^0,w,c
   884   0011E8  101C               	iorwf	(___lldiv@divisor+3)^0,w,c
   885   0011EA  B4D8               	btfsc	status,2,c
   886   0011EC  EFFA  F008         	goto	u401
   887   0011F0  EFFC  F008         	goto	u400
   888   0011F4                     u401:
   889   0011F4  EF32  F009         	goto	l189
   890   0011F8                     u400:
   891   0011F8  0E01               	movlw	1
   892   0011FA  6E21               	movwf	___lldiv@counter^0,c
   893   0011FC  EF06  F009         	goto	l1383
   894   001200                     l1381:
   895   001200  90D8               	bcf	status,0,c
   896   001202  3619               	rlcf	___lldiv@divisor^0,f,c
   897   001204  361A               	rlcf	(___lldiv@divisor+1)^0,f,c
   898   001206  361B               	rlcf	(___lldiv@divisor+2)^0,f,c
   899   001208  361C               	rlcf	(___lldiv@divisor+3)^0,f,c
   900   00120A  2A21               	incf	___lldiv@counter^0,f,c
   901   00120C                     l1383:
   902   00120C  AE1C               	btfss	(___lldiv@divisor+3)^0,7,c
   903   00120E  EF0B  F009         	goto	u411
   904   001212  EF0D  F009         	goto	u410
   905   001216                     u411:
   906   001216  EF00  F009         	goto	l1381
   907   00121A                     u410:
   908   00121A                     l1385:
   909   00121A  90D8               	bcf	status,0,c
   910   00121C  361D               	rlcf	___lldiv@quotient^0,f,c
   911   00121E  361E               	rlcf	(___lldiv@quotient+1)^0,f,c
   912   001220  361F               	rlcf	(___lldiv@quotient+2)^0,f,c
   913   001222  3620               	rlcf	(___lldiv@quotient+3)^0,f,c
   914   001224  5019               	movf	___lldiv@divisor^0,w,c
   915   001226  5C15               	subwf	___lldiv@dividend^0,w,c
   916   001228  501A               	movf	(___lldiv@divisor+1)^0,w,c
   917   00122A  5816               	subwfb	(___lldiv@dividend+1)^0,w,c
   918   00122C  501B               	movf	(___lldiv@divisor+2)^0,w,c
   919   00122E  5817               	subwfb	(___lldiv@dividend+2)^0,w,c
   920   001230  501C               	movf	(___lldiv@divisor+3)^0,w,c
   921   001232  5818               	subwfb	(___lldiv@dividend+3)^0,w,c
   922   001234  A0D8               	btfss	status,0,c
   923   001236  EF1F  F009         	goto	u421
   924   00123A  EF21  F009         	goto	u420
   925   00123E                     u421:
   926   00123E  EF2A  F009         	goto	l1393
   927   001242                     u420:
   928   001242  5019               	movf	___lldiv@divisor^0,w,c
   929   001244  5E15               	subwf	___lldiv@dividend^0,f,c
   930   001246  501A               	movf	(___lldiv@divisor+1)^0,w,c
   931   001248  5A16               	subwfb	(___lldiv@dividend+1)^0,f,c
   932   00124A  501B               	movf	(___lldiv@divisor+2)^0,w,c
   933   00124C  5A17               	subwfb	(___lldiv@dividend+2)^0,f,c
   934   00124E  501C               	movf	(___lldiv@divisor+3)^0,w,c
   935   001250  5A18               	subwfb	(___lldiv@dividend+3)^0,f,c
   936   001252  801D               	bsf	___lldiv@quotient^0,0,c
   937   001254                     l1393:
   938   001254  90D8               	bcf	status,0,c
   939   001256  321C               	rrcf	(___lldiv@divisor+3)^0,f,c
   940   001258  321B               	rrcf	(___lldiv@divisor+2)^0,f,c
   941   00125A  321A               	rrcf	(___lldiv@divisor+1)^0,f,c
   942   00125C  3219               	rrcf	___lldiv@divisor^0,f,c
   943   00125E  2E21               	decfsz	___lldiv@counter^0,f,c
   944   001260  EF0D  F009         	goto	l1385
   945   001264                     l189:
   946   001264  C01D  F015         	movff	___lldiv@quotient,?___lldiv
   947   001268  C01E  F016         	movff	___lldiv@quotient+1,?___lldiv+1
   948   00126C  C01F  F017         	movff	___lldiv@quotient+2,?___lldiv+2
   949   001270  C020  F018         	movff	___lldiv@quotient+3,?___lldiv+3
   950   001274  0012               	return		;funcret
   951   001276                     __end_of___lldiv:
   952                           	callstack 0
   953                           
   954 ;; *************** function _LCDWriteStr *****************
   955 ;; Defined at:
   956 ;;		line 163 in file "lcd.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  string          2   26[COMRAM] PTR const unsigned char 
   959 ;;		 -> STR_4(14), STR_3(14), LCDWriteInt@string(3), LCDWriteFloat@string(5), 
   960 ;;		 -> LCDWriteHexa@string(3), STR_1(11), 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  i               1   30[COMRAM] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;Total ram usage:        5 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; Hardware stack levels required when called: 8
   979 ;; This function calls:
   980 ;;		_LCDPutChar
   981 ;; This function is called by:
   982 ;;		_main
   983 ;;		_LCDWriteHexa
   984 ;;		_LCDWriteFloat
   985 ;;		_LCDWriteInt
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text6
   990   0012FE                     __ptext6:
   991                           	callstack 0
   992   0012FE                     _LCDWriteStr:
   993                           	callstack 22
   994   0012FE                     
   995                           ;lcd.c: 163: void LCDWriteStr(const char *string);lcd.c: 164: {;lcd.c: 165:   UINT8_T i 
      +                          = 0;
   996   0012FE  0E00               	movlw	0
   997   001300  6E1F               	movwf	LCDWriteStr@i^0,c
   998                           
   999                           ;lcd.c: 167:   while (string[i])
  1000   001302  EF9D  F009         	goto	l1503
  1001   001306                     l1499:
  1002                           
  1003                           ;lcd.c: 168:     LCDPutChar(string[i++]);
  1004   001306  501F               	movf	LCDWriteStr@i^0,w,c
  1005   001308  241B               	addwf	LCDWriteStr@string^0,w,c
  1006   00130A  6E1D               	movwf	??_LCDWriteStr^0,c
  1007   00130C  0E00               	movlw	0
  1008   00130E  201C               	addwfc	(LCDWriteStr@string+1)^0,w,c
  1009   001310  6E1E               	movwf	(??_LCDWriteStr+1)^0,c
  1010   001312  C01D  FFF6         	movff	??_LCDWriteStr,tblptrl
  1011   001316  C01E  FFF7         	movff	??_LCDWriteStr+1,tblptrh
  1012   00131A  0E00               	movlw	low (__smallconst shr (0+16))
  1013   00131C  6EF8               	movwf	tblptru,c
  1014   00131E  0E0F               	movlw	(high __ramtop+-1)
  1015   001320  64F7               	cpfsgt	tblptrh,c
  1016   001322  D003               	bra	u467
  1017   001324  0008               	tblrd		*
  1018   001326  50F5               	movf	tablat,w,c
  1019   001328  D005               	bra	u460
  1020   00132A                     u467:
  1021   00132A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1022   00132E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1023   001332  50EF               	movf	indf0,w,c
  1024   001334                     u460:
  1025   001334  EC71  F00B         	call	_LCDPutChar
  1026   001338  2A1F               	incf	LCDWriteStr@i^0,f,c
  1027   00133A                     l1503:
  1028                           
  1029                           ;lcd.c: 167:   while (string[i])
  1030   00133A  501F               	movf	LCDWriteStr@i^0,w,c
  1031   00133C  241B               	addwf	LCDWriteStr@string^0,w,c
  1032   00133E  6E1D               	movwf	??_LCDWriteStr^0,c
  1033   001340  0E00               	movlw	0
  1034   001342  201C               	addwfc	(LCDWriteStr@string+1)^0,w,c
  1035   001344  6E1E               	movwf	(??_LCDWriteStr+1)^0,c
  1036   001346  C01D  FFF6         	movff	??_LCDWriteStr,tblptrl
  1037   00134A  C01E  FFF7         	movff	??_LCDWriteStr+1,tblptrh
  1038   00134E  0E00               	movlw	low (__smallconst shr (0+16))
  1039   001350  6EF8               	movwf	tblptru,c
  1040   001352  0E0F               	movlw	(high __ramtop+-1)
  1041   001354  64F7               	cpfsgt	tblptrh,c
  1042   001356  D003               	bra	u477
  1043   001358  0008               	tblrd		*
  1044   00135A  50F5               	movf	tablat,w,c
  1045   00135C  D005               	bra	u470
  1046   00135E                     u477:
  1047   00135E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1048   001362  CFF7 FFEA          	movff	tblptrh,fsr0h
  1049   001366  50EF               	movf	indf0,w,c
  1050   001368                     u470:
  1051   001368  0900               	iorlw	0
  1052   00136A  A4D8               	btfss	status,2,c
  1053   00136C  EFBA  F009         	goto	u481
  1054   001370  EFBC  F009         	goto	u480
  1055   001374                     u481:
  1056   001374  EF83  F009         	goto	l1499
  1057   001378                     u480:
  1058   001378  0012               	return		;funcret
  1059   00137A                     __end_of_LCDWriteStr:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _LCDPutChar *****************
  1063 ;; Defined at:
  1064 ;;		line 150 in file "lcd.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  data            1    wreg     unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  data            1   25[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;Total ram usage:        1 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; Hardware stack levels required when called: 7
  1085 ;; This function calls:
  1086 ;;		_WaitLCD
  1087 ;;		_WriteByte
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;;		_LCDWriteStr
  1091 ;;		_LCDPutByte
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text7
  1096   0016E2                     __ptext7:
  1097                           	callstack 0
  1098   0016E2                     _LCDPutChar:
  1099                           	callstack 22
  1100                           
  1101                           ;incstack = 0
  1102                           ;LCDPutChar@data stored from wreg
  1103   0016E2  6E1A               	movwf	LCDPutChar@data^0,c
  1104   0016E4                     
  1105                           ;lcd.c: 150: void LCDPutChar(UINT8_T data);lcd.c: 151: {;lcd.c: 152:     WriteByte(0, da
      +                          ta);
  1106   0016E4  C01A  F018         	movff	LCDPutChar@data,WriteByte@data
  1107   0016E8  0E00               	movlw	0
  1108   0016EA  EC41  F00B         	call	_WriteByte
  1109                           
  1110                           ;lcd.c: 153:     WaitLCD();
  1111   0016EE  EC17  F00B         	call	_WaitLCD	;wreg free
  1112   0016F2  0012               	return		;funcret
  1113   0016F4                     __end_of_LCDPutChar:
  1114                           	callstack 0
  1115                           
  1116 ;; *************** function _LCDInit *****************
  1117 ;; Defined at:
  1118 ;;		line 94 in file "lcd.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;Total ram usage:        1 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 7
  1139 ;; This function calls:
  1140 ;;		_WaitLCD
  1141 ;;		_WriteNibble
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text8
  1148   00103A                     __ptext8:
  1149                           	callstack 0
  1150   00103A                     _LCDInit:
  1151                           	callstack 23
  1152   00103A                     
  1153                           ;lcd.c: 96:     TRISDbits.TRISD7 = 0;
  1154   00103A  9E95               	bcf	149,7,c	;volatile
  1155                           
  1156                           ;lcd.c: 97:     TRISDbits.TRISD6 = 0;
  1157   00103C  9C95               	bcf	149,6,c	;volatile
  1158                           
  1159                           ;lcd.c: 98:     TRISDbits.TRISD5 = 0;
  1160   00103E  9A95               	bcf	149,5,c	;volatile
  1161                           
  1162                           ;lcd.c: 99:     TRISDbits.TRISD4 = 0;
  1163   001040  9895               	bcf	149,4,c	;volatile
  1164                           
  1165                           ;lcd.c: 100:     TRISDbits.TRISD0 = 0;
  1166   001042  9095               	bcf	149,0,c	;volatile
  1167                           
  1168                           ;lcd.c: 101:     TRISDbits.TRISD1 = 0;
  1169   001044  9295               	bcf	149,1,c	;volatile
  1170                           
  1171                           ;lcd.c: 102:     TRISDbits.TRISD2 = 0;
  1172   001046  9495               	bcf	149,2,c	;volatile
  1173                           
  1174                           ;lcd.c: 103:     TRISDbits.TRISD3 = 0;
  1175   001048  9695               	bcf	149,3,c	;volatile
  1176                           
  1177                           ;lcd.c: 105:     LATDbits.LATD7 = 1;
  1178   00104A  8E8C               	bsf	140,7,c	;volatile
  1179   00104C                     
  1180                           ;lcd.c: 106:     _delay(30000);
  1181   00104C  0E27               	movlw	39
  1182   00104E  6E18               	movwf	??_LCDInit^0,c
  1183   001050  0EF5               	movlw	245
  1184   001052                     u667:
  1185   001052  2EE8               	decfsz	wreg,f,c
  1186   001054  D7FE               	bra	u667
  1187   001056  2E18               	decfsz	??_LCDInit^0,f,c
  1188   001058  D7FC               	bra	u667
  1189   00105A  0000               	nop	
  1190   00105C                     
  1191                           ;lcd.c: 107:     WriteNibble(1, 0x03);
  1192   00105C  0E03               	movlw	3
  1193   00105E  6E15               	movwf	WriteNibble@data^0,c
  1194   001060  0E01               	movlw	1
  1195   001062  EC9B  F00A         	call	_WriteNibble
  1196   001066                     
  1197                           ;lcd.c: 108:     _delay(3000);
  1198   001066  0E04               	movlw	4
  1199   001068  6E18               	movwf	??_LCDInit^0,c
  1200   00106A  0EE4               	movlw	228
  1201   00106C                     u677:
  1202   00106C  2EE8               	decfsz	wreg,f,c
  1203   00106E  D7FE               	bra	u677
  1204   001070  2E18               	decfsz	??_LCDInit^0,f,c
  1205   001072  D7FC               	bra	u677
  1206   001074  D000               	nop2	
  1207                           
  1208                           ;lcd.c: 109:     WriteNibble(1, 0x03);
  1209   001076  0E03               	movlw	3
  1210   001078  6E15               	movwf	WriteNibble@data^0,c
  1211   00107A  0E01               	movlw	1
  1212   00107C  EC9B  F00A         	call	_WriteNibble
  1213   001080                     
  1214                           ;lcd.c: 110:     _delay(100);
  1215   001080  0E21               	movlw	33
  1216   001082                     u687:
  1217   001082  2EE8               	decfsz	wreg,f,c
  1218   001084  D7FE               	bra	u687
  1219   001086  0000               	nop	
  1220   001088                     
  1221                           ;lcd.c: 111:     WriteNibble(1, 0x03);
  1222   001088  0E03               	movlw	3
  1223   00108A  6E15               	movwf	WriteNibble@data^0,c
  1224   00108C  0E01               	movlw	1
  1225   00108E  EC9B  F00A         	call	_WriteNibble
  1226                           
  1227                           ;lcd.c: 112:     _delay(100);
  1228   001092  0E21               	movlw	33
  1229   001094                     u697:
  1230   001094  2EE8               	decfsz	wreg,f,c
  1231   001096  D7FE               	bra	u697
  1232   001098  0000               	nop	
  1233   00109A                     
  1234                           ;lcd.c: 113:     WriteNibble(1, 0b00000010);
  1235   00109A  0E02               	movlw	2
  1236   00109C  6E15               	movwf	WriteNibble@data^0,c
  1237   00109E  0E01               	movlw	1
  1238   0010A0  EC9B  F00A         	call	_WriteNibble
  1239   0010A4                     
  1240                           ;lcd.c: 114:     WaitLCD();
  1241   0010A4  EC17  F00B         	call	_WaitLCD	;wreg free
  1242   0010A8                     
  1243                           ;lcd.c: 115:     WriteNibble(1, 0b00000010);
  1244   0010A8  0E02               	movlw	2
  1245   0010AA  6E15               	movwf	WriteNibble@data^0,c
  1246   0010AC  0E01               	movlw	1
  1247   0010AE  EC9B  F00A         	call	_WriteNibble
  1248   0010B2                     
  1249                           ;lcd.c: 116:     WriteNibble(1, 0b00001000);
  1250   0010B2  0E08               	movlw	8
  1251   0010B4  6E15               	movwf	WriteNibble@data^0,c
  1252   0010B6  0E01               	movlw	1
  1253   0010B8  EC9B  F00A         	call	_WriteNibble
  1254   0010BC                     
  1255                           ;lcd.c: 117:     WaitLCD();
  1256   0010BC  EC17  F00B         	call	_WaitLCD	;wreg free
  1257   0010C0                     
  1258                           ;lcd.c: 118:     WriteNibble(1, 0b00000000);
  1259   0010C0  0E00               	movlw	0
  1260   0010C2  6E15               	movwf	WriteNibble@data^0,c
  1261   0010C4  0E01               	movlw	1
  1262   0010C6  EC9B  F00A         	call	_WriteNibble
  1263   0010CA                     
  1264                           ;lcd.c: 119:     WriteNibble(1, 0b00001000);
  1265   0010CA  0E08               	movlw	8
  1266   0010CC  6E15               	movwf	WriteNibble@data^0,c
  1267   0010CE  0E01               	movlw	1
  1268   0010D0  EC9B  F00A         	call	_WriteNibble
  1269   0010D4                     
  1270                           ;lcd.c: 120:     WaitLCD();
  1271   0010D4  EC17  F00B         	call	_WaitLCD	;wreg free
  1272   0010D8                     
  1273                           ;lcd.c: 121:     WriteNibble(1, 0b00000000);
  1274   0010D8  0E00               	movlw	0
  1275   0010DA  6E15               	movwf	WriteNibble@data^0,c
  1276   0010DC  0E01               	movlw	1
  1277   0010DE  EC9B  F00A         	call	_WriteNibble
  1278   0010E2                     
  1279                           ;lcd.c: 122:     WriteNibble(1, 0b00001100);
  1280   0010E2  0E0C               	movlw	12
  1281   0010E4  6E15               	movwf	WriteNibble@data^0,c
  1282   0010E6  0E01               	movlw	1
  1283   0010E8  EC9B  F00A         	call	_WriteNibble
  1284   0010EC                     
  1285                           ;lcd.c: 125:     WaitLCD();
  1286   0010EC  EC17  F00B         	call	_WaitLCD	;wreg free
  1287   0010F0                     
  1288                           ;lcd.c: 126:     WriteNibble(1, 0b00000000);
  1289   0010F0  0E00               	movlw	0
  1290   0010F2  6E15               	movwf	WriteNibble@data^0,c
  1291   0010F4  0E01               	movlw	1
  1292   0010F6  EC9B  F00A         	call	_WriteNibble
  1293   0010FA                     
  1294                           ;lcd.c: 127:     WriteNibble(1, 0b00000001);
  1295   0010FA  0E01               	movlw	1
  1296   0010FC  6E15               	movwf	WriteNibble@data^0,c
  1297   0010FE  0E01               	movlw	1
  1298   001100  EC9B  F00A         	call	_WriteNibble
  1299   001104                     
  1300                           ;lcd.c: 128:     WaitLCD();
  1301   001104  EC17  F00B         	call	_WaitLCD	;wreg free
  1302   001108                     
  1303                           ;lcd.c: 129:     WriteNibble(1, 0b00000000);
  1304   001108  0E00               	movlw	0
  1305   00110A  6E15               	movwf	WriteNibble@data^0,c
  1306   00110C  0E01               	movlw	1
  1307   00110E  EC9B  F00A         	call	_WriteNibble
  1308   001112                     
  1309                           ;lcd.c: 130:     WriteNibble(1, 0b00000110);
  1310   001112  0E06               	movlw	6
  1311   001114  6E15               	movwf	WriteNibble@data^0,c
  1312   001116  0E01               	movlw	1
  1313   001118  EC9B  F00A         	call	_WriteNibble
  1314   00111C                     
  1315                           ;lcd.c: 131:     WaitLCD();
  1316   00111C  EC17  F00B         	call	_WaitLCD	;wreg free
  1317   001120  0012               	return		;funcret
  1318   001122                     __end_of_LCDInit:
  1319                           	callstack 0
  1320                           
  1321 ;; *************** function _LCDGoto *****************
  1322 ;; Defined at:
  1323 ;;		line 141 in file "lcd.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  column          1    wreg     unsigned char 
  1326 ;;  row             1   25[COMRAM] unsigned char 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  column          1   30[COMRAM] unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1338 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;Total ram usage:        6 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 7
  1345 ;; This function calls:
  1346 ;;		_WaitLCD
  1347 ;;		_WriteByte
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;;		_LCDWriteHexa
  1351 ;;		_LCDWriteFloat
  1352 ;;		_LCDWriteInt
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text9
  1357   001462                     __ptext9:
  1358                           	callstack 0
  1359   001462                     _LCDGoto:
  1360                           	callstack 23
  1361                           
  1362                           ;incstack = 0
  1363                           ;LCDGoto@column stored from wreg
  1364   001462  6E1F               	movwf	LCDGoto@column^0,c
  1365   001464                     
  1366                           ;lcd.c: 141: void LCDGoto(UINT8_T column, UINT8_T row);lcd.c: 142: {;lcd.c: 143:     if 
      +                          ((row > (2 - 1)) || (column > (16 - 1)))
  1367   001464  0E02               	movlw	2
  1368   001466  601A               	cpfslt	LCDGoto@row^0,c
  1369   001468  EF38  F00A         	goto	u431
  1370   00146C  EF3A  F00A         	goto	u430
  1371   001470                     u431:
  1372   001470  EF65  F00A         	goto	l64
  1373   001474                     u430:
  1374   001474  0E0F               	movlw	15
  1375   001476  641F               	cpfsgt	LCDGoto@column^0,c
  1376   001478  EF40  F00A         	goto	u441
  1377   00147C  EF42  F00A         	goto	u440
  1378   001480                     u441:
  1379   001480  EF44  F00A         	goto	l1487
  1380   001484                     u440:
  1381   001484  EF65  F00A         	goto	l64
  1382   001488                     l1487:
  1383                           
  1384                           ;lcd.c: 146:     WriteByte(1, (row == 1) ? (0xC0 | column) : (0x80 | column));
  1385   001488  041A               	decf	LCDGoto@row^0,w,c
  1386   00148A  B4D8               	btfsc	status,2,c
  1387   00148C  EF4A  F00A         	goto	u451
  1388   001490  EF4C  F00A         	goto	u450
  1389   001494                     u451:
  1390   001494  EF56  F00A         	goto	l1491
  1391   001498                     u450:
  1392   001498  0E80               	movlw	128
  1393   00149A  C01F  F01B         	movff	LCDGoto@column,??_LCDGoto
  1394   00149E  6A1C               	clrf	(??_LCDGoto+1)^0,c
  1395   0014A0  101B               	iorwf	??_LCDGoto^0,w,c
  1396   0014A2  6E1D               	movwf	_LCDGoto$217^0,c
  1397   0014A4  501C               	movf	(??_LCDGoto+1)^0,w,c
  1398   0014A6  6E1E               	movwf	(_LCDGoto$217+1)^0,c
  1399   0014A8  EF5E  F00A         	goto	l1493
  1400   0014AC                     l1491:
  1401   0014AC  0EC0               	movlw	192
  1402   0014AE  C01F  F01B         	movff	LCDGoto@column,??_LCDGoto
  1403   0014B2  6A1C               	clrf	(??_LCDGoto+1)^0,c
  1404   0014B4  101B               	iorwf	??_LCDGoto^0,w,c
  1405   0014B6  6E1D               	movwf	_LCDGoto$217^0,c
  1406   0014B8  501C               	movf	(??_LCDGoto+1)^0,w,c
  1407   0014BA  6E1E               	movwf	(_LCDGoto$217+1)^0,c
  1408   0014BC                     l1493:
  1409   0014BC  C01D  F018         	movff	_LCDGoto$217,WriteByte@data
  1410   0014C0  0E01               	movlw	1
  1411   0014C2  EC41  F00B         	call	_WriteByte
  1412   0014C6                     
  1413                           ;lcd.c: 147:     WaitLCD();
  1414   0014C6  EC17  F00B         	call	_WaitLCD	;wreg free
  1415   0014CA                     l64:
  1416   0014CA  0012               	return		;funcret
  1417   0014CC                     __end_of_LCDGoto:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _WriteByte *****************
  1421 ;; Defined at:
  1422 ;;		line 88 in file "lcd.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  cmd             1    wreg     unsigned char 
  1425 ;;  data            1   23[COMRAM] unsigned char 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  cmd             1   24[COMRAM] unsigned char 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, status,2, status,0, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1437 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;Total ram usage:        2 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 6
  1444 ;; This function calls:
  1445 ;;		_WriteNibble
  1446 ;; This function is called by:
  1447 ;;		_LCDGoto
  1448 ;;		_LCDPutChar
  1449 ;;		_LCDClear
  1450 ;;		_LCDShiftDisplay
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text10
  1455   001682                     __ptext10:
  1456                           	callstack 0
  1457   001682                     _WriteByte:
  1458                           	callstack 22
  1459                           
  1460                           ;incstack = 0
  1461                           ;WriteByte@cmd stored from wreg
  1462   001682  6E19               	movwf	WriteByte@cmd^0,c
  1463   001684                     
  1464                           ;lcd.c: 88: void WriteByte(UINT8_T cmd, UINT8_T data);lcd.c: 89: {;lcd.c: 90:     WriteN
      +                          ibble(cmd, data >> 4);
  1465   001684  3818               	swapf	WriteByte@data^0,w,c
  1466   001686  0B0F               	andlw	15
  1467   001688  6E15               	movwf	WriteNibble@data^0,c
  1468   00168A  5019               	movf	WriteByte@cmd^0,w,c
  1469   00168C  EC9B  F00A         	call	_WriteNibble
  1470                           
  1471                           ;lcd.c: 91:     WriteNibble(cmd, data);
  1472   001690  C018  F015         	movff	WriteByte@data,WriteNibble@data
  1473   001694  5019               	movf	WriteByte@cmd^0,w,c
  1474   001696  EC9B  F00A         	call	_WriteNibble
  1475   00169A  0012               	return		;funcret
  1476   00169C                     __end_of_WriteByte:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _WriteNibble *****************
  1480 ;; Defined at:
  1481 ;;		line 71 in file "lcd.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  cmd             1    wreg     unsigned char 
  1484 ;;  data            1   20[COMRAM] unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  cmd             1   22[COMRAM] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1496 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;Total ram usage:        3 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 5
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_WriteByte
  1507 ;;		_LCDInit
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text11
  1512   001536                     __ptext11:
  1513                           	callstack 0
  1514   001536                     _WriteNibble:
  1515                           	callstack 22
  1516                           
  1517                           ;incstack = 0
  1518                           ;WriteNibble@cmd stored from wreg
  1519   001536  6E17               	movwf	WriteNibble@cmd^0,c
  1520   001538                     
  1521                           ;lcd.c: 71: void WriteNibble(UINT8_T cmd, UINT8_T data);lcd.c: 72: {;lcd.c: 73:     LATD
      +                          bits.LATD4 = (cmd ? 0 : 1);
  1522   001538  5017               	movf	WriteNibble@cmd^0,w,c
  1523   00153A  B4D8               	btfsc	status,2,c
  1524   00153C  EFA2  F00A         	goto	u341
  1525   001540  EFA6  F00A         	goto	u340
  1526   001544                     u341:
  1527   001544  6A16               	clrf	??_WriteNibble^0,c
  1528   001546  2A16               	incf	??_WriteNibble^0,f,c
  1529   001548  EFA7  F00A         	goto	u358
  1530   00154C                     u340:
  1531   00154C  6A16               	clrf	??_WriteNibble^0,c
  1532   00154E                     u358:
  1533   00154E  3A16               	swapf	??_WriteNibble^0,f,c
  1534   001550  508C               	movf	140,w,c	;volatile
  1535   001552  1816               	xorwf	??_WriteNibble^0,w,c
  1536   001554  0BEF               	andlw	-17
  1537   001556  1816               	xorwf	??_WriteNibble^0,w,c
  1538   001558  6E8C               	movwf	140,c	;volatile
  1539   00155A                     
  1540                           ;lcd.c: 74:     LATDbits.LATD5 = 0;
  1541   00155A  9A8C               	bcf	140,5,c	;volatile
  1542   00155C                     
  1543                           ;lcd.c: 75:     LATDbits.LATD6 = 1;
  1544   00155C  8C8C               	bsf	140,6,c	;volatile
  1545   00155E                     
  1546                           ;lcd.c: 77:     LATDbits.LATD0 = LATDbits.LATD1 = LATDbits.LATD2 = LATDbits.LATD3 = 0;
  1547   00155E  968C               	bcf	140,3,c	;volatile
  1548   001560  948C               	bcf	140,2,c	;volatile
  1549   001562  928C               	bcf	140,1,c	;volatile
  1550   001564  908C               	bcf	140,0,c	;volatile
  1551   001566                     
  1552                           ;lcd.c: 78:     __nop();
  1553   001566  0000               	nop	
  1554   001568                     
  1555                           ;lcd.c: 79:     __nop();
  1556   001568  0000               	nop	
  1557                           
  1558                           ;lcd.c: 81:     LATD = (LATD & 0xF0) | (data & 0x0F);
  1559   00156A  C015  F016         	movff	WriteNibble@data,??_WriteNibble
  1560   00156E  0E0F               	movlw	15
  1561   001570  1616               	andwf	??_WriteNibble^0,f,c
  1562   001572  508C               	movf	140,w,c	;volatile
  1563   001574  0BF0               	andlw	240
  1564   001576  1016               	iorwf	??_WriteNibble^0,w,c
  1565   001578  6E8C               	movwf	140,c	;volatile
  1566   00157A                     
  1567                           ;lcd.c: 82:     __nop();
  1568   00157A  0000               	nop	
  1569   00157C                     
  1570                           ;lcd.c: 83:     __nop();
  1571   00157C  0000               	nop	
  1572   00157E                     
  1573                           ;lcd.c: 85:     LATDbits.LATD6 = 0;
  1574   00157E  9C8C               	bcf	140,6,c	;volatile
  1575   001580  0012               	return		;funcret
  1576   001582                     __end_of_WriteNibble:
  1577                           	callstack 0
  1578                           
  1579 ;; *************** function _WaitLCD *****************
  1580 ;; Defined at:
  1581 ;;		line 57 in file "lcd.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  status          1   21[COMRAM] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;Total ram usage:        1 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 6
  1602 ;; This function calls:
  1603 ;;		_ReadByte
  1604 ;; This function is called by:
  1605 ;;		_LCDInit
  1606 ;;		_LCDGoto
  1607 ;;		_LCDPutChar
  1608 ;;		_LCDClear
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text12
  1613   00162E                     __ptext12:
  1614                           	callstack 0
  1615   00162E                     _WaitLCD:
  1616                           	callstack 22
  1617   00162E                     
  1618                           ;lcd.c: 59:     UINT8_T status;;lcd.c: 61:     LATDbits.LATD4 = 0;
  1619   00162E  988C               	bcf	140,4,c	;volatile
  1620                           
  1621                           ;lcd.c: 62:     LATDbits.LATD5 = 1;
  1622   001630  8A8C               	bsf	140,5,c	;volatile
  1623   001632                     l1359:
  1624                           
  1625                           ;lcd.c: 65:         status = ReadByte();
  1626   001632  ECE7  F00A         	call	_ReadByte	;wreg free
  1627   001636  6E16               	movwf	WaitLCD@status^0,c
  1628   001638                     
  1629                           ;lcd.c: 66:     } while (status & 0x80);
  1630   001638  BE16               	btfsc	WaitLCD@status^0,7,c
  1631   00163A  EF21  F00B         	goto	u381
  1632   00163E  EF23  F00B         	goto	u380
  1633   001642                     u381:
  1634   001642  EF19  F00B         	goto	l1359
  1635   001646                     u380:
  1636   001646                     
  1637                           ;lcd.c: 68:     LATDbits.LATD5 = 0;
  1638   001646  9A8C               	bcf	140,5,c	;volatile
  1639   001648  0012               	return		;funcret
  1640   00164A                     __end_of_WaitLCD:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _ReadByte *****************
  1644 ;; Defined at:
  1645 ;;		line 26 in file "lcd.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  status          1   20[COMRAM] unsigned char 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      unsigned char 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;Total ram usage:        1 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 5
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_WaitLCD
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text13
  1674   0015CE                     __ptext13:
  1675                           	callstack 0
  1676   0015CE                     _ReadByte:
  1677                           	callstack 22
  1678   0015CE                     
  1679                           ;lcd.c: 28:     UINT8_T status;;lcd.c: 30:     TRISDbits.TRISD0 = 1;
  1680   0015CE  8095               	bsf	149,0,c	;volatile
  1681                           
  1682                           ;lcd.c: 31:     TRISDbits.TRISD1 = 1;
  1683   0015D0  8295               	bsf	149,1,c	;volatile
  1684                           
  1685                           ;lcd.c: 32:     TRISDbits.TRISD2 = 1;
  1686   0015D2  8495               	bsf	149,2,c	;volatile
  1687                           
  1688                           ;lcd.c: 33:     TRISDbits.TRISD3 = 1;
  1689   0015D4  8695               	bsf	149,3,c	;volatile
  1690                           
  1691                           ;lcd.c: 35:     LATDbits.LATD6 = 1;
  1692   0015D6  8C8C               	bsf	140,6,c	;volatile
  1693                           
  1694                           ;lcd.c: 36:     __nop();
  1695   0015D8  0000               	nop	
  1696                           
  1697                           ;lcd.c: 37:     __nop();
  1698   0015DA  0000               	nop	
  1699   0015DC                     
  1700                           ;lcd.c: 39:     status = PORTD << 4;
  1701   0015DC  3883               	swapf	131,w,c	;volatile
  1702   0015DE  0BF0               	andlw	240
  1703   0015E0  6E15               	movwf	ReadByte@status^0,c
  1704   0015E2                     
  1705                           ;lcd.c: 40:     LATDbits.LATD6 = 0;
  1706   0015E2  9C8C               	bcf	140,6,c	;volatile
  1707   0015E4                     
  1708                           ;lcd.c: 42:     LATDbits.LATD6 = 1;
  1709   0015E4  8C8C               	bsf	140,6,c	;volatile
  1710   0015E6                     
  1711                           ;lcd.c: 43:     __nop();
  1712   0015E6  0000               	nop	
  1713   0015E8                     
  1714                           ;lcd.c: 44:     __nop();
  1715   0015E8  0000               	nop	
  1716                           
  1717                           ;lcd.c: 46:     status |= PORTD & 0x0F;
  1718   0015EA  5083               	movf	131,w,c	;volatile
  1719   0015EC  0B0F               	andlw	15
  1720   0015EE  1215               	iorwf	ReadByte@status^0,f,c
  1721   0015F0                     
  1722                           ;lcd.c: 47:     LATDbits.LATD6 = 0;
  1723   0015F0  9C8C               	bcf	140,6,c	;volatile
  1724   0015F2                     
  1725                           ;lcd.c: 49:     TRISDbits.TRISD0 = 0;
  1726   0015F2  9095               	bcf	149,0,c	;volatile
  1727   0015F4                     
  1728                           ;lcd.c: 50:     TRISDbits.TRISD1 = 0;
  1729   0015F4  9295               	bcf	149,1,c	;volatile
  1730   0015F6                     
  1731                           ;lcd.c: 51:     TRISDbits.TRISD2 = 0;
  1732   0015F6  9495               	bcf	149,2,c	;volatile
  1733   0015F8                     
  1734                           ;lcd.c: 52:     TRISDbits.TRISD3 = 0;
  1735   0015F8  9695               	bcf	149,3,c	;volatile
  1736   0015FA                     
  1737                           ;lcd.c: 54:     return(status);
  1738   0015FA  5015               	movf	ReadByte@status^0,w,c
  1739   0015FC  0012               	return		;funcret
  1740   0015FE                     __end_of_ReadByte:
  1741                           	callstack 0
  1742                           
  1743 ;; *************** function _SerialRxPinInterrupt *****************
  1744 ;; Defined at:
  1745 ;;		line 66 in file "uart.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;Total ram usage:        9 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 4
  1766 ;; This function calls:
  1767 ;;		_exit
  1768 ;;		i1_LCDGoto
  1769 ;;		i1_LCDPutChar
  1770 ;;		i1_LCDWriteStr
  1771 ;;		i1_UARTReadByte
  1772 ;; This function is called by:
  1773 ;;		Interrupt level 1
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	intcodelo
  1778   000018                     __pintcodelo:
  1779                           	callstack 0
  1780   000018                     _SerialRxPinInterrupt:
  1781                           	callstack 22
  1782                           
  1783                           ;incstack = 0
  1784   000018  8032               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1785   00001A  CFD8 F00C          	movff	status,??_SerialRxPinInterrupt
  1786   00001E  CFE8 F00D          	movff	wreg,??_SerialRxPinInterrupt+1
  1787   000022  CFE0 F00E          	movff	bsr,??_SerialRxPinInterrupt+2
  1788   000026  CFE9 F00F          	movff	fsr0l,??_SerialRxPinInterrupt+3
  1789   00002A  CFEA F010          	movff	fsr0h,??_SerialRxPinInterrupt+4
  1790   00002E  CFF6 F011          	movff	tblptrl,??_SerialRxPinInterrupt+5
  1791   000032  CFF7 F012          	movff	tblptrh,??_SerialRxPinInterrupt+6
  1792   000036  CFF8 F013          	movff	tblptru,??_SerialRxPinInterrupt+7
  1793   00003A  CFF5 F014          	movff	tablat,??_SerialRxPinInterrupt+8
  1794   00003E                     
  1795                           ;uart.c: 68:     if (PIR1bits.RCIF == 1) {
  1796   00003E  AA9E               	btfss	158,5,c	;volatile
  1797   000040  EF24  F000         	goto	i1u62_21
  1798   000044  EF26  F000         	goto	i1u62_20
  1799   000048                     i1u62_21:
  1800   000048  EF5C  F000         	goto	i1l159
  1801   00004C                     i1u62_20:
  1802   00004C                     
  1803                           ;uart.c: 70:         if (RCSTA1bits.FERR) {
  1804   00004C  A4AB               	btfss	171,2,c	;volatile
  1805   00004E  EF2B  F000         	goto	i1u63_21
  1806   000052  EF2D  F000         	goto	i1u63_20
  1807   000056                     i1u63_21:
  1808   000056  EF42  F000         	goto	i1l155
  1809   00005A                     i1u63_20:
  1810   00005A                     
  1811                           ;uart.c: 71:             LCDGoto(0, 1);
  1812   00005A  0E01               	movlw	1
  1813   00005C  6E06               	movwf	i1LCDGoto@row^0,c
  1814   00005E  0E00               	movlw	0
  1815   000060  EC66  F00A         	call	i1_LCDGoto
  1816   000064                     
  1817                           ;uart.c: 72:             LCDWriteStr("Framing Error");
  1818   000064  0E12               	movlw	low STR_3
  1819   000066  6E07               	movwf	i1LCDWriteStr@string^0,c
  1820   000068  5007               	movf	i1LCDWriteStr@string^0,w,c
  1821   00006A  A4D8               	btfss	status,2,c
  1822   00006C  0E10               	movlw	high __smallconst
  1823   00006E  6E08               	movwf	(i1LCDWriteStr@string+1)^0,c
  1824   000070  ECBD  F009         	call	i1_LCDWriteStr	;wreg free
  1825   000074                     i1l1649:
  1826                           
  1827                           ;uart.c: 73:             exit(1);
  1828   000074  0E00               	movlw	0
  1829   000076  6E04               	movwf	(exit@code+1)^0,c
  1830   000078  0E01               	movlw	1
  1831   00007A  6E03               	movwf	exit@code^0,c
  1832   00007C  EC83  F00B         	call	_exit	;wreg free
  1833                           
  1834                           ;uart.c: 74:         } else if (RCSTA1bits.OERR) {
  1835   000080  EF5C  F000         	goto	i1l159
  1836   000084                     i1l155:
  1837   000084  A2AB               	btfss	171,1,c	;volatile
  1838   000086  EF47  F000         	goto	i1u64_21
  1839   00008A  EF49  F000         	goto	i1u64_20
  1840   00008E                     i1u64_21:
  1841   00008E  EF58  F000         	goto	i1l1657
  1842   000092                     i1u64_20:
  1843   000092                     
  1844                           ;uart.c: 75:             LCDGoto(0, 1);
  1845   000092  0E01               	movlw	1
  1846   000094  6E06               	movwf	i1LCDGoto@row^0,c
  1847   000096  0E00               	movlw	0
  1848   000098  EC66  F00A         	call	i1_LCDGoto
  1849   00009C                     
  1850                           ;uart.c: 76:             LCDWriteStr("Overrun Error");
  1851   00009C  0E20               	movlw	low STR_4
  1852   00009E  6E07               	movwf	i1LCDWriteStr@string^0,c
  1853   0000A0  5007               	movf	i1LCDWriteStr@string^0,w,c
  1854   0000A2  A4D8               	btfss	status,2,c
  1855   0000A4  0E10               	movlw	high __smallconst
  1856   0000A6  6E08               	movwf	(i1LCDWriteStr@string+1)^0,c
  1857   0000A8  ECBD  F009         	call	i1_LCDWriteStr	;wreg free
  1858   0000AC  EF3A  F000         	goto	i1l1649
  1859   0000B0                     i1l1657:
  1860                           
  1861                           ;uart.c: 79:             LCDPutChar(UARTReadByte());
  1862   0000B0  EC91  F00B         	call	i1_UARTReadByte	;wreg free
  1863   0000B4  EC7A  F00B         	call	i1_LCDPutChar
  1864   0000B8                     i1l159:
  1865   0000B8  C014  FFF5         	movff	??_SerialRxPinInterrupt+8,tablat
  1866   0000BC  C013  FFF8         	movff	??_SerialRxPinInterrupt+7,tblptru
  1867   0000C0  C012  FFF7         	movff	??_SerialRxPinInterrupt+6,tblptrh
  1868   0000C4  C011  FFF6         	movff	??_SerialRxPinInterrupt+5,tblptrl
  1869   0000C8  C010  FFEA         	movff	??_SerialRxPinInterrupt+4,fsr0h
  1870   0000CC  C00F  FFE9         	movff	??_SerialRxPinInterrupt+3,fsr0l
  1871   0000D0  C00E  FFE0         	movff	??_SerialRxPinInterrupt+2,bsr
  1872   0000D4  C00D  FFE8         	movff	??_SerialRxPinInterrupt+1,wreg
  1873   0000D8  C00C  FFD8         	movff	??_SerialRxPinInterrupt,status
  1874   0000DC  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1875   0000DE  0010               	retfie	
  1876   0000E0                     __end_of_SerialRxPinInterrupt:
  1877                           	callstack 0
  1878                           
  1879 ;; *************** function i1_UARTReadByte *****************
  1880 ;; Defined at:
  1881 ;;		line 61 in file "uart.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      unsigned char 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_SerialRxPinInterrupt
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text15
  1909   001722                     __ptext15:
  1910                           	callstack 0
  1911   001722                     i1_UARTReadByte:
  1912                           	callstack 25
  1913   001722                     
  1914                           ;uart.c: 63:     return(RCREG1);
  1915   001722  50AE               	movf	174,w,c	;volatile
  1916   001724  0012               	return		;funcret
  1917   001726                     __end_ofi1_UARTReadByte:
  1918                           	callstack 0
  1919                           
  1920 ;; *************** function i1_LCDWriteStr *****************
  1921 ;; Defined at:
  1922 ;;		line 163 in file "lcd.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  string          2    6[COMRAM] PTR const unsigned char 
  1925 ;;		 -> STR_4(14), STR_3(14), LCDWriteInt@string(3), LCDWriteFloat@string(5), 
  1926 ;;		 -> LCDWriteHexa@string(3), STR_1(11), 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  i               1   10[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;Total ram usage:        5 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 3
  1945 ;; This function calls:
  1946 ;;		i1_LCDPutChar
  1947 ;; This function is called by:
  1948 ;;		_SerialRxPinInterrupt
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text16
  1953   00137A                     __ptext16:
  1954                           	callstack 0
  1955   00137A                     i1_LCDWriteStr:
  1956                           	callstack 22
  1957   00137A                     
  1958                           ;lcd.c: 163: void LCDWriteStr(const char *string);lcd.c: 164: {;lcd.c: 165:   UINT8_T i 
      +                          = 0;
  1959   00137A  0E00               	movlw	0
  1960   00137C  6E0B               	movwf	i1LCDWriteStr@i^0,c
  1961                           
  1962                           ;lcd.c: 167:   while (string[i])
  1963   00137E  EFDB  F009         	goto	i1l1565
  1964   001382                     i1l1561:
  1965                           
  1966                           ;lcd.c: 168:     LCDPutChar(string[i++]);
  1967   001382  500B               	movf	i1LCDWriteStr@i^0,w,c
  1968   001384  2407               	addwf	i1LCDWriteStr@string^0,w,c
  1969   001386  6E09               	movwf	??i1_LCDWriteStr^0,c
  1970   001388  0E00               	movlw	0
  1971   00138A  2008               	addwfc	(i1LCDWriteStr@string+1)^0,w,c
  1972   00138C  6E0A               	movwf	(??i1_LCDWriteStr+1)^0,c
  1973   00138E  C009  FFF6         	movff	??i1_LCDWriteStr,tblptrl
  1974   001392  C00A  FFF7         	movff	??i1_LCDWriteStr+1,tblptrh
  1975   001396  0E00               	movlw	low (__smallconst shr (0+16))
  1976   001398  6EF8               	movwf	tblptru,c
  1977   00139A  0E0F               	movlw	(high __ramtop+-1)
  1978   00139C  64F7               	cpfsgt	tblptrh,c
  1979   00139E  D003               	bra	i1u58_27
  1980   0013A0  0008               	tblrd		*
  1981   0013A2  50F5               	movf	tablat,w,c
  1982   0013A4  D005               	bra	i1u58_20
  1983   0013A6                     i1u58_27:
  1984   0013A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1985   0013AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1986   0013AE  50EF               	movf	indf0,w,c
  1987   0013B0                     i1u58_20:
  1988   0013B0  EC7A  F00B         	call	i1_LCDPutChar
  1989   0013B4  2A0B               	incf	i1LCDWriteStr@i^0,f,c
  1990   0013B6                     i1l1565:
  1991                           
  1992                           ;lcd.c: 167:   while (string[i])
  1993   0013B6  500B               	movf	i1LCDWriteStr@i^0,w,c
  1994   0013B8  2407               	addwf	i1LCDWriteStr@string^0,w,c
  1995   0013BA  6E09               	movwf	??i1_LCDWriteStr^0,c
  1996   0013BC  0E00               	movlw	0
  1997   0013BE  2008               	addwfc	(i1LCDWriteStr@string+1)^0,w,c
  1998   0013C0  6E0A               	movwf	(??i1_LCDWriteStr+1)^0,c
  1999   0013C2  C009  FFF6         	movff	??i1_LCDWriteStr,tblptrl
  2000   0013C6  C00A  FFF7         	movff	??i1_LCDWriteStr+1,tblptrh
  2001   0013CA  0E00               	movlw	low (__smallconst shr (0+16))
  2002   0013CC  6EF8               	movwf	tblptru,c
  2003   0013CE  0E0F               	movlw	(high __ramtop+-1)
  2004   0013D0  64F7               	cpfsgt	tblptrh,c
  2005   0013D2  D003               	bra	i1u59_27
  2006   0013D4  0008               	tblrd		*
  2007   0013D6  50F5               	movf	tablat,w,c
  2008   0013D8  D005               	bra	i1u59_20
  2009   0013DA                     i1u59_27:
  2010   0013DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2011   0013DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2012   0013E2  50EF               	movf	indf0,w,c
  2013   0013E4                     i1u59_20:
  2014   0013E4  0900               	iorlw	0
  2015   0013E6  A4D8               	btfss	status,2,c
  2016   0013E8  EFF8  F009         	goto	i1u60_21
  2017   0013EC  EFFA  F009         	goto	i1u60_20
  2018   0013F0                     i1u60_21:
  2019   0013F0  EFC1  F009         	goto	i1l1561
  2020   0013F4                     i1u60_20:
  2021   0013F4  0012               	return		;funcret
  2022   0013F6                     __end_ofi1_LCDWriteStr:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function i1_LCDPutChar *****************
  2026 ;; Defined at:
  2027 ;;		line 150 in file "lcd.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  data            1    wreg     unsigned char 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  data            1    5[COMRAM] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;Total ram usage:        1 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 2
  2048 ;; This function calls:
  2049 ;;		i1_WaitLCD
  2050 ;;		i1_WriteByte
  2051 ;; This function is called by:
  2052 ;;		_SerialRxPinInterrupt
  2053 ;;		i1_LCDWriteStr
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text17
  2058   0016F4                     __ptext17:
  2059                           	callstack 0
  2060   0016F4                     i1_LCDPutChar:
  2061                           	callstack 22
  2062                           
  2063                           ;incstack = 0
  2064                           ;i1LCDPutChar@data stored from wreg
  2065   0016F4  6E06               	movwf	i1LCDPutChar@data^0,c
  2066   0016F6                     
  2067                           ;lcd.c: 150: void LCDPutChar(UINT8_T data);lcd.c: 151: {;lcd.c: 152:     WriteByte(0, da
      +                          ta);
  2068   0016F6  C006  F004         	movff	i1LCDPutChar@data,i1WriteByte@data
  2069   0016FA  0E00               	movlw	0
  2070   0016FC  EC4E  F00B         	call	i1_WriteByte
  2071                           
  2072                           ;lcd.c: 153:     WaitLCD();
  2073   001700  EC25  F00B         	call	i1_WaitLCD	;wreg free
  2074   001704  0012               	return		;funcret
  2075   001706                     __end_ofi1_LCDPutChar:
  2076                           	callstack 0
  2077                           
  2078 ;; *************** function i1_LCDGoto *****************
  2079 ;; Defined at:
  2080 ;;		line 141 in file "lcd.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  column          1    wreg     unsigned char 
  2083 ;;  row             1    5[COMRAM] unsigned char 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  column          1   10[COMRAM] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2095 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;Total ram usage:        6 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 2
  2102 ;; This function calls:
  2103 ;;		i1_WaitLCD
  2104 ;;		i1_WriteByte
  2105 ;; This function is called by:
  2106 ;;		_SerialRxPinInterrupt
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text18
  2111   0014CC                     __ptext18:
  2112                           	callstack 0
  2113   0014CC                     i1_LCDGoto:
  2114                           	callstack 23
  2115                           
  2116                           ;incstack = 0
  2117                           ;i1LCDGoto@column stored from wreg
  2118   0014CC  6E0B               	movwf	i1LCDGoto@column^0,c
  2119   0014CE                     
  2120                           ;lcd.c: 141: void LCDGoto(UINT8_T column, UINT8_T row);lcd.c: 142: {;lcd.c: 143:     if 
      +                          ((row > (2 - 1)) || (column > (16 - 1)))
  2121   0014CE  0E02               	movlw	2
  2122   0014D0  6006               	cpfslt	i1LCDGoto@row^0,c
  2123   0014D2  EF6D  F00A         	goto	i1u55_21
  2124   0014D6  EF6F  F00A         	goto	i1u55_20
  2125   0014DA                     i1u55_21:
  2126   0014DA  EF9A  F00A         	goto	i1l64
  2127   0014DE                     i1u55_20:
  2128   0014DE  0E0F               	movlw	15
  2129   0014E0  640B               	cpfsgt	i1LCDGoto@column^0,c
  2130   0014E2  EF75  F00A         	goto	i1u56_21
  2131   0014E6  EF77  F00A         	goto	i1u56_20
  2132   0014EA                     i1u56_21:
  2133   0014EA  EF79  F00A         	goto	i1l1549
  2134   0014EE                     i1u56_20:
  2135   0014EE  EF9A  F00A         	goto	i1l64
  2136   0014F2                     i1l1549:
  2137                           
  2138                           ;lcd.c: 146:     WriteByte(1, (row == 1) ? (0xC0 | column) : (0x80 | column));
  2139   0014F2  0406               	decf	i1LCDGoto@row^0,w,c
  2140   0014F4  B4D8               	btfsc	status,2,c
  2141   0014F6  EF7F  F00A         	goto	i1u57_21
  2142   0014FA  EF81  F00A         	goto	i1u57_20
  2143   0014FE                     i1u57_21:
  2144   0014FE  EF8B  F00A         	goto	i1l1553
  2145   001502                     i1u57_20:
  2146   001502  0E80               	movlw	128
  2147   001504  C00B  F007         	movff	i1LCDGoto@column,??i1_LCDGoto
  2148   001508  6A08               	clrf	(??i1_LCDGoto+1)^0,c
  2149   00150A  1007               	iorwf	??i1_LCDGoto^0,w,c
  2150   00150C  6E09               	movwf	i1_LCDGoto$217^0,c
  2151   00150E  5008               	movf	(??i1_LCDGoto+1)^0,w,c
  2152   001510  6E0A               	movwf	(i1_LCDGoto$217+1)^0,c
  2153   001512  EF93  F00A         	goto	i1l1555
  2154   001516                     i1l1553:
  2155   001516  0EC0               	movlw	192
  2156   001518  C00B  F007         	movff	i1LCDGoto@column,??i1_LCDGoto
  2157   00151C  6A08               	clrf	(??i1_LCDGoto+1)^0,c
  2158   00151E  1007               	iorwf	??i1_LCDGoto^0,w,c
  2159   001520  6E09               	movwf	i1_LCDGoto$217^0,c
  2160   001522  5008               	movf	(??i1_LCDGoto+1)^0,w,c
  2161   001524  6E0A               	movwf	(i1_LCDGoto$217+1)^0,c
  2162   001526                     i1l1555:
  2163   001526  C009  F004         	movff	i1_LCDGoto$217,i1WriteByte@data
  2164   00152A  0E01               	movlw	1
  2165   00152C  EC4E  F00B         	call	i1_WriteByte
  2166   001530                     
  2167                           ;lcd.c: 147:     WaitLCD();
  2168   001530  EC25  F00B         	call	i1_WaitLCD	;wreg free
  2169   001534                     i1l64:
  2170   001534  0012               	return		;funcret
  2171   001536                     __end_ofi1_LCDGoto:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function i1_WriteByte *****************
  2175 ;; Defined at:
  2176 ;;		line 88 in file "lcd.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  cmd             1    wreg     unsigned char 
  2179 ;;  data            1    3[COMRAM] unsigned char 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  cmd             1    4[COMRAM] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2191 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;Total ram usage:        2 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 1
  2198 ;; This function calls:
  2199 ;;		i1_WriteNibble
  2200 ;; This function is called by:
  2201 ;;		i1_LCDGoto
  2202 ;;		i1_LCDPutChar
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text19
  2207   00169C                     __ptext19:
  2208                           	callstack 0
  2209   00169C                     i1_WriteByte:
  2210                           	callstack 22
  2211                           
  2212                           ;incstack = 0
  2213                           ;i1WriteByte@cmd stored from wreg
  2214   00169C  6E05               	movwf	i1WriteByte@cmd^0,c
  2215   00169E                     
  2216                           ;lcd.c: 88: void WriteByte(UINT8_T cmd, UINT8_T data);lcd.c: 89: {;lcd.c: 90:     WriteN
      +                          ibble(cmd, data >> 4);
  2217   00169E  3804               	swapf	i1WriteByte@data^0,w,c
  2218   0016A0  0B0F               	andlw	15
  2219   0016A2  6E01               	movwf	i1WriteNibble@data^0,c
  2220   0016A4  5005               	movf	i1WriteByte@cmd^0,w,c
  2221   0016A6  ECC1  F00A         	call	i1_WriteNibble
  2222                           
  2223                           ;lcd.c: 91:     WriteNibble(cmd, data);
  2224   0016AA  C004  F001         	movff	i1WriteByte@data,i1WriteNibble@data
  2225   0016AE  5005               	movf	i1WriteByte@cmd^0,w,c
  2226   0016B0  ECC1  F00A         	call	i1_WriteNibble
  2227   0016B4  0012               	return		;funcret
  2228   0016B6                     __end_ofi1_WriteByte:
  2229                           	callstack 0
  2230                           
  2231 ;; *************** function i1_WriteNibble *****************
  2232 ;; Defined at:
  2233 ;;		line 71 in file "lcd.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  cmd             1    wreg     unsigned char 
  2236 ;;  data            1    0[COMRAM] unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  cmd             1    2[COMRAM] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2248 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;Total ram usage:        3 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		i1_WriteByte
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text20
  2262   001582                     __ptext20:
  2263                           	callstack 0
  2264   001582                     i1_WriteNibble:
  2265                           	callstack 22
  2266                           
  2267                           ;incstack = 0
  2268                           ;i1WriteNibble@cmd stored from wreg
  2269   001582  6E03               	movwf	i1WriteNibble@cmd^0,c
  2270   001584                     
  2271                           ;lcd.c: 71: void WriteNibble(UINT8_T cmd, UINT8_T data);lcd.c: 72: {;lcd.c: 73:     LATD
      +                          bits.LATD4 = (cmd ? 0 : 1);
  2272   001584  5003               	movf	i1WriteNibble@cmd^0,w,c
  2273   001586  B4D8               	btfsc	status,2,c
  2274   001588  EFC8  F00A         	goto	i1u36_21
  2275   00158C  EFCC  F00A         	goto	i1u36_20
  2276   001590                     i1u36_21:
  2277   001590  6A02               	clrf	??i1_WriteNibble^0,c
  2278   001592  2A02               	incf	??i1_WriteNibble^0,f,c
  2279   001594  EFCD  F00A         	goto	i1u37_28
  2280   001598                     i1u36_20:
  2281   001598  6A02               	clrf	??i1_WriteNibble^0,c
  2282   00159A                     i1u37_28:
  2283   00159A  3A02               	swapf	??i1_WriteNibble^0,f,c
  2284   00159C  508C               	movf	140,w,c	;volatile
  2285   00159E  1802               	xorwf	??i1_WriteNibble^0,w,c
  2286   0015A0  0BEF               	andlw	-17
  2287   0015A2  1802               	xorwf	??i1_WriteNibble^0,w,c
  2288   0015A4  6E8C               	movwf	140,c	;volatile
  2289   0015A6                     
  2290                           ;lcd.c: 74:     LATDbits.LATD5 = 0;
  2291   0015A6  9A8C               	bcf	140,5,c	;volatile
  2292   0015A8                     
  2293                           ;lcd.c: 75:     LATDbits.LATD6 = 1;
  2294   0015A8  8C8C               	bsf	140,6,c	;volatile
  2295   0015AA                     
  2296                           ;lcd.c: 77:     LATDbits.LATD0 = LATDbits.LATD1 = LATDbits.LATD2 = LATDbits.LATD3 = 0;
  2297   0015AA  968C               	bcf	140,3,c	;volatile
  2298   0015AC  948C               	bcf	140,2,c	;volatile
  2299   0015AE  928C               	bcf	140,1,c	;volatile
  2300   0015B0  908C               	bcf	140,0,c	;volatile
  2301   0015B2                     
  2302                           ;lcd.c: 78:     __nop();
  2303   0015B2  0000               	nop	
  2304   0015B4                     
  2305                           ;lcd.c: 79:     __nop();
  2306   0015B4  0000               	nop	
  2307                           
  2308                           ;lcd.c: 81:     LATD = (LATD & 0xF0) | (data & 0x0F);
  2309   0015B6  C001  F002         	movff	i1WriteNibble@data,??i1_WriteNibble
  2310   0015BA  0E0F               	movlw	15
  2311   0015BC  1602               	andwf	??i1_WriteNibble^0,f,c
  2312   0015BE  508C               	movf	140,w,c	;volatile
  2313   0015C0  0BF0               	andlw	240
  2314   0015C2  1002               	iorwf	??i1_WriteNibble^0,w,c
  2315   0015C4  6E8C               	movwf	140,c	;volatile
  2316   0015C6                     
  2317                           ;lcd.c: 82:     __nop();
  2318   0015C6  0000               	nop	
  2319   0015C8                     
  2320                           ;lcd.c: 83:     __nop();
  2321   0015C8  0000               	nop	
  2322   0015CA                     
  2323                           ;lcd.c: 85:     LATDbits.LATD6 = 0;
  2324   0015CA  9C8C               	bcf	140,6,c	;volatile
  2325   0015CC  0012               	return		;funcret
  2326   0015CE                     __end_ofi1_WriteNibble:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function i1_WaitLCD *****************
  2330 ;; Defined at:
  2331 ;;		line 57 in file "lcd.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  status          1    1[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        1 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 1
  2352 ;; This function calls:
  2353 ;;		i1_ReadByte
  2354 ;; This function is called by:
  2355 ;;		i1_LCDGoto
  2356 ;;		i1_LCDPutChar
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text21
  2361   00164A                     __ptext21:
  2362                           	callstack 0
  2363   00164A                     i1_WaitLCD:
  2364                           	callstack 22
  2365   00164A                     
  2366                           ;lcd.c: 59:     UINT8_T status;;lcd.c: 61:     LATDbits.LATD4 = 0;
  2367   00164A  988C               	bcf	140,4,c	;volatile
  2368                           
  2369                           ;lcd.c: 62:     LATDbits.LATD5 = 1;
  2370   00164C  8A8C               	bsf	140,5,c	;volatile
  2371   00164E                     i1l1367:
  2372                           
  2373                           ;lcd.c: 65:         status = ReadByte();
  2374   00164E  ECFF  F00A         	call	i1_ReadByte	;wreg free
  2375   001652  6E02               	movwf	i1WaitLCD@status^0,c
  2376   001654                     
  2377                           ;lcd.c: 66:     } while (status & 0x80);
  2378   001654  BE02               	btfsc	i1WaitLCD@status^0,7,c
  2379   001656  EF2F  F00B         	goto	i1u39_21
  2380   00165A  EF31  F00B         	goto	i1u39_20
  2381   00165E                     i1u39_21:
  2382   00165E  EF27  F00B         	goto	i1l1367
  2383   001662                     i1u39_20:
  2384   001662                     
  2385                           ;lcd.c: 68:     LATDbits.LATD5 = 0;
  2386   001662  9A8C               	bcf	140,5,c	;volatile
  2387   001664  0012               	return		;funcret
  2388   001666                     __end_ofi1_WaitLCD:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function i1_ReadByte *****************
  2392 ;; Defined at:
  2393 ;;		line 26 in file "lcd.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  status          1    0[COMRAM] unsigned char 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      unsigned char 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;Total ram usage:        1 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		i1_WaitLCD
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text22
  2421   0015FE                     __ptext22:
  2422                           	callstack 0
  2423   0015FE                     i1_ReadByte:
  2424                           	callstack 22
  2425   0015FE                     
  2426                           ;lcd.c: 28:     UINT8_T status;;lcd.c: 30:     TRISDbits.TRISD0 = 1;
  2427   0015FE  8095               	bsf	149,0,c	;volatile
  2428                           
  2429                           ;lcd.c: 31:     TRISDbits.TRISD1 = 1;
  2430   001600  8295               	bsf	149,1,c	;volatile
  2431                           
  2432                           ;lcd.c: 32:     TRISDbits.TRISD2 = 1;
  2433   001602  8495               	bsf	149,2,c	;volatile
  2434                           
  2435                           ;lcd.c: 33:     TRISDbits.TRISD3 = 1;
  2436   001604  8695               	bsf	149,3,c	;volatile
  2437                           
  2438                           ;lcd.c: 35:     LATDbits.LATD6 = 1;
  2439   001606  8C8C               	bsf	140,6,c	;volatile
  2440                           
  2441                           ;lcd.c: 36:     __nop();
  2442   001608  0000               	nop	
  2443                           
  2444                           ;lcd.c: 37:     __nop();
  2445   00160A  0000               	nop	
  2446   00160C                     
  2447                           ;lcd.c: 39:     status = PORTD << 4;
  2448   00160C  3883               	swapf	131,w,c	;volatile
  2449   00160E  0BF0               	andlw	240
  2450   001610  6E01               	movwf	i1ReadByte@status^0,c
  2451   001612                     
  2452                           ;lcd.c: 40:     LATDbits.LATD6 = 0;
  2453   001612  9C8C               	bcf	140,6,c	;volatile
  2454   001614                     
  2455                           ;lcd.c: 42:     LATDbits.LATD6 = 1;
  2456   001614  8C8C               	bsf	140,6,c	;volatile
  2457   001616                     
  2458                           ;lcd.c: 43:     __nop();
  2459   001616  0000               	nop	
  2460   001618                     
  2461                           ;lcd.c: 44:     __nop();
  2462   001618  0000               	nop	
  2463                           
  2464                           ;lcd.c: 46:     status |= PORTD & 0x0F;
  2465   00161A  5083               	movf	131,w,c	;volatile
  2466   00161C  0B0F               	andlw	15
  2467   00161E  1201               	iorwf	i1ReadByte@status^0,f,c
  2468   001620                     
  2469                           ;lcd.c: 47:     LATDbits.LATD6 = 0;
  2470   001620  9C8C               	bcf	140,6,c	;volatile
  2471   001622                     
  2472                           ;lcd.c: 49:     TRISDbits.TRISD0 = 0;
  2473   001622  9095               	bcf	149,0,c	;volatile
  2474   001624                     
  2475                           ;lcd.c: 50:     TRISDbits.TRISD1 = 0;
  2476   001624  9295               	bcf	149,1,c	;volatile
  2477   001626                     
  2478                           ;lcd.c: 51:     TRISDbits.TRISD2 = 0;
  2479   001626  9495               	bcf	149,2,c	;volatile
  2480   001628                     
  2481                           ;lcd.c: 52:     TRISDbits.TRISD3 = 0;
  2482   001628  9695               	bcf	149,3,c	;volatile
  2483   00162A                     
  2484                           ;lcd.c: 54:     return(status);
  2485   00162A  5001               	movf	i1ReadByte@status^0,w,c
  2486   00162C  0012               	return		;funcret
  2487   00162E                     __end_ofi1_ReadByte:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function _exit *****************
  2491 ;; Defined at:
  2492 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\exit.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  code            2    2[COMRAM] int 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;Total ram usage:        2 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 1
  2513 ;; This function calls:
  2514 ;;		__Exit
  2515 ;;		___funcs_on_exit
  2516 ;; This function is called by:
  2517 ;;		_SerialRxPinInterrupt
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text23
  2522   001706                     __ptext23:
  2523                           	callstack 0
  2524   001706                     _exit:
  2525                           	callstack 24
  2526   001706  EC33  F00B         	call	___funcs_on_exit	;wreg free
  2527   00170A  C003  F001         	movff	exit@code,__Exit@ec
  2528   00170E  C004  F002         	movff	exit@code+1,__Exit@ec+1
  2529   001712  EC8C  F00B         	call	__Exit	;wreg free
  2530   001716  0012               	return		;funcret
  2531   001718                     __end_of_exit:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function ___funcs_on_exit *****************
  2535 ;; Defined at:
  2536 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\atexit.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  func            2    0        PTR FTN()void 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_exit
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text24
  2564   001666                     __ptext24:
  2565                           	callstack 0
  2566   001666                     ___funcs_on_exit:
  2567                           	callstack 24
  2568   001666  EF36  F00B         	goto	i1l993
  2569   00166A                     i1l991:
  2570   00166A  0631               	decf	_count^0,f,c
  2571   00166C                     i1l993:
  2572   00166C  5031               	movf	_count^0,w,c
  2573   00166E  0A80               	xorlw	128
  2574   001670  0F7F               	addlw	-129
  2575   001672  B0D8               	btfsc	status,0,c
  2576   001674  EF3E  F00B         	goto	i1u10_21
  2577   001678  EF40  F00B         	goto	i1u10_20
  2578   00167C                     i1u10_21:
  2579   00167C  EF35  F00B         	goto	i1l991
  2580   001680                     i1u10_20:
  2581   001680  0012               	return		;funcret
  2582   001682                     __end_of___funcs_on_exit:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function __Exit *****************
  2586 ;; Defined at:
  2587 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\_Exit.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  ec              2    0[COMRAM] int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		None
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_exit
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text25
  2615   001718                     __ptext25:
  2616                           	callstack 0
  2617   001718                     __Exit:
  2618                           	callstack 24
  2619   001718                     i1l843:
  2620   001718  EF8C  F00B         	goto	i1l843
  2621   00171C  0012               	return		;funcret
  2622   00171E                     __end_of__Exit:
  2623                           	callstack 0
  2624                           
  2625                           	psect	rparam
  2626   000000                     
  2627                           	psect	temp
  2628   000032                     btemp:
  2629                           	callstack 0
  2630   000032                     	ds	1
  2631   000000                     int$flags	set	btemp
  2632   000000                     wtemp8	set	btemp+1
  2633   000000                     ttemp5	set	btemp+1
  2634   000000                     ttemp6	set	btemp+4
  2635   000000                     ttemp7	set	btemp+8
  2636                           
  2637                           	psect	config
  2638                           
  2639                           ; Padding undefined space
  2640   300000                     	org	3145728
  2641   300000  FF                 	db	255
  2642                           
  2643                           ;Config register CONFIG1H @ 0x300001
  2644                           ;	Oscillator Selection bits
  2645                           ;	FOSC = INTIO7, Internal oscillator block, CLKOUT function on OSC2
  2646                           ;	4X PLL Enable
  2647                           ;	PLLCFG = OFF, Oscillator used directly
  2648                           ;	Primary clock enable bit
  2649                           ;	PRICLKEN = ON, Primary clock is always enabled
  2650                           ;	Fail-Safe Clock Monitor Enable bit
  2651                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2652                           ;	Internal/External Oscillator Switchover bit
  2653                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2654   300001                     	org	3145729
  2655   300001  29                 	db	41
  2656                           
  2657                           ;Config register CONFIG2L @ 0x300002
  2658                           ;	Power-up Timer Enable bit
  2659                           ;	PWRTEN = OFF, Power up timer disabled
  2660                           ;	Brown-out Reset Enable bits
  2661                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2662                           ;	Brown Out Reset Voltage bits
  2663                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2664   300002                     	org	3145730
  2665   300002  1F                 	db	31
  2666                           
  2667                           ;Config register CONFIG2H @ 0x300003
  2668                           ;	Watchdog Timer Enable bits
  2669                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2670                           ;	Watchdog Timer Postscale Select bits
  2671                           ;	WDTPS = 32768, 1:32768
  2672   300003                     	org	3145731
  2673   300003  3C                 	db	60
  2674                           
  2675                           ; Padding undefined space
  2676   300004                     	org	3145732
  2677   300004  FF                 	db	255
  2678                           
  2679                           ;Config register CONFIG3H @ 0x300005
  2680                           ;	CCP2 MUX bit
  2681                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2682                           ;	PORTB A/D Enable bit
  2683                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2684                           ;	P3A/CCP3 Mux bit
  2685                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  2686                           ;	HFINTOSC Fast Start-up
  2687                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2688                           ;	Timer3 Clock input mux bit
  2689                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2690                           ;	ECCP2 B output mux bit
  2691                           ;	P2BMX = PORTD2, P2B is on RD2
  2692                           ;	MCLR Pin Enable bit
  2693                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2694   300005                     	org	3145733
  2695   300005  BF                 	db	191
  2696                           
  2697                           ;Config register CONFIG4L @ 0x300006
  2698                           ;	Stack Full/Underflow Reset Enable bit
  2699                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2700                           ;	Single-Supply ICSP Enable bit
  2701                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2702                           ;	Extended Instruction Set Enable bit
  2703                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2704                           ;	Background Debug
  2705                           ;	DEBUG = 0x1, unprogrammed default
  2706   300006                     	org	3145734
  2707   300006  85                 	db	133
  2708                           
  2709                           ; Padding undefined space
  2710   300007                     	org	3145735
  2711   300007  FF                 	db	255
  2712                           
  2713                           ;Config register CONFIG5L @ 0x300008
  2714                           ;	Code Protection Block 0
  2715                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2716                           ;	Code Protection Block 1
  2717                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2718                           ;	Code Protection Block 2
  2719                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2720                           ;	Code Protection Block 3
  2721                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2722   300008                     	org	3145736
  2723   300008  0F                 	db	15
  2724                           
  2725                           ;Config register CONFIG5H @ 0x300009
  2726                           ;	Boot Block Code Protection bit
  2727                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2728                           ;	Data EEPROM Code Protection bit
  2729                           ;	CPD = OFF, Data EEPROM not code-protected
  2730   300009                     	org	3145737
  2731   300009  C0                 	db	192
  2732                           
  2733                           ;Config register CONFIG6L @ 0x30000A
  2734                           ;	Write Protection Block 0
  2735                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2736                           ;	Write Protection Block 1
  2737                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2738                           ;	Write Protection Block 2
  2739                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2740                           ;	Write Protection Block 3
  2741                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2742   30000A                     	org	3145738
  2743   30000A  0F                 	db	15
  2744                           
  2745                           ;Config register CONFIG6H @ 0x30000B
  2746                           ;	Configuration Register Write Protection bit
  2747                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2748                           ;	Boot Block Write Protection bit
  2749                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2750                           ;	Data EEPROM Write Protection bit
  2751                           ;	WRTD = OFF, Data EEPROM not write-protected
  2752   30000B                     	org	3145739
  2753   30000B  E0                 	db	224
  2754                           
  2755                           ;Config register CONFIG7L @ 0x30000C
  2756                           ;	Table Read Protection Block 0
  2757                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2758                           ;	Table Read Protection Block 1
  2759                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2760                           ;	Table Read Protection Block 2
  2761                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2762                           ;	Table Read Protection Block 3
  2763                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2764   30000C                     	org	3145740
  2765   30000C  0F                 	db	15
  2766                           
  2767                           ;Config register CONFIG7H @ 0x30000D
  2768                           ;	Boot Block Table Read Protection bit
  2769                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2770   30000D                     	org	3145741
  2771   30000D  40                 	db	64
  2772                           tosu	equ	0xFFF
  2773                           tosh	equ	0xFFE
  2774                           tosl	equ	0xFFD
  2775                           stkptr	equ	0xFFC
  2776                           pclatu	equ	0xFFB
  2777                           pclath	equ	0xFFA
  2778                           pcl	equ	0xFF9
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           prodh	equ	0xFF4
  2784                           prodl	equ	0xFF3
  2785                           indf0	equ	0xFEF
  2786                           postinc0	equ	0xFEE
  2787                           postdec0	equ	0xFED
  2788                           preinc0	equ	0xFEC
  2789                           plusw0	equ	0xFEB
  2790                           fsr0h	equ	0xFEA
  2791                           fsr0l	equ	0xFE9
  2792                           wreg	equ	0xFE8
  2793                           indf1	equ	0xFE7
  2794                           postinc1	equ	0xFE6
  2795                           postdec1	equ	0xFE5
  2796                           preinc1	equ	0xFE4
  2797                           plusw1	equ	0xFE3
  2798                           fsr1h	equ	0xFE2
  2799                           fsr1l	equ	0xFE1
  2800                           bsr	equ	0xFE0
  2801                           indf2	equ	0xFDF
  2802                           postinc2	equ	0xFDE
  2803                           postdec2	equ	0xFDD
  2804                           preinc2	equ	0xFDC
  2805                           plusw2	equ	0xFDB
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8

Data Sizes:
    Strings     56
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    __funcs_on_exit@func	PTR FTN()void  size(2) Largest target is 0

    LCDWriteStr@string	PTR const unsigned char  size(2) Largest target is 14
		 -> LCDWriteFloat@string(COMRAM[5]), LCDWriteHexa@string(COMRAM[3]), LCDWriteInt@string(COMRAM[3]), STR_1(CODE[11]), 
		 -> STR_3(CODE[14]), STR_4(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_UARTInit
    _UARTInit->___lldiv
    _LCDWriteStr->_LCDPutChar
    _LCDPutChar->_WriteByte
    _LCDInit->_WriteNibble
    _LCDGoto->_WriteByte
    _WriteByte->_WriteNibble
    _WaitLCD->_ReadByte

Critical Paths under _SerialRxPinInterrupt in COMRAM

    _SerialRxPinInterrupt->i1_LCDGoto
    _SerialRxPinInterrupt->i1_LCDWriteStr
    i1_LCDWriteStr->i1_LCDPutChar
    i1_LCDPutChar->i1_WriteByte
    i1_LCDGoto->i1_WriteByte
    i1_WriteByte->i1_WriteNibble
    i1_WaitLCD->i1_ReadByte
    _exit->__Exit

Critical Paths under _main in BANK0

    None.

Critical Paths under _SerialRxPinInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SerialRxPinInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SerialRxPinInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SerialRxPinInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SerialRxPinInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SerialRxPinInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SerialRxPinInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SerialRxPinInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SerialRxPinInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SerialRxPinInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SerialRxPinInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SerialRxPinInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SerialRxPinInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SerialRxPinInterrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SerialRxPinInterrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _SerialRxPinInterrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    8934
                                             37 COMRAM     5     5      0
                            _LCDGoto
                            _LCDInit
                         _LCDPutChar
                        _LCDWriteStr
                           _UARTInit
                       _UARTReadByte
                      _UARTWriteByte
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     904
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UARTWriteByte                                        1     1      0      15
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTReadByte                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             4     2      2     412
                                             33 COMRAM     4     2      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                             20 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _LCDWriteStr                                          5     3      2    2215
                                             26 COMRAM     5     3      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           1     1      0    1721
                                             25 COMRAM     1     1      0
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0    1307
                                             23 COMRAM     1     1      0
                            _WaitLCD
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1    2313
                                             25 COMRAM     6     5      1
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (3) _WriteByte                                            2     1      1    1652
                                             23 COMRAM     2     1      1
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (4) _WriteNibble                                          3     2      1    1260
                                             20 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _WaitLCD                                              1     1      0      47
                                             21 COMRAM     1     1      0
                           _ReadByte
 ---------------------------------------------------------------------------------
 (4) _ReadByte                                             1     1      0      24
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _SerialRxPinInterrupt                                 9     9      0    1471
                                             11 COMRAM     9     9      0
                               _exit
                          i1_LCDGoto
                       i1_LCDPutChar
                      i1_LCDWriteStr
                     i1_UARTReadByte
 ---------------------------------------------------------------------------------
 (6) i1_UARTReadByte                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i1_LCDWriteStr                                        5     3      2     447
                                              6 COMRAM     5     3      2
                       i1_LCDPutChar
 ---------------------------------------------------------------------------------
 (7) i1_LCDPutChar                                         1     1      0     305
                                              5 COMRAM     1     1      0
                          i1_WaitLCD
                        i1_WriteByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDGoto                                            6     5      1     469
                                              5 COMRAM     6     5      1
                          i1_WaitLCD
                        i1_WriteByte
 ---------------------------------------------------------------------------------
 (8) i1_WriteByte                                          2     1      1     236
                                              3 COMRAM     2     1      1
                      i1_WriteNibble
 ---------------------------------------------------------------------------------
 (9) i1_WriteNibble                                        3     2      1      96
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (8) i1_WaitLCD                                            1     1      0      47
                                              1 COMRAM     1     1      0
                         i1_ReadByte
 ---------------------------------------------------------------------------------
 (9) i1_ReadByte                                           1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _exit                                                 2     0      2     250
                                              2 COMRAM     2     0      2
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (7) ___funcs_on_exit                                      2     2      0       0
 ---------------------------------------------------------------------------------
 (7) __Exit                                                2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGoto
     _WaitLCD
       _ReadByte
     _WriteByte
       _WriteNibble
   _LCDInit
     _WaitLCD
     _WriteNibble
   _LCDPutChar
     _WaitLCD
     _WriteByte
   _LCDWriteStr
     _LCDPutChar
   _UARTInit
     ___lldiv
   _UARTReadByte
   _UARTWriteByte
   ___awmod

 _SerialRxPinInterrupt (ROOT)
   _exit
     __Exit
     ___funcs_on_exit
   i1_LCDGoto
     i1_WaitLCD
       i1_ReadByte
     i1_WriteByte
       i1_WriteNibble
   i1_LCDPutChar
     i1_WaitLCD
     i1_WriteByte
   i1_LCDWriteStr
     i1_LCDPutChar
   i1_UARTReadByte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      31       1       52.1%
BITBIGSFRllh        48      0       0      43        0.0%
BITBIGSFRhhhhl      39      0       0      37        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      36        0.0%
BITBIGSFRhhlh        B      0       0      39        0.0%
BITBIGSFRlh          8      0       0      42        0.0%
BITBIGSFRhhhlh       7      0       0      38        0.0%
BITBIGSFRhhll        7      0       0      40        0.0%
BITBIGSFRhl          7      0       0      41        0.0%
BITBIGSFRlll         2      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      45        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 20 09:45:30 2024

                          l41 15FC                   ?_LCDPutChar 0001                            l52 169A  
                          l45 1646                            l46 1648                            l55 1120  
                          l71 16F2                            l64 14CA                            l80 1378  
                          l49 1580                            bsr 0FE0                   i1_WriteByte 169C  
                         l140 1460                           l143 16CE                           l146 16E0  
                         l149 1720                           l406 11D0                           l196 1274  
                         l189 1264                           u110 16DC                           u111 16D8  
                         u400 11F8                           u401 11F4                           u410 121A  
                         u411 1216                           u340 154C                           u420 1242  
                         u500 114E                           u341 1544                           u421 123E  
                         u501 114A                           u430 1474                           u510 1168  
                         u431 1470                           u511 1164                           u440 1484  
                         u520 1186                           u441 1480                           u521 1182  
                         u450 1498                           u530 119C                           u451 1494  
                         u531 1198                           u380 1646                           u460 1334  
                         u540 11C0                           u381 1642                           u541 11BC  
                         u358 154E                           u470 1368                           u480 1378  
                         u481 1374                           u490 1134                           u467 132A  
                         u491 1130                           u477 135E                           u657 12EC  
                         u667 1052                           u677 106C                           u687 1082  
                         u697 1094                  ___awmod@sign 001A                           wreg 0FE8  
                  _TXSTA1bits 0FAC               __end_of_LCDInit 1122               __end_of_LCDGoto 14CC  
                ?_LCDWriteStr 001B               ?i1_UARTReadByte 0001                          l1301 155E  
                        l1311 157E                          l1303 1566                          l1305 1568  
                        l1401 104C                          l1081 16CE                          l1307 157A  
                        l1411 109A                          l1403 105C                          l1083 16DC  
                        l1309 157C                          l1421 10C0                          l1413 10A4  
                        l1405 1066                          l1501 1338                          l1085 171E  
                        l1271 15DC                          l1431 10EC                          l1423 10CA  
                        l1415 10A8                          l1407 1080                          l1503 133A  
                        l1511 1126                          l1281 15F0                          l1273 15E2  
                        l1361 1638                          l1441 1112                          l1433 10F0  
                        l1425 10D4                          l1417 10B2                          l1409 1088  
                        l1521 1156                          l1513 1134                          l1291 15FA  
                        l1283 15F2                          l1275 15E4                          l1363 1684  
                        l1443 111C                          l1435 10FA                          l1427 10D8  
                        l1419 10BC                          l1451 1408                          l1531 119C  
                        l1523 1168                          l1515 113C                          l1285 15F4  
                        l1277 15E6                          l1269 15CE                          l1357 162E  
                        l1437 1104                          l1429 10E2                          l1373 16E4  
                        l1381 1200                          l1461 1412                          l1453 140A  
                        l1445 13F6                          l1541 11C8                          l1533 11A4  
                        l1525 1170                          l1517 1140                          l1509 1122  
                        l1287 15F6                          l1279 15E8                          l1359 1632  
                        l1295 1538                          l1439 1108                          l1391 1252  
                        l1383 120C                          l1375 11D2                          l1471 1454  
                        l1463 1414                          l1455 140C                          l1447 13FE  
                        l1535 11AA                          l1527 1178                          l1519 114E  
                        l1289 15F8                          l1297 155A                          l1393 1254  
                        l1385 121A                          l1377 11E2                          l1481 145E  
                        l1473 1456                          l1465 1416                          l1457 140E  
                        l1449 1406                          l1529 1186                          l1537 11B0  
                        l1299 155C                          l1491 14AC                          l1483 1464  
                        l1395 125E                          l1387 1224                          l1379 11F8  
                        l1475 1458                          l1467 1418                          l1459 1410  
                        l1539 11C0                          l1571 1288                          l1493 14BC  
                        l1485 1474                          l1389 1242                          l1477 145A  
                        l1469 1450                          l1581 12D2                          l1573 1290  
                        l1495 14C6                          l1487 1488                          l1399 103A  
                        l1479 145C                          l1583 12DC                          l1575 12AC  
                        l1567 1276                          l1489 1498                          l1497 12FE  
                        l1585 12E2                          l1577 12B8                          l1569 1278  
                        l1499 1306                          l1587 12E6                          l1579 12C2  
                        STR_1 102E                          STR_2 1001                          STR_3 1012  
                        STR_4 1020                          _LATD 0F8C                          _PEIE 7F96  
                        i1l41 162C                          _RCIE 7CED                          i1l52 16B4  
                        _RCIF 7CF5                          i1l45 1662                          i1l46 1664  
                        i1l71 1704                          i1l64 1534                          i1l80 13F4  
                        i1l49 15CC                          _RCIP 7CFD                          _main 1276  
                        _exit 1706                          fsr0h 0FEA                          indf0 0FEF  
                        fsr0l 0FE9                          btemp 0032                          start 00E0  
                ___param_bank 0000               __end_of_WaitLCD 164A                  _BAUDCON1bits 0FB8  
               i1_WriteNibble 1582                         ?_main 0001                         ?_exit 0003  
             __end_of___awmod 11D2               __end_of___lldiv 1276                         i1l155 0084  
                       i1l149 1724                         i1l159 00B8                         i1l840 1716  
                       i1l843 1718                         i1l855 1680                         i1l991 166A  
                       i1l993 166C                         i1l989 1666                         _PORTD 0F83  
                       __Exit 1718              __end_of_UARTInit 1462                         _count 0031  
                       _funcs 002B                   ?i1_ReadByte 0001                         main@r 0027  
                       main@t 0029                         tablat 0FF5                         ttemp5 0033  
                       ttemp6 0036                         ttemp7 003A                         status 0FD8  
                       wtemp8 0033                 WaitLCD@status 0016             i1WriteNibble@data 0001  
             __initialization 16B6                  __end_of_main 12FE                  __end_of_exit 1718  
            __end_of_ReadByte 15FE                ?i1_WriteNibble 0001                        ??_main 0026  
                      ??_exit 0005                 __activetblptr 0003                     ??_LCDInit 0018  
                   ??_LCDGoto 001B                        ?__Exit 0001              i1ReadByte@status 0001  
           __end_ofi1_LCDGoto 1536                 LCDGoto@column 001F                 ?i1_LCDPutChar 0001  
                      i1l1321 1616                        i1l1313 15FE                        i1l1331 1626  
                      i1l1323 1618                        i1l1315 160C                        i1l1333 1628  
                      i1l1325 1620                        i1l1317 1612                        i1l1341 15A6  
                      i1l1173 1722                        i1l1335 162A                        i1l1327 1622  
                      i1l1319 1614                        i1l1351 15C6                        i1l1343 15A8  
                      i1l1505 1706                        i1l1329 1624                        i1l1353 15C8  
                      i1l1345 15AA                        i1l1507 170A                        i1l1355 15CA  
                      i1l1347 15B2                        i1l1339 1584                        i1l1371 169E  
                      i1l1365 164A                        i1l1349 15B4                        i1l1367 164E  
                      i1l1551 1502                        i1l1369 1654                        i1l1553 1516  
                      i1l1545 14CE                        i1l1561 1382                        i1l1641 003E  
                      i1l1555 1526                        i1l1547 14DE                        i1l1563 13B4  
                      i1l1651 0092                        i1l1643 004C                        i1l1557 1530  
                      i1l1549 14F2                        i1l1397 16F6                        i1l1565 13B6  
                      i1l1653 009C                        i1l1645 005A                        i1l1559 137A  
                      i1l1647 0064                        i1l1657 00B0                        i1l1649 0074  
                      _RCREG1 0FAE                        _RCSTA1 0FAB                        _SPBRG1 0FAF  
                      _TXREG1 0FAD                        _TXSTA1 0FAC                     ??_WaitLCD 0016  
                   ??___awmod 0019                     ??___lldiv 001D             __end_ofi1_WaitLCD 1666  
                      clear_0 16BC               ___awmod@divisor 0017                        isa$std 0001  
             ___awmod@counter 0019                  __mediumconst 0000                        tblptrh 0FF7  
                LCDWriteStr@i 001F                        tblptrl 0FF6                        tblptru 0FF8  
              ??i1_LCDPutChar 0006                    __accesstop 0060       __end_of__initialization 16C2  
               ___rparam_used 0001                 i1_LCDGoto$217 0009                __pcstackCOMRAM 0001  
              WriteNibble@cmd 0017                 __end_of__Exit 171E               ??i1_WriteNibble 0002  
                   ?_UARTInit 0022               i1WaitLCD@status 0002                  ??_LCDPutChar 001A  
       __end_of_UARTWriteByte 16E2                  ?i1_WriteByte 0004                  i1LCDGoto@row 0006  
            ??i1_UARTReadByte 0001             ??___funcs_on_exit 0001                       ??__Exit 0003  
              i1LCDWriteStr@i 000B                 i1_LCDWriteStr 137A                  WriteByte@cmd 0019  
                   ?_ReadByte 0001            __end_of_LCDPutChar 16F4               i1LCDGoto@column 000B  
                  ??_UARTInit 0024                 ??_WriteNibble 0016             __end_of_WriteByte 169C  
                     _LCDInit 103A                       _LCDGoto 1462                       i1u10_20 1680  
                     i1u10_21 167C                       i1u36_20 1598                       i1u60_20 13F4  
                     i1u36_21 1590                       i1u60_21 13F0                       i1u37_28 159A  
                     i1u62_20 004C                       i1u62_21 0048                       i1u39_20 1662  
                     i1u55_20 14DE                       i1u63_20 005A                       i1u39_21 165E  
                     i1u55_21 14DA                       i1u63_21 0056                       i1u56_20 14EE  
                     i1u64_20 0092                       i1u56_21 14EA                       i1u64_21 008E  
                     i1u57_20 1502                       i1u57_21 14FE                       i1u58_20 13B0  
                     i1u58_27 13A6                       i1u59_20 13E4                       i1u59_27 13DA  
                     _SPBRGH1 0FB0                 ?_UARTReadByte 0001                ?i1_LCDWriteStr 0007  
                ??i1_ReadByte 0001                    ??_ReadByte 0015             UARTWriteByte@data 0015  
              i1WriteByte@cmd 0005                       __Hparam 0000                       _WaitLCD 162E  
                     __Lparam 0000                       ___awmod 1122                       ___lldiv 11D2  
                __psmallconst 1000          __end_ofi1_LCDPutChar 1706                       __pcinit 16B6  
                     __ramtop 1000            __end_ofi1_ReadByte 162E                       __ptext0 1276  
                     __ptext1 1122                       __ptext2 16CC                       __ptext3 171E  
                     __ptext4 13F6                       __ptext5 11D2                       __ptext6 12FE  
                     __ptext7 16E2                       __ptext8 103A                       __ptext9 1462  
         __end_of_WriteNibble 1582              ___awmod@dividend 0015                ??_UARTReadByte 0015  
        end_of_initialization 16C2                     i1_LCDGoto 14CC               ___lldiv@divisor 0019  
           LCDWriteStr@string 001B               ___lldiv@counter 0021                       postinc0 0FEE  
                   i1_WaitLCD 164A                     _TRISCbits 0F94                     _TRISDbits 0F95  
             ??i1_LCDWriteStr 0009                    ?i1_LCDGoto 0006                    LCDGoto@row 001A  
             WriteNibble@data 0015               ___funcs_on_exit 1666                   _WriteNibble 1536  
__end_of_SerialRxPinInterrupt 00E0                    ?i1_WaitLCD 0001           start_initialization 16B6  
            i1WriteNibble@cmd 0003                 ??_LCDWriteStr 001D          __end_of_UARTReadByte 1722  
       __end_ofi1_WriteNibble 15CE                      ?_LCDInit 0001                      ?_LCDGoto 001A  
               WriteByte@data 0018                   __pbssCOMRAM 002B                     _WriteByte 1682  
              LCDPutChar@data 001A                  i1_LCDPutChar 16F4                   ??i1_LCDGoto 0007  
     __end_of___funcs_on_exit 1682           __end_of_LCDWriteStr 137A                      ?_WaitLCD 0001  
                    ?___awmod 0015                      ?___lldiv 0015                   __pintcodelo 0018  
                 __smallconst 1000                   ??i1_WaitLCD 0002                    ?_WriteByte 0018  
                    _LATDbits 0F8C                      _PIE1bits 0F9D          _SerialRxPinInterrupt 0018  
                 _LCDGoto$217 001D                      _PIR1bits 0F9E                      _UARTInit 13F6  
               _UARTWriteByte 16CC                   _LCDWriteStr 12FE               i1WriteByte@data 0004  
                    _ReadByte 15CE              ?___funcs_on_exit 0001         ?_SerialRxPinInterrupt 0001  
                    __Exit@ec 0001                      __Hrparam 0000                      __Lrparam 0000  
                ?_WriteNibble 0015                ?_UARTWriteByte 0001                 ??i1_WriteByte 0005  
                  _ANSELCbits 0F3A           i1LCDWriteStr@string 0007                   ??_WriteByte 0019  
                    __ptext10 1682                      __ptext11 1536                      __ptext20 1582  
                    __ptext12 162E                      __ptext21 164A                      __ptext13 15CE  
                    __ptext22 15FE                      __ptext23 1706                      __ptext15 1722  
                    __ptext24 1666                      __ptext16 137A                      __ptext25 1718  
                    __ptext17 16F4                      __ptext18 14CC                      __ptext19 169C  
       __end_ofi1_LCDWriteStr 13F6                  _UARTReadByte 171E                      isa$xinst 0000  
              ReadByte@status 0015                      int$flags 0032                    _LCDPutChar 16E2  
                    exit@code 0003           __end_ofi1_WriteByte 16B6                      intlevel1 0000  
              i1_UARTReadByte 1722        ??_SerialRxPinInterrupt 000C              ___lldiv@dividend 0015  
                  _RCSTA1bits 0FAB              i1LCDPutChar@data 0006               ??_UARTWriteByte 0015  
            ___lldiv@quotient 001D        __end_ofi1_UARTReadByte 1726                    i1_ReadByte 15FE  
            UARTInit@baudRate 0022  
