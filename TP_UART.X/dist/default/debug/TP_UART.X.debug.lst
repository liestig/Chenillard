

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Feb 16 10:15:25 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 21/07/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F46K22 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     _RCREG1	set	4014
    85   000000                     _SSP1STATbits	set	4039
    86   000000                     _SSP1ADD	set	4040
    87   000000                     _TXREG1	set	4013
    88   000000                     _SPBRG1	set	4015
    89   000000                     _RCSTA1bits	set	4011
    90   000000                     _TXSTA1bits	set	4012
    91   000000                     _SSP1CON2bits	set	4037
    92   000000                     _LATD	set	3980
    93   000000                     _TXSTAbits	set	4012
    94   000000                     _RCIE	set	31981
    95   000000                     _RCIF	set	31989
    96   000000                     _ANSELCbits	set	3898
    97   000000                     _PORTD	set	3971
    98   000000                     _LATDbits	set	3980
    99   000000                     _TRISCbits	set	3988
   100   000000                     _PIE1bits	set	3997
   101   000000                     _PIR1bits	set	3998
   102   000000                     _TRISDbits	set	3989
   103   000000                     _RCSTA1	set	4011
   104   000000                     _TXSTA1	set	4012
   105   000000                     _SPBRGH1	set	4016
   106   000000                     _BAUDCON1bits	set	4024
   107   000000                     _SSP1CON2	set	4037
   108   000000                     _SSP1CON1	set	4038
   109   000000                     _SSP1BUF	set	4041
   110   000000                     _SSP1CON3bits	set	4043
   111   000000                     _PEIE	set	32662
   112   000000                     _PIR2bits	set	4001
   113   000000                     _RCIP	set	31997
   114                           
   115                           	psect	smallconst
   116   001000                     __psmallconst:
   117                           	callstack 0
   118   001000  00                 	db	0
   119   001001  30                 	db	48	;'0'
   120   001002  31                 	db	49	;'1'
   121   001003  32                 	db	50	;'2'
   122   001004  33                 	db	51	;'3'
   123   001005  34                 	db	52	;'4'
   124   001006  35                 	db	53	;'5'
   125   001007  36                 	db	54	;'6'
   126   001008  37                 	db	55	;'7'
   127   001009  38                 	db	56	;'8'
   128   00100A  39                 	db	57	;'9'
   129   00100B  41                 	db	65	;'A'
   130   00100C  42                 	db	66	;'B'
   131   00100D  43                 	db	67	;'C'
   132   00100E  44                 	db	68	;'D'
   133   00100F  45                 	db	69	;'E'
   134   001010  46                 	db	70	;'F'
   135   001011  00                 	db	0
   136   001012                     STR_2:
   137   001012  55                 	db	85	;'U'
   138   001013  41                 	db	65	;'A'
   139   001014  52                 	db	82	;'R'
   140   001015  54                 	db	84	;'T'
   141   001016  20                 	db	32
   142   001017  39                 	db	57	;'9'
   143   001018  36                 	db	54	;'6'
   144   001019  30                 	db	48	;'0'
   145   00101A  30                 	db	48	;'0'
   146   00101B  20                 	db	32
   147   00101C  62                 	db	98	;'b'
   148   00101D  61                 	db	97	;'a'
   149   00101E  75                 	db	117	;'u'
   150   00101F  64                 	db	100	;'d'
   151   001020  73                 	db	115	;'s'
   152   001021  00                 	db	0
   153   001022                     STR_4:
   154   001022  46                 	db	70	;'F'
   155   001023  72                 	db	114	;'r'
   156   001024  61                 	db	97	;'a'
   157   001025  6D                 	db	109	;'m'
   158   001026  69                 	db	105	;'i'
   159   001027  6E                 	db	110	;'n'
   160   001028  67                 	db	103	;'g'
   161   001029  20                 	db	32
   162   00102A  45                 	db	69	;'E'
   163   00102B  72                 	db	114	;'r'
   164   00102C  72                 	db	114	;'r'
   165   00102D  6F                 	db	111	;'o'
   166   00102E  72                 	db	114	;'r'
   167   00102F  00                 	db	0
   168   001030                     STR_5:
   169   001030  4F                 	db	79	;'O'
   170   001031  76                 	db	118	;'v'
   171   001032  65                 	db	101	;'e'
   172   001033  72                 	db	114	;'r'
   173   001034  72                 	db	114	;'r'
   174   001035  75                 	db	117	;'u'
   175   001036  6E                 	db	110	;'n'
   176   001037  20                 	db	32
   177   001038  45                 	db	69	;'E'
   178   001039  72                 	db	114	;'r'
   179   00103A  72                 	db	114	;'r'
   180   00103B  6F                 	db	111	;'o'
   181   00103C  72                 	db	114	;'r'
   182   00103D  00                 	db	0
   183   00103E                     STR_1:
   184   00103E  43                 	db	67	;'C'
   185   00103F  6F                 	db	111	;'o'
   186   001040  6D                 	db	109	;'m'
   187   001041  70                 	db	112	;'p'
   188   001042  74                 	db	116	;'t'
   189   001043  65                 	db	101	;'e'
   190   001044  75                 	db	117	;'u'
   191   001045  72                 	db	114	;'r'
   192   001046  3A                 	db	58	;':'
   193   001047  20                 	db	32
   194   001048  25                 	db	37
   195   001049  64                 	db	100	;'d'
   196   00104A  00                 	db	0
   197   00104B  00                 	db	0	; dummy byte at the end
   198   000000                     
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   0018F6                     __pcinit:
   203                           	callstack 0
   204   0018F6                     start_initialization:
   205                           	callstack 0
   206   0018F6                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Clear objects allocated to BANK0 (32 bytes)
   210   0018F6  EE00  F060         	lfsr	0,__pbssBANK0
   211   0018FA  0E20               	movlw	32
   212   0018FC                     clear_0:
   213   0018FC  6AEE               	clrf	postinc0,c
   214   0018FE  06E8               	decf	wreg,f,c
   215   001900  E1FD               	bnz	clear_0
   216                           
   217                           ; Clear objects allocated to COMRAM (12 bytes)
   218   001902  EE00  F03F         	lfsr	0,__pbssCOMRAM
   219   001906  0E0C               	movlw	12
   220   001908                     clear_1:
   221   001908  6AEE               	clrf	postinc0,c
   222   00190A  06E8               	decf	wreg,f,c
   223   00190C  E1FD               	bnz	clear_1
   224   00190E                     end_of_initialization:
   225                           	callstack 0
   226   00190E                     __end_of__initialization:
   227                           	callstack 0
   228   00190E  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   229   001910  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   230   001912  0100               	movlb	0
   231   001914  EF6F  F00B         	goto	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMRAM
   234   00003F                     __pbssCOMRAM:
   235                           	callstack 0
   236   00003F                     _funcs:
   237                           	callstack 0
   238   00003F                     	ds	6
   239   000045                     _width:
   240                           	callstack 0
   241   000045                     	ds	2
   242   000047                     _prec:
   243                           	callstack 0
   244   000047                     	ds	2
   245   000049                     _flags:
   246                           	callstack 0
   247   000049                     	ds	1
   248   00004A                     _count:
   249                           	callstack 0
   250   00004A                     	ds	1
   251                           
   252                           	psect	bssBANK0
   253   000060                     __pbssBANK0:
   254                           	callstack 0
   255   000060                     _dbuf:
   256                           	callstack 0
   257   000060                     	ds	32
   258                           
   259                           	psect	cstackBANK0
   260   000080                     __pcstackBANK0:
   261                           	callstack 0
   262   000080                     display_counter@count:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x0
   266   000080                     	ds	2
   267   000082                     display_counter@buffer:
   268                           	callstack 0
   269                           
   270                           ; 17 bytes @ 0x2
   271   000082                     	ds	17
   272   000093                     ??_main:
   273                           
   274                           ; 1 bytes @ 0x13
   275   000093                     	ds	1
   276   000094                     main@counter:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x14
   280   000094                     	ds	2
   281                           
   282                           	psect	cstackCOMRAM
   283   000001                     __pcstackCOMRAM:
   284                           	callstack 0
   285   000001                     i1ReadByte@status:
   286                           	callstack 0
   287   000001                     i1WriteNibble@data:
   288                           	callstack 0
   289   000001                     __Exit@ec:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x0
   293   000001                     	ds	1
   294   000002                     ??i1_WriteNibble:
   295   000002                     i1WaitLCD@status:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x1
   299   000002                     	ds	1
   300   000003                     i1WriteNibble@cmd:
   301                           	callstack 0
   302   000003                     exit@code:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x2
   306   000003                     	ds	1
   307   000004                     i1WriteByte@data:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x3
   311   000004                     	ds	1
   312   000005                     i1WriteByte@cmd:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x4
   316   000005                     	ds	1
   317   000006                     i1LCDGoto@row:
   318                           	callstack 0
   319   000006                     i1LCDPutChar@data:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x5
   323   000006                     	ds	1
   324   000007                     ??i1_LCDGoto:
   325   000007                     i1LCDWriteStr@string:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x6
   329   000007                     	ds	2
   330   000009                     ??i1_LCDWriteStr:
   331   000009                     i1_LCDGoto$307:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x8
   335   000009                     	ds	2
   336   00000B                     i1LCDGoto@column:
   337                           	callstack 0
   338   00000B                     i1LCDWriteStr@i:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0xA
   342   00000B                     	ds	1
   343   00000C                     ??_SerialRxPinInterrupt:
   344                           
   345                           ; 1 bytes @ 0xB
   346   00000C                     	ds	9
   347   000015                     ?___awdiv:
   348                           	callstack 0
   349   000015                     ?___awmod:
   350                           	callstack 0
   351   000015                     UARTWriteChar@data:
   352                           	callstack 0
   353   000015                     ReadByte@status:
   354                           	callstack 0
   355   000015                     WriteNibble@data:
   356                           	callstack 0
   357   000015                     ___awdiv@dividend:
   358                           	callstack 0
   359   000015                     ___awmod@dividend:
   360                           	callstack 0
   361   000015                     fputc@c:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x14
   365   000015                     	ds	1
   366   000016                     ??_WriteNibble:
   367   000016                     WaitLCD@status:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x15
   371   000016                     	ds	1
   372   000017                     WriteNibble@cmd:
   373                           	callstack 0
   374   000017                     fputc@fp:
   375                           	callstack 0
   376   000017                     ___awdiv@divisor:
   377                           	callstack 0
   378   000017                     ___awmod@divisor:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x16
   382   000017                     	ds	1
   383   000018                     ??_LCDInit:
   384   000018                     ??_fputc:
   385   000018                     WriteByte@data:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x17
   389   000018                     	ds	1
   390   000019                     WriteByte@cmd:
   391                           	callstack 0
   392   000019                     ___awdiv@counter:
   393                           	callstack 0
   394   000019                     ___awmod@counter:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x18
   398   000019                     	ds	1
   399   00001A                     ??_LCDClear:
   400   00001A                     LCDGoto@row:
   401                           	callstack 0
   402   00001A                     LCDPutChar@data:
   403                           	callstack 0
   404   00001A                     ___awdiv@sign:
   405                           	callstack 0
   406   00001A                     ___awmod@sign:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x19
   410   00001A                     	ds	1
   411   00001B                     ??_LCDGoto:
   412   00001B                     ?_abs:
   413                           	callstack 0
   414   00001B                     LCDWriteStr@string:
   415                           	callstack 0
   416   00001B                     ___awdiv@quotient:
   417                           	callstack 0
   418   00001B                     abs@a:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x1A
   422   00001B                     	ds	2
   423   00001D                     ??_LCDWriteStr:
   424   00001D                     ??_abs:
   425   00001D                     _LCDGoto$307:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x1C
   429   00001D                     	ds	2
   430   00001F                     LCDGoto@column:
   431                           	callstack 0
   432   00001F                     LCDWriteStr@i:
   433                           	callstack 0
   434   00001F                     vfpfcnvrt@fp:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x1E
   438   00001F                     	ds	1
   439   000020                     display_message@message:
   440                           	callstack 0
   441   000020                     vfpfcnvrt@fmt:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x1F
   445   000020                     	ds	1
   446   000021                     vfpfcnvrt@ap:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x20
   450   000021                     	ds	1
   451   000022                     ??_vfpfcnvrt:
   452                           
   453                           ; 1 bytes @ 0x21
   454   000022                     	ds	1
   455   000023                     vfpfcnvrt@done:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x22
   459   000023                     	ds	1
   460   000024                     vfpfcnvrt@cp:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x23
   464   000024                     	ds	1
   465   000025                     vfpfcnvrt@convarg:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x24
   469   000025                     	ds	4
   470   000029                     vfpfcnvrt@c:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x28
   474   000029                     	ds	1
   475   00002A                     ?_vfprintf:
   476                           	callstack 0
   477   00002A                     vfprintf@fp:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x29
   481   00002A                     	ds	1
   482   00002B                     vfprintf@fmt:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x2A
   486   00002B                     	ds	1
   487   00002C                     vfprintf@ap:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x2B
   491   00002C                     	ds	1
   492   00002D                     vfprintf@cfmt:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x2C
   496   00002D                     	ds	1
   497   00002E                     ?_sprintf:
   498                           	callstack 0
   499   00002E                     sprintf@s:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x2D
   503   00002E                     	ds	1
   504   00002F                     sprintf@fmt:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x2E
   508   00002F                     	ds	3
   509   000032                     sprintf@ap:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x31
   513   000032                     	ds	1
   514   000033                     sprintf@f:
   515                           	callstack 0
   516                           
   517                           ; 12 bytes @ 0x32
   518   000033                     	ds	12
   519   00003F                     
   520                           ; 1 bytes @ 0x3E
   521 ;;
   522 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   523 ;;
   524 ;; *************** function _main *****************
   525 ;; Defined at:
   526 ;;		line 102 in file "main.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  counter         2   20[BANK0 ] int 
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;Total ram usage:        3 bytes
   545 ;; Hardware stack levels required when called: 11
   546 ;; This function calls:
   547 ;;		_LCDInit
   548 ;;		_UARTWriteChar
   549 ;;		_display_counter
   550 ;;		_display_message
   551 ;;		_init_UART
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text0
   558   0016DE                     __ptext0:
   559                           	callstack 0
   560   0016DE                     _main:
   561                           	callstack 20
   562   0016DE  EC06  F009         	call	_LCDInit	;wreg free
   563   0016E2  ECF6  F00C         	call	_init_UART	;wreg free
   564   0016E6  0E12               	movlw	low STR_2
   565   0016E8  6E20               	movwf	display_message@message^0,c
   566   0016EA  ECE0  F00C         	call	_display_message	;wreg free
   567   0016EE  0E00               	movlw	0
   568   0016F0  0100               	movlb	0	; () banked
   569   0016F2  6F95               	movwf	(main@counter+1)& (0+255),b
   570   0016F4  0E00               	movlw	0
   571   0016F6  6F94               	movwf	main@counter& (0+255),b
   572   0016F8                     l2414:
   573   0016F8  C094  F080         	movff	main@counter,display_counter@count
   574   0016FC  C095  F081         	movff	main@counter+1,display_counter@count+1
   575   001700  EC66  F00C         	call	_display_counter	;wreg free
   576   001704  0100               	movlb	0	; () banked
   577   001706  4B94               	infsnz	main@counter& (0+255),f,b
   578   001708  2B95               	incf	(main@counter+1)& (0+255),f,b
   579   00170A                     
   580                           ; BSR set to: 0
   581   00170A  0EA3               	movlw	163
   582   00170C  0100               	movlb	0	; () banked
   583   00170E  6F93               	movwf	??_main& (0+255),b
   584   001710  0E55               	movlw	85
   585   001712                     u1527:
   586   001712  2EE8               	decfsz	wreg,f,c
   587   001714  D7FE               	bra	u1527
   588   001716  2F93               	decfsz	??_main& (0+255),f,b
   589   001718  D7FC               	bra	u1527
   590   00171A  0100               	movlb	0	; () banked
   591   00171C  5194               	movf	main@counter& (0+255),w,b
   592   00171E  0F30               	addlw	48
   593   001720  ECEB  F00C         	call	_UARTWriteChar
   594   001724  EF7C  F00B         	goto	l2414
   595   001728  EF70  F000         	goto	start
   596   00172C                     __end_of_main:
   597                           	callstack 0
   598                           
   599 ;; *************** function _init_UART *****************
   600 ;; Defined at:
   601 ;;		line 75 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; Hardware stack levels required when called: 5
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text1
   630   0019EC                     __ptext1:
   631                           	callstack 0
   632   0019EC                     _init_UART:
   633                           	callstack 25
   634   0019EC  9C94               	bcf	148,6,c	;volatile
   635   0019EE  8E94               	bsf	148,7,c	;volatile
   636   0019F0  0E24               	movlw	36
   637   0019F2  6EAC               	movwf	172,c	;volatile
   638   0019F4  0E90               	movlw	144
   639   0019F6  6EAB               	movwf	171,c	;volatile
   640   0019F8  0E05               	movlw	5
   641   0019FA  6EAF               	movwf	175,c	;volatile
   642   0019FC  0012               	return		;funcret
   643   0019FE                     __end_of_init_UART:
   644                           	callstack 0
   645                           
   646 ;; *************** function _display_message *****************
   647 ;; Defined at:
   648 ;;		line 69 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  message         1   31[COMRAM] PTR const unsigned char 
   651 ;;		 -> STR_2(16), 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   667 ;;Total ram usage:        1 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; Hardware stack levels required when called: 9
   670 ;; This function calls:
   671 ;;		_LCDClear
   672 ;;		_LCDWriteStr
   673 ;; This function is called by:
   674 ;;		_main
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text2
   679   0019C0                     __ptext2:
   680                           	callstack 0
   681   0019C0                     _display_message:
   682                           	callstack 21
   683   0019C0  EC8C  F00C         	call	_LCDClear	;wreg free
   684   0019C4  C020  F01B         	movff	display_message@message,LCDWriteStr@string
   685   0019C8  501B               	movf	LCDWriteStr@string^0,w,c
   686   0019CA  A4D8               	btfss	status,2,c
   687   0019CC  0E10               	movlw	high __smallconst
   688   0019CE  6E1C               	movwf	(LCDWriteStr@string+1)^0,c
   689   0019D0  EC89  F00A         	call	_LCDWriteStr	;wreg free
   690   0019D4  0012               	return		;funcret
   691   0019D6                     __end_of_display_message:
   692                           	callstack 0
   693                           
   694 ;; *************** function _LCDClear *****************
   695 ;; Defined at:
   696 ;;		line 134 in file "lcd.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;Total ram usage:        1 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; Hardware stack levels required when called: 7
   717 ;; This function calls:
   718 ;;		_WaitLCD
   719 ;;		_WriteByte
   720 ;; This function is called by:
   721 ;;		_display_message
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text3
   726   001918                     __ptext3:
   727                           	callstack 0
   728   001918                     _LCDClear:
   729                           	callstack 22
   730   001918                     
   731                           ;lcd.c: 136:      WriteByte(1, 0x01);
   732   001918  0E01               	movlw	1
   733   00191A  6E18               	movwf	WriteByte@data^0,c
   734   00191C  0E01               	movlw	1
   735   00191E  ECC6  F00C         	call	_WriteByte
   736   001922                     
   737                           ;lcd.c: 137:      _delay(12500);
   738   001922  0E11               	movlw	17
   739   001924  6E1A               	movwf	??_LCDClear^0,c
   740   001926  0E3A               	movlw	58
   741   001928                     u1537:
   742   001928  2EE8               	decfsz	wreg,f,c
   743   00192A  D7FE               	bra	u1537
   744   00192C  2E1A               	decfsz	??_LCDClear^0,f,c
   745   00192E  D7FC               	bra	u1537
   746   001930  D000               	nop2	
   747   001932                     
   748                           ;lcd.c: 138:      WaitLCD();
   749   001932  EC9C  F00C         	call	_WaitLCD	;wreg free
   750   001936  0012               	return		;funcret
   751   001938                     __end_of_LCDClear:
   752                           	callstack 0
   753                           
   754 ;; *************** function _display_counter *****************
   755 ;; Defined at:
   756 ;;		line 95 in file "main.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  count           2    0[BANK0 ] int 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  buffer         17    2[BANK0 ] unsigned char [17]
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;Total ram usage:       19 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; Hardware stack levels required when called: 10
   777 ;; This function calls:
   778 ;;		_LCDGoto
   779 ;;		_LCDWriteStr
   780 ;;		_sprintf
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text4
   787   0018CC                     __ptext4:
   788                           	callstack 0
   789   0018CC                     _display_counter:
   790                           	callstack 20
   791   0018CC  0E82               	movlw	low display_counter@buffer
   792   0018CE  6E2E               	movwf	sprintf@s^0,c
   793   0018D0  0E3E               	movlw	low STR_1
   794   0018D2  6E2F               	movwf	sprintf@fmt^0,c
   795   0018D4  C080  F030         	movff	display_counter@count,?_sprintf+2
   796   0018D8  C081  F031         	movff	display_counter@count+1,?_sprintf+3
   797   0018DC  EC02  F00C         	call	_sprintf	;wreg free
   798   0018E0  0E01               	movlw	1
   799   0018E2  6E1A               	movwf	LCDGoto@row^0,c
   800   0018E4  0E00               	movlw	0
   801   0018E6  EC05  F00B         	call	_LCDGoto
   802   0018EA  0E82               	movlw	low display_counter@buffer
   803   0018EC  6E1B               	movwf	LCDWriteStr@string^0,c
   804   0018EE  6A1C               	clrf	(LCDWriteStr@string+1)^0,c
   805   0018F0  EC89  F00A         	call	_LCDWriteStr	;wreg free
   806   0018F4  0012               	return		;funcret
   807   0018F6                     __end_of_display_counter:
   808                           	callstack 0
   809                           
   810 ;; *************** function _sprintf *****************
   811 ;; Defined at:
   812 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  s               1   45[COMRAM] PTR unsigned char 
   815 ;;		 -> display_counter@buffer(17), 
   816 ;;  fmt             1   46[COMRAM] PTR const unsigned char 
   817 ;;		 -> STR_1(13), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  f              12   50[COMRAM] struct _IO_FILE
   820 ;;  ret             2    0        int 
   821 ;;  ap              1   49[COMRAM] PTR void [1]
   822 ;;		 -> ?_sprintf(2), 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  2   45[COMRAM] int 
   825 ;; Registers used:
   826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;Total ram usage:       17 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 9
   839 ;; This function calls:
   840 ;;		_vfprintf
   841 ;; This function is called by:
   842 ;;		_display_counter
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text5
   847   001804                     __ptext5:
   848                           	callstack 0
   849   001804                     _sprintf:
   850                           	callstack 20
   851   001804  0E30               	movlw	low (?_sprintf+2)
   852   001806  6E32               	movwf	sprintf@ap^0,c
   853   001808  C02E  F033         	movff	sprintf@s,sprintf@f
   854   00180C  0E00               	movlw	0
   855   00180E  6E37               	movwf	(sprintf@f+4)^0,c
   856   001810  0E00               	movlw	0
   857   001812  6E36               	movwf	(sprintf@f+3)^0,c
   858   001814  0E00               	movlw	0
   859   001816  6E3E               	movwf	(sprintf@f+11)^0,c
   860   001818  0E00               	movlw	0
   861   00181A  6E3D               	movwf	(sprintf@f+10)^0,c
   862   00181C  0E33               	movlw	low sprintf@f
   863   00181E  6E2A               	movwf	vfprintf@fp^0,c
   864   001820  C02F  F02B         	movff	sprintf@fmt,vfprintf@fmt
   865   001824  0E32               	movlw	low sprintf@ap
   866   001826  6E2C               	movwf	vfprintf@ap^0,c
   867   001828  ECE2  F00B         	call	_vfprintf	;wreg free
   868   00182C  502E               	movf	sprintf@s^0,w,c
   869   00182E  2436               	addwf	(sprintf@f+3)^0,w,c
   870   001830  6ED9               	movwf	fsr2l,c
   871   001832  6ADA               	clrf	fsr2h,c
   872   001834  6ADF               	clrf	indf2,c
   873   001836  0012               	return		;funcret
   874   001838                     __end_of_sprintf:
   875                           	callstack 0
   876                           
   877 ;; *************** function _vfprintf *****************
   878 ;; Defined at:
   879 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;  fp              1   41[COMRAM] PTR struct _IO_FILE
   882 ;;		 -> sprintf@f(12), 
   883 ;;  fmt             1   42[COMRAM] PTR const unsigned char 
   884 ;;		 -> STR_1(13), 
   885 ;;  ap              1   43[COMRAM] PTR PTR void 
   886 ;;		 -> sprintf@ap(1), 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  cfmt            1   44[COMRAM] PTR unsigned char 
   889 ;;		 -> STR_1(13), 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  2   41[COMRAM] int 
   892 ;; Registers used:
   893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   899 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;Total ram usage:        4 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 8
   906 ;; This function calls:
   907 ;;		_vfpfcnvrt
   908 ;; This function is called by:
   909 ;;		_sprintf
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text6
   914   0017C4                     __ptext6:
   915                           	callstack 0
   916   0017C4                     _vfprintf:
   917                           	callstack 20
   918   0017C4                     
   919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   920   0017C4  C02B  F02D         	movff	vfprintf@fmt,vfprintf@cfmt
   921                           
   922                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   923   0017C8  EFEE  F00B         	goto	l2296
   924   0017CC                     l2294:
   925                           
   926                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   927   0017CC  C02A  F01F         	movff	vfprintf@fp,vfpfcnvrt@fp
   928   0017D0  0E2D               	movlw	low vfprintf@cfmt
   929   0017D2  6E20               	movwf	vfpfcnvrt@fmt^0,c
   930   0017D4  C02C  F021         	movff	vfprintf@ap,vfpfcnvrt@ap
   931   0017D8  EC26  F008         	call	_vfpfcnvrt	;wreg free
   932   0017DC                     l2296:
   933                           
   934                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   935   0017DC  C02D  FFF6         	movff	vfprintf@cfmt,tblptrl
   936   0017E0                     	if	1	;There is more than 1 active tblptr byte
   937   0017E0  0E10               	movlw	high __smallconst
   938   0017E2  6EF7               	movwf	tblptrh,c
   939   0017E4                     	endif
   940   0017E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   941   0017E4  6AF8               	clrf	tblptru,c
   942   0017E6                     	endif
   943   0017E6                     	if	0	;tblptru may be non-zero
   944   0017E6                     	endif
   945   0017E6  0008               	tblrd		*
   946   0017E8  50F5               	movf	tablat,w,c
   947   0017EA  0900               	iorlw	0
   948   0017EC  A4D8               	btfss	status,2,c
   949   0017EE  EFFB  F00B         	goto	u1431
   950   0017F2  EFFD  F00B         	goto	u1430
   951   0017F6                     u1431:
   952   0017F6  EFE6  F00B         	goto	l2294
   953   0017FA                     u1430:
   954   0017FA                     
   955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   956   0017FA  0E00               	movlw	0
   957   0017FC  6E2B               	movwf	(?_vfprintf+1)^0,c
   958   0017FE  0E00               	movlw	0
   959   001800  6E2A               	movwf	?_vfprintf^0,c
   960   001802  0012               	return		;funcret
   961   001804                     __end_of_vfprintf:
   962                           	callstack 0
   963                           
   964 ;; *************** function _vfpfcnvrt *****************
   965 ;; Defined at:
   966 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  fp              1   30[COMRAM] PTR struct _IO_FILE
   969 ;;		 -> sprintf@f(12), 
   970 ;;  fmt             1   31[COMRAM] PTR PTR unsigned char 
   971 ;;		 -> vfprintf@cfmt(1), 
   972 ;;  ap              1   32[COMRAM] PTR PTR void 
   973 ;;		 -> sprintf@ap(1), 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  convarg         4   36[COMRAM] struct .
   976 ;;  c               1   40[COMRAM] unsigned char 
   977 ;;  cp              1   35[COMRAM] PTR unsigned char 
   978 ;;		 -> STR_1(13), 
   979 ;;  done            1   34[COMRAM] _Bool 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   989 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;Total ram usage:       11 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 7
   996 ;; This function calls:
   997 ;;		___awdiv
   998 ;;		___awmod
   999 ;;		_abs
  1000 ;;		_fputc
  1001 ;; This function is called by:
  1002 ;;		_vfprintf
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text7
  1007   00104C                     __ptext7:
  1008                           	callstack 0
  1009   00104C                     _vfpfcnvrt:
  1010                           	callstack 20
  1011   00104C                     
  1012                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1013   00104C  5020               	movf	vfpfcnvrt@fmt^0,w,c
  1014   00104E  6ED9               	movwf	fsr2l,c
  1015   001050  6ADA               	clrf	fsr2h,c
  1016   001052  CFDF FFF6          	movff	indf2,tblptrl
  1017   001056                     	if	1	;There is more than 1 active tblptr byte
  1018   001056  0E10               	movlw	high __smallconst
  1019   001058  6EF7               	movwf	tblptrh,c
  1020   00105A                     	endif
  1021   00105A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1022   00105A  6AF8               	clrf	tblptru,c
  1023   00105C                     	endif
  1024   00105C                     	if	0	;tblptru may be non-zero
  1025   00105C                     	endif
  1026   00105C  0008               	tblrd		*
  1027   00105E  50F5               	movf	tablat,w,c
  1028   001060  0A25               	xorlw	37
  1029   001062  A4D8               	btfss	status,2,c
  1030   001064  EF36  F008         	goto	u1331
  1031   001068  EF38  F008         	goto	u1330
  1032   00106C                     u1331:
  1033   00106C  EFF3  F008         	goto	l2284
  1034   001070                     u1330:
  1035   001070                     
  1036                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1037   001070  5020               	movf	vfpfcnvrt@fmt^0,w,c
  1038   001072  6ED9               	movwf	fsr2l,c
  1039   001074  6ADA               	clrf	fsr2h,c
  1040   001076  2ADF               	incf	indf2,f,c
  1041   001078                     
  1042                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1043   001078  0E00               	movlw	0
  1044   00107A  6E46               	movwf	(_width+1)^0,c
  1045   00107C  0E00               	movlw	0
  1046   00107E  6E45               	movwf	_width^0,c
  1047   001080  C045  F049         	movff	_width,_flags
  1048   001084                     
  1049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1050   001084  6847               	setf	_prec^0,c
  1051   001086  6848               	setf	(_prec+1)^0,c
  1052   001088                     
  1053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1054   001088  5020               	movf	vfpfcnvrt@fmt^0,w,c
  1055   00108A  6ED9               	movwf	fsr2l,c
  1056   00108C  6ADA               	clrf	fsr2h,c
  1057   00108E  50DF               	movf	indf2,w,c
  1058   001090  6E24               	movwf	vfpfcnvrt@cp^0,c
  1059   001092                     
  1060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1061   001092  C024  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1062   001096                     	if	1	;There is more than 1 active tblptr byte
  1063   001096  0E10               	movlw	high __smallconst
  1064   001098  6EF7               	movwf	tblptrh,c
  1065   00109A                     	endif
  1066   00109A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1067   00109A  6AF8               	clrf	tblptru,c
  1068   00109C                     	endif
  1069   00109C                     	if	0	;tblptru may be non-zero
  1070   00109C                     	endif
  1071   00109C  0008               	tblrd		*
  1072   00109E  50F5               	movf	tablat,w,c
  1073   0010A0  0A64               	xorlw	100
  1074   0010A2  B4D8               	btfsc	status,2,c
  1075   0010A4  EF56  F008         	goto	u1341
  1076   0010A8  EF58  F008         	goto	u1340
  1077   0010AC                     u1341:
  1078   0010AC  EF67  F008         	goto	l2254
  1079   0010B0                     u1340:
  1080   0010B0  C024  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1081   0010B4                     	if	1	;There is more than 1 active tblptr byte
  1082   0010B4  0E10               	movlw	high __smallconst
  1083   0010B6  6EF7               	movwf	tblptrh,c
  1084   0010B8                     	endif
  1085   0010B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1086   0010B8  6AF8               	clrf	tblptru,c
  1087   0010BA                     	endif
  1088   0010BA                     	if	0	;tblptru may be non-zero
  1089   0010BA                     	endif
  1090   0010BA  0008               	tblrd		*
  1091   0010BC  50F5               	movf	tablat,w,c
  1092   0010BE  0A69               	xorlw	105
  1093   0010C0  A4D8               	btfss	status,2,c
  1094   0010C2  EF65  F008         	goto	u1351
  1095   0010C6  EF67  F008         	goto	u1350
  1096   0010CA                     u1351:
  1097   0010CA  EFED  F008         	goto	l2280
  1098   0010CE                     u1350:
  1099   0010CE                     l2254:
  1100                           
  1101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1102   0010CE  5021               	movf	vfpfcnvrt@ap^0,w,c
  1103   0010D0  6ED9               	movwf	fsr2l,c
  1104   0010D2  6ADA               	clrf	fsr2h,c
  1105   0010D4  0E02               	movlw	2
  1106   0010D6  26DF               	addwf	indf2,f,c
  1107   0010D8  5CDF               	subwf	indf2,w,c
  1108   0010DA  6ED9               	movwf	fsr2l,c
  1109   0010DC  6ADA               	clrf	fsr2h,c
  1110   0010DE  CFDE F025          	movff	postinc2,vfpfcnvrt@convarg
  1111   0010E2  CFDE F026          	movff	postinc2,vfpfcnvrt@convarg+1
  1112   0010E6                     
  1113                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1114   0010E6  5020               	movf	vfpfcnvrt@fmt^0,w,c
  1115   0010E8  6ED9               	movwf	fsr2l,c
  1116   0010EA  6ADA               	clrf	fsr2h,c
  1117   0010EC  2824               	incf	vfpfcnvrt@cp^0,w,c
  1118   0010EE  6EDF               	movwf	indf2,c
  1119   0010F0                     
  1120                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1121   0010F0  0E20               	movlw	32
  1122   0010F2  6E29               	movwf	vfpfcnvrt@c^0,c
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1125   0010F4  BE26               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1126   0010F6  EF7F  F008         	goto	u1361
  1127   0010FA  EF82  F008         	goto	u1360
  1128   0010FE                     u1361:
  1129   0010FE  0E01               	movlw	1
  1130   001100  EF83  F008         	goto	u1370
  1131   001104                     u1360:
  1132   001104  0E00               	movlw	0
  1133   001106                     u1370:
  1134   001106  6E23               	movwf	vfpfcnvrt@done^0,c
  1135   001108                     l2260:
  1136                           
  1137                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1138   001108  0629               	decf	vfpfcnvrt@c^0,f,c
  1139   00110A  5029               	movf	vfpfcnvrt@c^0,w,c
  1140   00110C  0F60               	addlw	low _dbuf
  1141   00110E  6ED9               	movwf	fsr2l,c
  1142   001110  6ADA               	clrf	fsr2h,c
  1143   001112  C025  F015         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1144   001116  C026  F016         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1145   00111A  0E00               	movlw	0
  1146   00111C  6E18               	movwf	(___awmod@divisor+1)^0,c
  1147   00111E  0E0A               	movlw	10
  1148   001120  6E17               	movwf	___awmod@divisor^0,c
  1149   001122  ECDC  F009         	call	___awmod	;wreg free
  1150   001126  C015  F01B         	movff	?___awmod,abs@a
  1151   00112A  C016  F01C         	movff	?___awmod+1,abs@a+1
  1152   00112E  EC1C  F00C         	call	_abs	;wreg free
  1153   001132  501B               	movf	?_abs^0,w,c
  1154   001134  0F30               	addlw	48
  1155   001136  6EDF               	movwf	indf2,c
  1156   001138                     
  1157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1158   001138  C025  F015         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1159   00113C  C026  F016         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1160   001140  0E00               	movlw	0
  1161   001142  6E18               	movwf	(___awdiv@divisor+1)^0,c
  1162   001144  0E0A               	movlw	10
  1163   001146  6E17               	movwf	___awdiv@divisor^0,c
  1164   001148  EC7A  F009         	call	___awdiv	;wreg free
  1165   00114C  C015  F025         	movff	?___awdiv,vfpfcnvrt@convarg
  1166   001150  C016  F026         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1167   001154                     
  1168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1169   001154  5025               	movf	vfpfcnvrt@convarg^0,w,c
  1170   001156  1026               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1171   001158  B4D8               	btfsc	status,2,c
  1172   00115A  EFB1  F008         	goto	u1381
  1173   00115E  EFB3  F008         	goto	u1380
  1174   001162                     u1381:
  1175   001162  EFBB  F008         	goto	l2268
  1176   001166                     u1380:
  1177   001166  5029               	movf	vfpfcnvrt@c^0,w,c
  1178   001168  A4D8               	btfss	status,2,c
  1179   00116A  EFB9  F008         	goto	u1391
  1180   00116E  EFBB  F008         	goto	u1390
  1181   001172                     u1391:
  1182   001172  EF84  F008         	goto	l2260
  1183   001176                     u1390:
  1184   001176                     l2268:
  1185                           
  1186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1187   001176  5029               	movf	vfpfcnvrt@c^0,w,c
  1188   001178  B4D8               	btfsc	status,2,c
  1189   00117A  EFC1  F008         	goto	u1401
  1190   00117E  EFC3  F008         	goto	u1400
  1191   001182                     u1401:
  1192   001182  EFE2  F008         	goto	l2278
  1193   001186                     u1400:
  1194   001186  5023               	movf	vfpfcnvrt@done^0,w,c
  1195   001188  B4D8               	btfsc	status,2,c
  1196   00118A  EFC9  F008         	goto	u1411
  1197   00118E  EFCB  F008         	goto	u1410
  1198   001192                     u1411:
  1199   001192  EFE2  F008         	goto	l2278
  1200   001196                     u1410:
  1201   001196                     
  1202                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1203   001196  0629               	decf	vfpfcnvrt@c^0,f,c
  1204   001198  5029               	movf	vfpfcnvrt@c^0,w,c
  1205   00119A  0F60               	addlw	low _dbuf
  1206   00119C  6ED9               	movwf	fsr2l,c
  1207   00119E  6ADA               	clrf	fsr2h,c
  1208   0011A0  0E2D               	movlw	45
  1209   0011A2  6EDF               	movwf	indf2,c
  1210   0011A4  EFE2  F008         	goto	l2278
  1211   0011A8                     l2274:
  1212                           
  1213                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1214   0011A8  5029               	movf	vfpfcnvrt@c^0,w,c
  1215   0011AA  0F60               	addlw	low _dbuf
  1216   0011AC  6ED9               	movwf	fsr2l,c
  1217   0011AE  6ADA               	clrf	fsr2h,c
  1218   0011B0  50DF               	movf	indf2,w,c
  1219   0011B2  6E22               	movwf	??_vfpfcnvrt^0,c
  1220   0011B4  5022               	movf	??_vfpfcnvrt^0,w,c
  1221   0011B6  6E15               	movwf	fputc@c^0,c
  1222   0011B8  6A16               	clrf	(fputc@c+1)^0,c
  1223   0011BA  C01F  F017         	movff	vfpfcnvrt@fp,fputc@fp
  1224   0011BE  EC34  F00A         	call	_fputc	;wreg free
  1225   0011C2  2A29               	incf	vfpfcnvrt@c^0,f,c
  1226   0011C4                     l2278:
  1227                           
  1228                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1229   0011C4  0E20               	movlw	32
  1230   0011C6  1829               	xorwf	vfpfcnvrt@c^0,w,c
  1231   0011C8  A4D8               	btfss	status,2,c
  1232   0011CA  EFE9  F008         	goto	u1421
  1233   0011CE  EFEB  F008         	goto	u1420
  1234   0011D2                     u1421:
  1235   0011D2  EFD4  F008         	goto	l2274
  1236   0011D6                     u1420:
  1237   0011D6  EF05  F009         	goto	l1000
  1238   0011DA                     l2280:
  1239                           
  1240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1241   0011DA  5020               	movf	vfpfcnvrt@fmt^0,w,c
  1242   0011DC  6ED9               	movwf	fsr2l,c
  1243   0011DE  6ADA               	clrf	fsr2h,c
  1244   0011E0  2ADF               	incf	indf2,f,c
  1245   0011E2  EF05  F009         	goto	l1000
  1246   0011E6                     l2284:
  1247                           
  1248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1249   0011E6  5020               	movf	vfpfcnvrt@fmt^0,w,c
  1250   0011E8  6ED9               	movwf	fsr2l,c
  1251   0011EA  6ADA               	clrf	fsr2h,c
  1252   0011EC  CFDF FFF6          	movff	indf2,tblptrl
  1253   0011F0                     	if	1	;There is more than 1 active tblptr byte
  1254   0011F0  0E10               	movlw	high __smallconst
  1255   0011F2  6EF7               	movwf	tblptrh,c
  1256   0011F4                     	endif
  1257   0011F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1258   0011F4  6AF8               	clrf	tblptru,c
  1259   0011F6                     	endif
  1260   0011F6                     	if	0	;tblptru may be non-zero
  1261   0011F6                     	endif
  1262   0011F6  0008               	tblrd		*
  1263   0011F8  50F5               	movf	tablat,w,c
  1264   0011FA  6E15               	movwf	fputc@c^0,c
  1265   0011FC  6A16               	clrf	(fputc@c+1)^0,c
  1266   0011FE  C01F  F017         	movff	vfpfcnvrt@fp,fputc@fp
  1267   001202  EC34  F00A         	call	_fputc	;wreg free
  1268   001206  EFED  F008         	goto	l2280
  1269   00120A                     l1000:
  1270   00120A  0012               	return		;funcret
  1271   00120C                     __end_of_vfpfcnvrt:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _fputc *****************
  1275 ;; Defined at:
  1276 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  c               2   20[COMRAM] int 
  1279 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  1280 ;;		 -> sprintf@f(12), 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2   20[COMRAM] int 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1292 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;Total ram usage:        8 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 6
  1299 ;; This function calls:
  1300 ;;		_putch
  1301 ;; This function is called by:
  1302 ;;		_vfpfcnvrt
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text8
  1307   001468                     __ptext8:
  1308                           	callstack 0
  1309   001468                     _fputc:
  1310                           	callstack 20
  1311   001468  5017               	movf	fputc@fp^0,w,c
  1312   00146A  B4D8               	btfsc	status,2,c
  1313   00146C  EF3A  F00A         	goto	u1271
  1314   001470  EF3C  F00A         	goto	u1270
  1315   001474                     u1271:
  1316   001474  EF44  F00A         	goto	l2218
  1317   001478                     u1270:
  1318   001478  5017               	movf	fputc@fp^0,w,c
  1319   00147A  A4D8               	btfss	status,2,c
  1320   00147C  EF42  F00A         	goto	u1281
  1321   001480  EF44  F00A         	goto	u1280
  1322   001484                     u1281:
  1323   001484  EF49  F00A         	goto	l2220
  1324   001488                     u1280:
  1325   001488                     l2218:
  1326   001488  5015               	movf	fputc@c^0,w,c
  1327   00148A  EC1F  F00D         	call	_putch
  1328   00148E  EF88  F00A         	goto	l1025
  1329   001492                     l2220:
  1330   001492  5017               	movf	fputc@fp^0,w,c
  1331   001494  6ED9               	movwf	fsr2l,c
  1332   001496  6ADA               	clrf	fsr2h,c
  1333   001498  0E0A               	movlw	10
  1334   00149A  26D9               	addwf	fsr2l,f,c
  1335   00149C  50DE               	movf	postinc2,w,c
  1336   00149E  10DE               	iorwf	postinc2,w,c
  1337   0014A0  B4D8               	btfsc	status,2,c
  1338   0014A2  EF55  F00A         	goto	u1291
  1339   0014A6  EF57  F00A         	goto	u1290
  1340   0014AA                     u1291:
  1341   0014AA  EF70  F00A         	goto	l2224
  1342   0014AE                     u1290:
  1343   0014AE  5017               	movf	fputc@fp^0,w,c
  1344   0014B0  6ED9               	movwf	fsr2l,c
  1345   0014B2  6ADA               	clrf	fsr2h,c
  1346   0014B4  0E0A               	movlw	10
  1347   0014B6  26D9               	addwf	fsr2l,f,c
  1348   0014B8  5017               	movf	fputc@fp^0,w,c
  1349   0014BA  6EE1               	movwf	fsr1l,c
  1350   0014BC  6AE2               	clrf	fsr1h,c
  1351   0014BE  0E03               	movlw	3
  1352   0014C0  26E1               	addwf	fsr1l,f,c
  1353   0014C2  50DE               	movf	postinc2,w,c
  1354   0014C4  5CE6               	subwf	postinc1,w,c
  1355   0014C6  50E6               	movf	postinc1,w,c
  1356   0014C8  0A80               	xorlw	128
  1357   0014CA  6E1C               	movwf	(??_fputc+4)^0,c
  1358   0014CC  50DE               	movf	postinc2,w,c
  1359   0014CE  0A80               	xorlw	128
  1360   0014D0  581C               	subwfb	(??_fputc+4)^0,w,c
  1361   0014D2  B0D8               	btfsc	status,0,c
  1362   0014D4  EF6E  F00A         	goto	u1301
  1363   0014D8  EF70  F00A         	goto	u1300
  1364   0014DC                     u1301:
  1365   0014DC  EF88  F00A         	goto	l1025
  1366   0014E0                     u1300:
  1367   0014E0                     l2224:
  1368   0014E0  5017               	movf	fputc@fp^0,w,c
  1369   0014E2  6ED9               	movwf	fsr2l,c
  1370   0014E4  6ADA               	clrf	fsr2h,c
  1371   0014E6  0E03               	movlw	3
  1372   0014E8  26D9               	addwf	fsr2l,f,c
  1373   0014EA  50DF               	movf	indf2,w,c
  1374   0014EC  6E18               	movwf	??_fputc^0,c
  1375   0014EE  5017               	movf	fputc@fp^0,w,c
  1376   0014F0  6ED9               	movwf	fsr2l,c
  1377   0014F2  6ADA               	clrf	fsr2h,c
  1378   0014F4  50DF               	movf	indf2,w,c
  1379   0014F6  2418               	addwf	??_fputc^0,w,c
  1380   0014F8  6ED9               	movwf	fsr2l,c
  1381   0014FA  6ADA               	clrf	fsr2h,c
  1382   0014FC  C015  FFDF         	movff	fputc@c,indf2
  1383   001500  5017               	movf	fputc@fp^0,w,c
  1384   001502  6ED9               	movwf	fsr2l,c
  1385   001504  6ADA               	clrf	fsr2h,c
  1386   001506  0E03               	movlw	3
  1387   001508  26D9               	addwf	fsr2l,f,c
  1388   00150A  2ADE               	incf	postinc2,f,c
  1389   00150C  0E00               	movlw	0
  1390   00150E  22DD               	addwfc	postdec2,f,c
  1391   001510                     l1025:
  1392   001510  0012               	return		;funcret
  1393   001512                     __end_of_fputc:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _putch *****************
  1397 ;; Defined at:
  1398 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  c               1    wreg     unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  c               1    0[COMRAM] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;Total ram usage:        0 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 5
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_fputc
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text9
  1427   001A3E                     __ptext9:
  1428                           	callstack 0
  1429   001A3E                     _putch:
  1430                           	callstack 20
  1431   001A3E  0012               	return		;funcret
  1432   001A40                     __end_of_putch:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _abs *****************
  1436 ;; Defined at:
  1437 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  a               2   26[COMRAM] int 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  2   26[COMRAM] int 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;Total ram usage:        4 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 5
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_vfpfcnvrt
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text10
  1466   001838                     __ptext10:
  1467                           	callstack 0
  1468   001838                     _abs:
  1469                           	callstack 21
  1470   001838  BE1C               	btfsc	(abs@a+1)^0,7,c
  1471   00183A  EF21  F00C         	goto	u1311
  1472   00183E  EF23  F00C         	goto	u1310
  1473   001842                     u1311:
  1474   001842  EF29  F00C         	goto	l1010
  1475   001846                     u1310:
  1476   001846  C01B  F01B         	movff	abs@a,?_abs
  1477   00184A  C01C  F01C         	movff	abs@a+1,?_abs+1
  1478   00184E  EF35  F00C         	goto	l1013
  1479   001852                     l1010:
  1480   001852  C01B  F01D         	movff	abs@a,??_abs
  1481   001856  C01C  F01E         	movff	abs@a+1,??_abs+1
  1482   00185A  1E1D               	comf	??_abs^0,f,c
  1483   00185C  1E1E               	comf	(??_abs+1)^0,f,c
  1484   00185E  4A1D               	infsnz	??_abs^0,f,c
  1485   001860  2A1E               	incf	(??_abs+1)^0,f,c
  1486   001862  C01D  F01B         	movff	??_abs,?_abs
  1487   001866  C01E  F01C         	movff	??_abs+1,?_abs+1
  1488   00186A                     l1013:
  1489   00186A  0012               	return		;funcret
  1490   00186C                     __end_of_abs:
  1491                           	callstack 0
  1492                           
  1493 ;; *************** function ___awmod *****************
  1494 ;; Defined at:
  1495 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  dividend        2   20[COMRAM] int 
  1498 ;;  divisor         2   22[COMRAM] int 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  sign            1   25[COMRAM] unsigned char 
  1501 ;;  counter         1   24[COMRAM] unsigned char 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2   20[COMRAM] int 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1511 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;Total ram usage:        6 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 5
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_vfpfcnvrt
  1522 ;;		_LCDPutByte
  1523 ;;		_LCDWriteInt
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text11
  1528   0013B8                     __ptext11:
  1529                           	callstack 0
  1530   0013B8                     ___awmod:
  1531                           	callstack 21
  1532   0013B8  0E00               	movlw	0
  1533   0013BA  6E1A               	movwf	___awmod@sign^0,c
  1534   0013BC  BE16               	btfsc	(___awmod@dividend+1)^0,7,c
  1535   0013BE  EFE5  F009         	goto	u1210
  1536   0013C2  EFE3  F009         	goto	u1211
  1537   0013C6                     u1211:
  1538   0013C6  EFEB  F009         	goto	l2186
  1539   0013CA                     u1210:
  1540   0013CA  6C15               	negf	___awmod@dividend^0,c
  1541   0013CC  1E16               	comf	(___awmod@dividend+1)^0,f,c
  1542   0013CE  B0D8               	btfsc	status,0,c
  1543   0013D0  2A16               	incf	(___awmod@dividend+1)^0,f,c
  1544   0013D2  0E01               	movlw	1
  1545   0013D4  6E1A               	movwf	___awmod@sign^0,c
  1546   0013D6                     l2186:
  1547   0013D6  BE18               	btfsc	(___awmod@divisor+1)^0,7,c
  1548   0013D8  EFF2  F009         	goto	u1220
  1549   0013DC  EFF0  F009         	goto	u1221
  1550   0013E0                     u1221:
  1551   0013E0  EFF6  F009         	goto	l2190
  1552   0013E4                     u1220:
  1553   0013E4  6C17               	negf	___awmod@divisor^0,c
  1554   0013E6  1E18               	comf	(___awmod@divisor+1)^0,f,c
  1555   0013E8  B0D8               	btfsc	status,0,c
  1556   0013EA  2A18               	incf	(___awmod@divisor+1)^0,f,c
  1557   0013EC                     l2190:
  1558   0013EC  5017               	movf	___awmod@divisor^0,w,c
  1559   0013EE  1018               	iorwf	(___awmod@divisor+1)^0,w,c
  1560   0013F0  B4D8               	btfsc	status,2,c
  1561   0013F2  EFFD  F009         	goto	u1231
  1562   0013F6  EFFF  F009         	goto	u1230
  1563   0013FA                     u1231:
  1564   0013FA  EF23  F00A         	goto	l2206
  1565   0013FE                     u1230:
  1566   0013FE  0E01               	movlw	1
  1567   001400  6E19               	movwf	___awmod@counter^0,c
  1568   001402  EF07  F00A         	goto	l2196
  1569   001406                     l2194:
  1570   001406  90D8               	bcf	status,0,c
  1571   001408  3617               	rlcf	___awmod@divisor^0,f,c
  1572   00140A  3618               	rlcf	(___awmod@divisor+1)^0,f,c
  1573   00140C  2A19               	incf	___awmod@counter^0,f,c
  1574   00140E                     l2196:
  1575   00140E  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  1576   001410  EF0C  F00A         	goto	u1241
  1577   001414  EF0E  F00A         	goto	u1240
  1578   001418                     u1241:
  1579   001418  EF03  F00A         	goto	l2194
  1580   00141C                     u1240:
  1581   00141C                     l2198:
  1582   00141C  5017               	movf	___awmod@divisor^0,w,c
  1583   00141E  5C15               	subwf	___awmod@dividend^0,w,c
  1584   001420  5018               	movf	(___awmod@divisor+1)^0,w,c
  1585   001422  5816               	subwfb	(___awmod@dividend+1)^0,w,c
  1586   001424  A0D8               	btfss	status,0,c
  1587   001426  EF17  F00A         	goto	u1251
  1588   00142A  EF19  F00A         	goto	u1250
  1589   00142E                     u1251:
  1590   00142E  EF1D  F00A         	goto	l2202
  1591   001432                     u1250:
  1592   001432  5017               	movf	___awmod@divisor^0,w,c
  1593   001434  5E15               	subwf	___awmod@dividend^0,f,c
  1594   001436  5018               	movf	(___awmod@divisor+1)^0,w,c
  1595   001438  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
  1596   00143A                     l2202:
  1597   00143A  90D8               	bcf	status,0,c
  1598   00143C  3218               	rrcf	(___awmod@divisor+1)^0,f,c
  1599   00143E  3217               	rrcf	___awmod@divisor^0,f,c
  1600   001440  2E19               	decfsz	___awmod@counter^0,f,c
  1601   001442  EF0E  F00A         	goto	l2198
  1602   001446                     l2206:
  1603   001446  501A               	movf	___awmod@sign^0,w,c
  1604   001448  B4D8               	btfsc	status,2,c
  1605   00144A  EF29  F00A         	goto	u1261
  1606   00144E  EF2B  F00A         	goto	u1260
  1607   001452                     u1261:
  1608   001452  EF2F  F00A         	goto	l2210
  1609   001456                     u1260:
  1610   001456  6C15               	negf	___awmod@dividend^0,c
  1611   001458  1E16               	comf	(___awmod@dividend+1)^0,f,c
  1612   00145A  B0D8               	btfsc	status,0,c
  1613   00145C  2A16               	incf	(___awmod@dividend+1)^0,f,c
  1614   00145E                     l2210:
  1615   00145E  C015  F015         	movff	___awmod@dividend,?___awmod
  1616   001462  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  1617   001466  0012               	return		;funcret
  1618   001468                     __end_of___awmod:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function ___awdiv *****************
  1622 ;; Defined at:
  1623 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  dividend        2   20[COMRAM] int 
  1626 ;;  divisor         2   22[COMRAM] int 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  quotient        2   26[COMRAM] int 
  1629 ;;  sign            1   25[COMRAM] unsigned char 
  1630 ;;  counter         1   24[COMRAM] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  2   20[COMRAM] int 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;Total ram usage:        8 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 5
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_vfpfcnvrt
  1651 ;;		_LCDPutByte
  1652 ;;		_LCDWriteInt
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text12
  1657   0012F4                     __ptext12:
  1658                           	callstack 0
  1659   0012F4                     ___awdiv:
  1660                           	callstack 21
  1661   0012F4  0E00               	movlw	0
  1662   0012F6  6E1A               	movwf	___awdiv@sign^0,c
  1663   0012F8  BE18               	btfsc	(___awdiv@divisor+1)^0,7,c
  1664   0012FA  EF83  F009         	goto	u1150
  1665   0012FE  EF81  F009         	goto	u1151
  1666   001302                     u1151:
  1667   001302  EF89  F009         	goto	l2142
  1668   001306                     u1150:
  1669   001306  6C17               	negf	___awdiv@divisor^0,c
  1670   001308  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  1671   00130A  B0D8               	btfsc	status,0,c
  1672   00130C  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  1673   00130E  0E01               	movlw	1
  1674   001310  6E1A               	movwf	___awdiv@sign^0,c
  1675   001312                     l2142:
  1676   001312  BE16               	btfsc	(___awdiv@dividend+1)^0,7,c
  1677   001314  EF90  F009         	goto	u1160
  1678   001318  EF8E  F009         	goto	u1161
  1679   00131C                     u1161:
  1680   00131C  EF96  F009         	goto	l2148
  1681   001320                     u1160:
  1682   001320  6C15               	negf	___awdiv@dividend^0,c
  1683   001322  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  1684   001324  B0D8               	btfsc	status,0,c
  1685   001326  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  1686   001328  0E01               	movlw	1
  1687   00132A  1A1A               	xorwf	___awdiv@sign^0,f,c
  1688   00132C                     l2148:
  1689   00132C  0E00               	movlw	0
  1690   00132E  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  1691   001330  0E00               	movlw	0
  1692   001332  6E1B               	movwf	___awdiv@quotient^0,c
  1693   001334  5017               	movf	___awdiv@divisor^0,w,c
  1694   001336  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  1695   001338  B4D8               	btfsc	status,2,c
  1696   00133A  EFA1  F009         	goto	u1171
  1697   00133E  EFA3  F009         	goto	u1170
  1698   001342                     u1171:
  1699   001342  EFCB  F009         	goto	l2170
  1700   001346                     u1170:
  1701   001346  0E01               	movlw	1
  1702   001348  6E19               	movwf	___awdiv@counter^0,c
  1703   00134A  EFAB  F009         	goto	l2156
  1704   00134E                     l2154:
  1705   00134E  90D8               	bcf	status,0,c
  1706   001350  3617               	rlcf	___awdiv@divisor^0,f,c
  1707   001352  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  1708   001354  2A19               	incf	___awdiv@counter^0,f,c
  1709   001356                     l2156:
  1710   001356  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  1711   001358  EFB0  F009         	goto	u1181
  1712   00135C  EFB2  F009         	goto	u1180
  1713   001360                     u1181:
  1714   001360  EFA7  F009         	goto	l2154
  1715   001364                     u1180:
  1716   001364                     l2158:
  1717   001364  90D8               	bcf	status,0,c
  1718   001366  361B               	rlcf	___awdiv@quotient^0,f,c
  1719   001368  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  1720   00136A  5017               	movf	___awdiv@divisor^0,w,c
  1721   00136C  5C15               	subwf	___awdiv@dividend^0,w,c
  1722   00136E  5018               	movf	(___awdiv@divisor+1)^0,w,c
  1723   001370  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  1724   001372  A0D8               	btfss	status,0,c
  1725   001374  EFBE  F009         	goto	u1191
  1726   001378  EFC0  F009         	goto	u1190
  1727   00137C                     u1191:
  1728   00137C  EFC5  F009         	goto	l2166
  1729   001380                     u1190:
  1730   001380  5017               	movf	___awdiv@divisor^0,w,c
  1731   001382  5E15               	subwf	___awdiv@dividend^0,f,c
  1732   001384  5018               	movf	(___awdiv@divisor+1)^0,w,c
  1733   001386  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  1734   001388  801B               	bsf	___awdiv@quotient^0,0,c
  1735   00138A                     l2166:
  1736   00138A  90D8               	bcf	status,0,c
  1737   00138C  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  1738   00138E  3217               	rrcf	___awdiv@divisor^0,f,c
  1739   001390  2E19               	decfsz	___awdiv@counter^0,f,c
  1740   001392  EFB2  F009         	goto	l2158
  1741   001396                     l2170:
  1742   001396  501A               	movf	___awdiv@sign^0,w,c
  1743   001398  B4D8               	btfsc	status,2,c
  1744   00139A  EFD1  F009         	goto	u1201
  1745   00139E  EFD3  F009         	goto	u1200
  1746   0013A2                     u1201:
  1747   0013A2  EFD7  F009         	goto	l2174
  1748   0013A6                     u1200:
  1749   0013A6  6C1B               	negf	___awdiv@quotient^0,c
  1750   0013A8  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  1751   0013AA  B0D8               	btfsc	status,0,c
  1752   0013AC  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  1753   0013AE                     l2174:
  1754   0013AE  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  1755   0013B2  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  1756   0013B6  0012               	return		;funcret
  1757   0013B8                     __end_of___awdiv:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _LCDWriteStr *****************
  1761 ;; Defined at:
  1762 ;;		line 163 in file "lcd.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  string          2   26[COMRAM] PTR const unsigned char 
  1765 ;;		 -> STR_5(14), STR_4(14), LCDWriteInt@string(3), LCDWriteFloat@string(5), 
  1766 ;;		 -> LCDWriteHexa@string(3), STR_2(16), display_counter@buffer(17), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  i               1   30[COMRAM] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;Total ram usage:        5 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 8
  1785 ;; This function calls:
  1786 ;;		_LCDPutChar
  1787 ;; This function is called by:
  1788 ;;		_display_message
  1789 ;;		_display_counter
  1790 ;;		_LCDWriteHexa
  1791 ;;		_LCDWriteFloat
  1792 ;;		_LCDWriteInt
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text13
  1797   001512                     __ptext13:
  1798                           	callstack 0
  1799   001512                     _LCDWriteStr:
  1800                           	callstack 21
  1801   001512                     
  1802                           ;lcd.c: 163: void LCDWriteStr(const char *string);lcd.c: 164: {;lcd.c: 165:   UINT8_T i 
      +                          = 0;
  1803   001512  0E00               	movlw	0
  1804   001514  6E1F               	movwf	LCDWriteStr@i^0,c
  1805                           
  1806                           ;lcd.c: 167:   while (string[i])
  1807   001516  EFA7  F00A         	goto	l2314
  1808   00151A                     l2310:
  1809                           
  1810                           ;lcd.c: 168:     LCDPutChar(string[i++]);
  1811   00151A  501F               	movf	LCDWriteStr@i^0,w,c
  1812   00151C  241B               	addwf	LCDWriteStr@string^0,w,c
  1813   00151E  6E1D               	movwf	??_LCDWriteStr^0,c
  1814   001520  0E00               	movlw	0
  1815   001522  201C               	addwfc	(LCDWriteStr@string+1)^0,w,c
  1816   001524  6E1E               	movwf	(??_LCDWriteStr+1)^0,c
  1817   001526  C01D  FFF6         	movff	??_LCDWriteStr,tblptrl
  1818   00152A  C01E  FFF7         	movff	??_LCDWriteStr+1,tblptrh
  1819   00152E  0E00               	movlw	low (__smallconst shr (0+16))
  1820   001530  6EF8               	movwf	tblptru,c
  1821   001532  0E0F               	movlw	(high __ramtop+-1)
  1822   001534  64F7               	cpfsgt	tblptrh,c
  1823   001536  D003               	bra	u1447
  1824   001538  0008               	tblrd		*
  1825   00153A  50F5               	movf	tablat,w,c
  1826   00153C  D005               	bra	u1440
  1827   00153E                     u1447:
  1828   00153E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1829   001542  CFF7 FFEA          	movff	tblptrh,fsr0h
  1830   001546  50EF               	movf	indf0,w,c
  1831   001548                     u1440:
  1832   001548  ECFF  F00C         	call	_LCDPutChar
  1833   00154C  2A1F               	incf	LCDWriteStr@i^0,f,c
  1834   00154E                     l2314:
  1835                           
  1836                           ;lcd.c: 167:   while (string[i])
  1837   00154E  501F               	movf	LCDWriteStr@i^0,w,c
  1838   001550  241B               	addwf	LCDWriteStr@string^0,w,c
  1839   001552  6E1D               	movwf	??_LCDWriteStr^0,c
  1840   001554  0E00               	movlw	0
  1841   001556  201C               	addwfc	(LCDWriteStr@string+1)^0,w,c
  1842   001558  6E1E               	movwf	(??_LCDWriteStr+1)^0,c
  1843   00155A  C01D  FFF6         	movff	??_LCDWriteStr,tblptrl
  1844   00155E  C01E  FFF7         	movff	??_LCDWriteStr+1,tblptrh
  1845   001562  0E00               	movlw	low (__smallconst shr (0+16))
  1846   001564  6EF8               	movwf	tblptru,c
  1847   001566  0E0F               	movlw	(high __ramtop+-1)
  1848   001568  64F7               	cpfsgt	tblptrh,c
  1849   00156A  D003               	bra	u1457
  1850   00156C  0008               	tblrd		*
  1851   00156E  50F5               	movf	tablat,w,c
  1852   001570  D005               	bra	u1450
  1853   001572                     u1457:
  1854   001572  CFF6 FFE9          	movff	tblptrl,fsr0l
  1855   001576  CFF7 FFEA          	movff	tblptrh,fsr0h
  1856   00157A  50EF               	movf	indf0,w,c
  1857   00157C                     u1450:
  1858   00157C  0900               	iorlw	0
  1859   00157E  A4D8               	btfss	status,2,c
  1860   001580  EFC4  F00A         	goto	u1461
  1861   001584  EFC6  F00A         	goto	u1460
  1862   001588                     u1461:
  1863   001588  EF8D  F00A         	goto	l2310
  1864   00158C                     u1460:
  1865   00158C  0012               	return		;funcret
  1866   00158E                     __end_of_LCDWriteStr:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _LCDPutChar *****************
  1870 ;; Defined at:
  1871 ;;		line 150 in file "lcd.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  data            1    wreg     unsigned char 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  data            1   25[COMRAM] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;Total ram usage:        1 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 7
  1892 ;; This function calls:
  1893 ;;		_WaitLCD
  1894 ;;		_WriteByte
  1895 ;; This function is called by:
  1896 ;;		_LCDWriteStr
  1897 ;;		_LCDPutByte
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text14
  1902   0019FE                     __ptext14:
  1903                           	callstack 0
  1904   0019FE                     _LCDPutChar:
  1905                           	callstack 21
  1906                           
  1907                           ;incstack = 0
  1908                           ;LCDPutChar@data stored from wreg
  1909   0019FE  6E1A               	movwf	LCDPutChar@data^0,c
  1910   001A00                     
  1911                           ;lcd.c: 150: void LCDPutChar(UINT8_T data);lcd.c: 151: {;lcd.c: 152:     WriteByte(0, da
      +                          ta);
  1912   001A00  C01A  F018         	movff	LCDPutChar@data,WriteByte@data
  1913   001A04  0E00               	movlw	0
  1914   001A06  ECC6  F00C         	call	_WriteByte
  1915                           
  1916                           ;lcd.c: 153:     WaitLCD();
  1917   001A0A  EC9C  F00C         	call	_WaitLCD	;wreg free
  1918   001A0E  0012               	return		;funcret
  1919   001A10                     __end_of_LCDPutChar:
  1920                           	callstack 0
  1921                           
  1922 ;; *************** function _LCDGoto *****************
  1923 ;; Defined at:
  1924 ;;		line 141 in file "lcd.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  column          1    wreg     unsigned char 
  1927 ;;  row             1   25[COMRAM] unsigned char 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  column          1   30[COMRAM] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1939 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;Total ram usage:        6 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 7
  1946 ;; This function calls:
  1947 ;;		_WaitLCD
  1948 ;;		_WriteByte
  1949 ;; This function is called by:
  1950 ;;		_display_counter
  1951 ;;		_LCDWriteHexa
  1952 ;;		_LCDWriteFloat
  1953 ;;		_LCDWriteInt
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text15
  1958   00160A                     __ptext15:
  1959                           	callstack 0
  1960   00160A                     _LCDGoto:
  1961                           	callstack 22
  1962                           
  1963                           ;incstack = 0
  1964                           ;LCDGoto@column stored from wreg
  1965   00160A  6E1F               	movwf	LCDGoto@column^0,c
  1966   00160C                     
  1967                           ;lcd.c: 141: void LCDGoto(UINT8_T column, UINT8_T row);lcd.c: 142: {;lcd.c: 143:     if 
      +                          ((row > (2 - 1)) || (column > (16 - 1)))
  1968   00160C  0E02               	movlw	2
  1969   00160E  601A               	cpfslt	LCDGoto@row^0,c
  1970   001610  EF0C  F00B         	goto	u1471
  1971   001614  EF0E  F00B         	goto	u1470
  1972   001618                     u1471:
  1973   001618  EF39  F00B         	goto	l85
  1974   00161C                     u1470:
  1975   00161C  0E0F               	movlw	15
  1976   00161E  641F               	cpfsgt	LCDGoto@column^0,c
  1977   001620  EF14  F00B         	goto	u1481
  1978   001624  EF16  F00B         	goto	u1480
  1979   001628                     u1481:
  1980   001628  EF18  F00B         	goto	l2332
  1981   00162C                     u1480:
  1982   00162C  EF39  F00B         	goto	l85
  1983   001630                     l2332:
  1984                           
  1985                           ;lcd.c: 146:     WriteByte(1, (row == 1) ? (0xC0 | column) : (0x80 | column));
  1986   001630  041A               	decf	LCDGoto@row^0,w,c
  1987   001632  B4D8               	btfsc	status,2,c
  1988   001634  EF1E  F00B         	goto	u1491
  1989   001638  EF20  F00B         	goto	u1490
  1990   00163C                     u1491:
  1991   00163C  EF2A  F00B         	goto	l2336
  1992   001640                     u1490:
  1993   001640  0E80               	movlw	128
  1994   001642  C01F  F01B         	movff	LCDGoto@column,??_LCDGoto
  1995   001646  6A1C               	clrf	(??_LCDGoto+1)^0,c
  1996   001648  101B               	iorwf	??_LCDGoto^0,w,c
  1997   00164A  6E1D               	movwf	_LCDGoto$307^0,c
  1998   00164C  501C               	movf	(??_LCDGoto+1)^0,w,c
  1999   00164E  6E1E               	movwf	(_LCDGoto$307+1)^0,c
  2000   001650  EF32  F00B         	goto	l2338
  2001   001654                     l2336:
  2002   001654  0EC0               	movlw	192
  2003   001656  C01F  F01B         	movff	LCDGoto@column,??_LCDGoto
  2004   00165A  6A1C               	clrf	(??_LCDGoto+1)^0,c
  2005   00165C  101B               	iorwf	??_LCDGoto^0,w,c
  2006   00165E  6E1D               	movwf	_LCDGoto$307^0,c
  2007   001660  501C               	movf	(??_LCDGoto+1)^0,w,c
  2008   001662  6E1E               	movwf	(_LCDGoto$307+1)^0,c
  2009   001664                     l2338:
  2010   001664  C01D  F018         	movff	_LCDGoto$307,WriteByte@data
  2011   001668  0E01               	movlw	1
  2012   00166A  ECC6  F00C         	call	_WriteByte
  2013   00166E                     
  2014                           ;lcd.c: 147:     WaitLCD();
  2015   00166E  EC9C  F00C         	call	_WaitLCD	;wreg free
  2016   001672                     l85:
  2017   001672  0012               	return		;funcret
  2018   001674                     __end_of_LCDGoto:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _WriteByte *****************
  2022 ;; Defined at:
  2023 ;;		line 88 in file "lcd.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  cmd             1    wreg     unsigned char 
  2026 ;;  data            1   23[COMRAM] unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  cmd             1   24[COMRAM] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2038 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;Total ram usage:        2 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 6
  2045 ;; This function calls:
  2046 ;;		_WriteNibble
  2047 ;; This function is called by:
  2048 ;;		_LCDClear
  2049 ;;		_LCDGoto
  2050 ;;		_LCDPutChar
  2051 ;;		_LCDShiftDisplay
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text16
  2056   00198C                     __ptext16:
  2057                           	callstack 0
  2058   00198C                     _WriteByte:
  2059                           	callstack 21
  2060                           
  2061                           ;incstack = 0
  2062                           ;WriteByte@cmd stored from wreg
  2063   00198C  6E19               	movwf	WriteByte@cmd^0,c
  2064   00198E                     
  2065                           ;lcd.c: 88: void WriteByte(UINT8_T cmd, UINT8_T data);lcd.c: 89: {;lcd.c: 90:     WriteN
      +                          ibble(cmd, data >> 4);
  2066   00198E  3818               	swapf	WriteByte@data^0,w,c
  2067   001990  0B0F               	andlw	15
  2068   001992  6E15               	movwf	WriteNibble@data^0,c
  2069   001994  5019               	movf	WriteByte@cmd^0,w,c
  2070   001996  EC96  F00B         	call	_WriteNibble
  2071                           
  2072                           ;lcd.c: 91:     WriteNibble(cmd, data);
  2073   00199A  C018  F015         	movff	WriteByte@data,WriteNibble@data
  2074   00199E  5019               	movf	WriteByte@cmd^0,w,c
  2075   0019A0  EC96  F00B         	call	_WriteNibble
  2076   0019A4  0012               	return		;funcret
  2077   0019A6                     __end_of_WriteByte:
  2078                           	callstack 0
  2079                           
  2080 ;; *************** function _UARTWriteChar *****************
  2081 ;; Defined at:
  2082 ;;		line 89 in file "main.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  data            1    wreg     unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  data            1   20[COMRAM] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;Total ram usage:        1 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 5
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_main
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text17
  2111   0019D6                     __ptext17:
  2112                           	callstack 0
  2113   0019D6                     _UARTWriteChar:
  2114                           	callstack 25
  2115                           
  2116                           ;incstack = 0
  2117                           ;UARTWriteChar@data stored from wreg
  2118   0019D6  6E15               	movwf	UARTWriteChar@data^0,c
  2119   0019D8                     l33:
  2120   0019D8  A2AC               	btfss	172,1,c	;volatile
  2121   0019DA  EFF1  F00C         	goto	u1501
  2122   0019DE  EFF3  F00C         	goto	u1500
  2123   0019E2                     u1501:
  2124   0019E2  EFEC  F00C         	goto	l33
  2125   0019E6                     u1500:
  2126   0019E6  C015  FFAD         	movff	UARTWriteChar@data,4013	;volatile
  2127   0019EA  0012               	return		;funcret
  2128   0019EC                     __end_of_UARTWriteChar:
  2129                           	callstack 0
  2130                           
  2131 ;; *************** function _LCDInit *****************
  2132 ;; Defined at:
  2133 ;;		line 94 in file "lcd.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;Total ram usage:        1 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; Hardware stack levels required when called: 7
  2154 ;; This function calls:
  2155 ;;		_WaitLCD
  2156 ;;		_WriteNibble
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text18
  2163   00120C                     __ptext18:
  2164                           	callstack 0
  2165   00120C                     _LCDInit:
  2166                           	callstack 23
  2167   00120C                     
  2168                           ;lcd.c: 96:     TRISDbits.TRISD7 = 0;
  2169   00120C  9E95               	bcf	149,7,c	;volatile
  2170                           
  2171                           ;lcd.c: 97:     TRISDbits.TRISD6 = 0;
  2172   00120E  9C95               	bcf	149,6,c	;volatile
  2173                           
  2174                           ;lcd.c: 98:     TRISDbits.TRISD5 = 0;
  2175   001210  9A95               	bcf	149,5,c	;volatile
  2176                           
  2177                           ;lcd.c: 99:     TRISDbits.TRISD4 = 0;
  2178   001212  9895               	bcf	149,4,c	;volatile
  2179                           
  2180                           ;lcd.c: 100:     TRISDbits.TRISD0 = 0;
  2181   001214  9095               	bcf	149,0,c	;volatile
  2182                           
  2183                           ;lcd.c: 101:     TRISDbits.TRISD1 = 0;
  2184   001216  9295               	bcf	149,1,c	;volatile
  2185                           
  2186                           ;lcd.c: 102:     TRISDbits.TRISD2 = 0;
  2187   001218  9495               	bcf	149,2,c	;volatile
  2188                           
  2189                           ;lcd.c: 103:     TRISDbits.TRISD3 = 0;
  2190   00121A  9695               	bcf	149,3,c	;volatile
  2191                           
  2192                           ;lcd.c: 105:     LATDbits.LATD7 = 1;
  2193   00121C  8E8C               	bsf	140,7,c	;volatile
  2194   00121E                     
  2195                           ;lcd.c: 106:     _delay(30000);
  2196   00121E  0E27               	movlw	39
  2197   001220  6E18               	movwf	??_LCDInit^0,c
  2198   001222  0EF5               	movlw	245
  2199   001224                     u1547:
  2200   001224  2EE8               	decfsz	wreg,f,c
  2201   001226  D7FE               	bra	u1547
  2202   001228  2E18               	decfsz	??_LCDInit^0,f,c
  2203   00122A  D7FC               	bra	u1547
  2204   00122C  0000               	nop	
  2205   00122E                     
  2206                           ;lcd.c: 107:     WriteNibble(1, 0x03);
  2207   00122E  0E03               	movlw	3
  2208   001230  6E15               	movwf	WriteNibble@data^0,c
  2209   001232  0E01               	movlw	1
  2210   001234  EC96  F00B         	call	_WriteNibble
  2211   001238                     
  2212                           ;lcd.c: 108:     _delay(3000);
  2213   001238  0E04               	movlw	4
  2214   00123A  6E18               	movwf	??_LCDInit^0,c
  2215   00123C  0EE4               	movlw	228
  2216   00123E                     u1557:
  2217   00123E  2EE8               	decfsz	wreg,f,c
  2218   001240  D7FE               	bra	u1557
  2219   001242  2E18               	decfsz	??_LCDInit^0,f,c
  2220   001244  D7FC               	bra	u1557
  2221   001246  D000               	nop2	
  2222                           
  2223                           ;lcd.c: 109:     WriteNibble(1, 0x03);
  2224   001248  0E03               	movlw	3
  2225   00124A  6E15               	movwf	WriteNibble@data^0,c
  2226   00124C  0E01               	movlw	1
  2227   00124E  EC96  F00B         	call	_WriteNibble
  2228   001252                     
  2229                           ;lcd.c: 110:     _delay(100);
  2230   001252  0E21               	movlw	33
  2231   001254                     u1567:
  2232   001254  2EE8               	decfsz	wreg,f,c
  2233   001256  D7FE               	bra	u1567
  2234   001258  0000               	nop	
  2235   00125A                     
  2236                           ;lcd.c: 111:     WriteNibble(1, 0x03);
  2237   00125A  0E03               	movlw	3
  2238   00125C  6E15               	movwf	WriteNibble@data^0,c
  2239   00125E  0E01               	movlw	1
  2240   001260  EC96  F00B         	call	_WriteNibble
  2241                           
  2242                           ;lcd.c: 112:     _delay(100);
  2243   001264  0E21               	movlw	33
  2244   001266                     u1577:
  2245   001266  2EE8               	decfsz	wreg,f,c
  2246   001268  D7FE               	bra	u1577
  2247   00126A  0000               	nop	
  2248   00126C                     
  2249                           ;lcd.c: 113:     WriteNibble(1, 0b00000010);
  2250   00126C  0E02               	movlw	2
  2251   00126E  6E15               	movwf	WriteNibble@data^0,c
  2252   001270  0E01               	movlw	1
  2253   001272  EC96  F00B         	call	_WriteNibble
  2254   001276                     
  2255                           ;lcd.c: 114:     WaitLCD();
  2256   001276  EC9C  F00C         	call	_WaitLCD	;wreg free
  2257   00127A                     
  2258                           ;lcd.c: 115:     WriteNibble(1, 0b00000010);
  2259   00127A  0E02               	movlw	2
  2260   00127C  6E15               	movwf	WriteNibble@data^0,c
  2261   00127E  0E01               	movlw	1
  2262   001280  EC96  F00B         	call	_WriteNibble
  2263   001284                     
  2264                           ;lcd.c: 116:     WriteNibble(1, 0b00001000);
  2265   001284  0E08               	movlw	8
  2266   001286  6E15               	movwf	WriteNibble@data^0,c
  2267   001288  0E01               	movlw	1
  2268   00128A  EC96  F00B         	call	_WriteNibble
  2269   00128E                     
  2270                           ;lcd.c: 117:     WaitLCD();
  2271   00128E  EC9C  F00C         	call	_WaitLCD	;wreg free
  2272   001292                     
  2273                           ;lcd.c: 118:     WriteNibble(1, 0b00000000);
  2274   001292  0E00               	movlw	0
  2275   001294  6E15               	movwf	WriteNibble@data^0,c
  2276   001296  0E01               	movlw	1
  2277   001298  EC96  F00B         	call	_WriteNibble
  2278   00129C                     
  2279                           ;lcd.c: 119:     WriteNibble(1, 0b00001000);
  2280   00129C  0E08               	movlw	8
  2281   00129E  6E15               	movwf	WriteNibble@data^0,c
  2282   0012A0  0E01               	movlw	1
  2283   0012A2  EC96  F00B         	call	_WriteNibble
  2284   0012A6                     
  2285                           ;lcd.c: 120:     WaitLCD();
  2286   0012A6  EC9C  F00C         	call	_WaitLCD	;wreg free
  2287   0012AA                     
  2288                           ;lcd.c: 121:     WriteNibble(1, 0b00000000);
  2289   0012AA  0E00               	movlw	0
  2290   0012AC  6E15               	movwf	WriteNibble@data^0,c
  2291   0012AE  0E01               	movlw	1
  2292   0012B0  EC96  F00B         	call	_WriteNibble
  2293   0012B4                     
  2294                           ;lcd.c: 122:     WriteNibble(1, 0b00001100);
  2295   0012B4  0E0C               	movlw	12
  2296   0012B6  6E15               	movwf	WriteNibble@data^0,c
  2297   0012B8  0E01               	movlw	1
  2298   0012BA  EC96  F00B         	call	_WriteNibble
  2299   0012BE                     
  2300                           ;lcd.c: 125:     WaitLCD();
  2301   0012BE  EC9C  F00C         	call	_WaitLCD	;wreg free
  2302   0012C2                     
  2303                           ;lcd.c: 126:     WriteNibble(1, 0b00000000);
  2304   0012C2  0E00               	movlw	0
  2305   0012C4  6E15               	movwf	WriteNibble@data^0,c
  2306   0012C6  0E01               	movlw	1
  2307   0012C8  EC96  F00B         	call	_WriteNibble
  2308   0012CC                     
  2309                           ;lcd.c: 127:     WriteNibble(1, 0b00000001);
  2310   0012CC  0E01               	movlw	1
  2311   0012CE  6E15               	movwf	WriteNibble@data^0,c
  2312   0012D0  0E01               	movlw	1
  2313   0012D2  EC96  F00B         	call	_WriteNibble
  2314   0012D6                     
  2315                           ;lcd.c: 128:     WaitLCD();
  2316   0012D6  EC9C  F00C         	call	_WaitLCD	;wreg free
  2317   0012DA                     
  2318                           ;lcd.c: 129:     WriteNibble(1, 0b00000000);
  2319   0012DA  0E00               	movlw	0
  2320   0012DC  6E15               	movwf	WriteNibble@data^0,c
  2321   0012DE  0E01               	movlw	1
  2322   0012E0  EC96  F00B         	call	_WriteNibble
  2323   0012E4                     
  2324                           ;lcd.c: 130:     WriteNibble(1, 0b00000110);
  2325   0012E4  0E06               	movlw	6
  2326   0012E6  6E15               	movwf	WriteNibble@data^0,c
  2327   0012E8  0E01               	movlw	1
  2328   0012EA  EC96  F00B         	call	_WriteNibble
  2329   0012EE                     
  2330                           ;lcd.c: 131:     WaitLCD();
  2331   0012EE  EC9C  F00C         	call	_WaitLCD	;wreg free
  2332   0012F2  0012               	return		;funcret
  2333   0012F4                     __end_of_LCDInit:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _WriteNibble *****************
  2337 ;; Defined at:
  2338 ;;		line 71 in file "lcd.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  cmd             1    wreg     unsigned char 
  2341 ;;  data            1   20[COMRAM] unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  cmd             1   22[COMRAM] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, status,2, status,0
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2353 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;Total ram usage:        3 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; Hardware stack levels required when called: 5
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_WriteByte
  2364 ;;		_LCDInit
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text19
  2369   00172C                     __ptext19:
  2370                           	callstack 0
  2371   00172C                     _WriteNibble:
  2372                           	callstack 21
  2373                           
  2374                           ;incstack = 0
  2375                           ;WriteNibble@cmd stored from wreg
  2376   00172C  6E17               	movwf	WriteNibble@cmd^0,c
  2377   00172E                     
  2378                           ;lcd.c: 71: void WriteNibble(UINT8_T cmd, UINT8_T data);lcd.c: 72: {;lcd.c: 73:     LATD
      +                          bits.LATD4 = (cmd ? 0 : 1);
  2379   00172E  5017               	movf	WriteNibble@cmd^0,w,c
  2380   001730  B4D8               	btfsc	status,2,c
  2381   001732  EF9D  F00B         	goto	u1131
  2382   001736  EFA1  F00B         	goto	u1130
  2383   00173A                     u1131:
  2384   00173A  6A16               	clrf	??_WriteNibble^0,c
  2385   00173C  2A16               	incf	??_WriteNibble^0,f,c
  2386   00173E  EFA2  F00B         	goto	u1148
  2387   001742                     u1130:
  2388   001742  6A16               	clrf	??_WriteNibble^0,c
  2389   001744                     u1148:
  2390   001744  3A16               	swapf	??_WriteNibble^0,f,c
  2391   001746  508C               	movf	140,w,c	;volatile
  2392   001748  1816               	xorwf	??_WriteNibble^0,w,c
  2393   00174A  0BEF               	andlw	-17
  2394   00174C  1816               	xorwf	??_WriteNibble^0,w,c
  2395   00174E  6E8C               	movwf	140,c	;volatile
  2396   001750                     
  2397                           ;lcd.c: 74:     LATDbits.LATD5 = 0;
  2398   001750  9A8C               	bcf	140,5,c	;volatile
  2399   001752                     
  2400                           ;lcd.c: 75:     LATDbits.LATD6 = 1;
  2401   001752  8C8C               	bsf	140,6,c	;volatile
  2402   001754                     
  2403                           ;lcd.c: 77:     LATDbits.LATD0 = LATDbits.LATD1 = LATDbits.LATD2 = LATDbits.LATD3 = 0;
  2404   001754  968C               	bcf	140,3,c	;volatile
  2405   001756  948C               	bcf	140,2,c	;volatile
  2406   001758  928C               	bcf	140,1,c	;volatile
  2407   00175A  908C               	bcf	140,0,c	;volatile
  2408   00175C                     
  2409                           ;lcd.c: 78:     __nop();
  2410   00175C  0000               	nop	
  2411   00175E                     
  2412                           ;lcd.c: 79:     __nop();
  2413   00175E  0000               	nop	
  2414                           
  2415                           ;lcd.c: 81:     LATD = (LATD & 0xF0) | (data & 0x0F);
  2416   001760  C015  F016         	movff	WriteNibble@data,??_WriteNibble
  2417   001764  0E0F               	movlw	15
  2418   001766  1616               	andwf	??_WriteNibble^0,f,c
  2419   001768  508C               	movf	140,w,c	;volatile
  2420   00176A  0BF0               	andlw	240
  2421   00176C  1016               	iorwf	??_WriteNibble^0,w,c
  2422   00176E  6E8C               	movwf	140,c	;volatile
  2423   001770                     
  2424                           ;lcd.c: 82:     __nop();
  2425   001770  0000               	nop	
  2426   001772                     
  2427                           ;lcd.c: 83:     __nop();
  2428   001772  0000               	nop	
  2429   001774                     
  2430                           ;lcd.c: 85:     LATDbits.LATD6 = 0;
  2431   001774  9C8C               	bcf	140,6,c	;volatile
  2432   001776  0012               	return		;funcret
  2433   001778                     __end_of_WriteNibble:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _WaitLCD *****************
  2437 ;; Defined at:
  2438 ;;		line 57 in file "lcd.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  status          1   21[COMRAM] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;Total ram usage:        1 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; Hardware stack levels required when called: 6
  2459 ;; This function calls:
  2460 ;;		_ReadByte
  2461 ;; This function is called by:
  2462 ;;		_LCDInit
  2463 ;;		_LCDClear
  2464 ;;		_LCDGoto
  2465 ;;		_LCDPutChar
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text20
  2470   001938                     __ptext20:
  2471                           	callstack 0
  2472   001938                     _WaitLCD:
  2473                           	callstack 21
  2474   001938                     
  2475                           ;lcd.c: 59:     UINT8_T status;;lcd.c: 61:     LATDbits.LATD4 = 0;
  2476   001938  988C               	bcf	140,4,c	;volatile
  2477                           
  2478                           ;lcd.c: 62:     LATDbits.LATD5 = 1;
  2479   00193A  8A8C               	bsf	140,5,c	;volatile
  2480   00193C                     l2234:
  2481                           
  2482                           ;lcd.c: 65:         status = ReadByte();
  2483   00193C  EC36  F00C         	call	_ReadByte	;wreg free
  2484   001940  6E16               	movwf	WaitLCD@status^0,c
  2485   001942                     
  2486                           ;lcd.c: 66:     } while (status & 0x80);
  2487   001942  BE16               	btfsc	WaitLCD@status^0,7,c
  2488   001944  EFA6  F00C         	goto	u1321
  2489   001948  EFA8  F00C         	goto	u1320
  2490   00194C                     u1321:
  2491   00194C  EF9E  F00C         	goto	l2234
  2492   001950                     u1320:
  2493   001950                     
  2494                           ;lcd.c: 68:     LATDbits.LATD5 = 0;
  2495   001950  9A8C               	bcf	140,5,c	;volatile
  2496   001952  0012               	return		;funcret
  2497   001954                     __end_of_WaitLCD:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function _ReadByte *****************
  2501 ;; Defined at:
  2502 ;;		line 26 in file "lcd.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  status          1   20[COMRAM] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      unsigned char 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;Total ram usage:        1 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 5
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_WaitLCD
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text21
  2531   00186C                     __ptext21:
  2532                           	callstack 0
  2533   00186C                     _ReadByte:
  2534                           	callstack 21
  2535   00186C                     
  2536                           ;lcd.c: 28:     UINT8_T status;;lcd.c: 30:     TRISDbits.TRISD0 = 1;
  2537   00186C  8095               	bsf	149,0,c	;volatile
  2538                           
  2539                           ;lcd.c: 31:     TRISDbits.TRISD1 = 1;
  2540   00186E  8295               	bsf	149,1,c	;volatile
  2541                           
  2542                           ;lcd.c: 32:     TRISDbits.TRISD2 = 1;
  2543   001870  8495               	bsf	149,2,c	;volatile
  2544                           
  2545                           ;lcd.c: 33:     TRISDbits.TRISD3 = 1;
  2546   001872  8695               	bsf	149,3,c	;volatile
  2547                           
  2548                           ;lcd.c: 35:     LATDbits.LATD6 = 1;
  2549   001874  8C8C               	bsf	140,6,c	;volatile
  2550                           
  2551                           ;lcd.c: 36:     __nop();
  2552   001876  0000               	nop	
  2553                           
  2554                           ;lcd.c: 37:     __nop();
  2555   001878  0000               	nop	
  2556   00187A                     
  2557                           ;lcd.c: 39:     status = PORTD << 4;
  2558   00187A  3883               	swapf	131,w,c	;volatile
  2559   00187C  0BF0               	andlw	240
  2560   00187E  6E15               	movwf	ReadByte@status^0,c
  2561   001880                     
  2562                           ;lcd.c: 40:     LATDbits.LATD6 = 0;
  2563   001880  9C8C               	bcf	140,6,c	;volatile
  2564   001882                     
  2565                           ;lcd.c: 42:     LATDbits.LATD6 = 1;
  2566   001882  8C8C               	bsf	140,6,c	;volatile
  2567   001884                     
  2568                           ;lcd.c: 43:     __nop();
  2569   001884  0000               	nop	
  2570   001886                     
  2571                           ;lcd.c: 44:     __nop();
  2572   001886  0000               	nop	
  2573                           
  2574                           ;lcd.c: 46:     status |= PORTD & 0x0F;
  2575   001888  5083               	movf	131,w,c	;volatile
  2576   00188A  0B0F               	andlw	15
  2577   00188C  1215               	iorwf	ReadByte@status^0,f,c
  2578   00188E                     
  2579                           ;lcd.c: 47:     LATDbits.LATD6 = 0;
  2580   00188E  9C8C               	bcf	140,6,c	;volatile
  2581   001890                     
  2582                           ;lcd.c: 49:     TRISDbits.TRISD0 = 0;
  2583   001890  9095               	bcf	149,0,c	;volatile
  2584   001892                     
  2585                           ;lcd.c: 50:     TRISDbits.TRISD1 = 0;
  2586   001892  9295               	bcf	149,1,c	;volatile
  2587   001894                     
  2588                           ;lcd.c: 51:     TRISDbits.TRISD2 = 0;
  2589   001894  9495               	bcf	149,2,c	;volatile
  2590   001896                     
  2591                           ;lcd.c: 52:     TRISDbits.TRISD3 = 0;
  2592   001896  9695               	bcf	149,3,c	;volatile
  2593   001898                     
  2594                           ;lcd.c: 54:     return(status);
  2595   001898  5015               	movf	ReadByte@status^0,w,c
  2596   00189A  0012               	return		;funcret
  2597   00189C                     __end_of_ReadByte:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _SerialRxPinInterrupt *****************
  2601 ;; Defined at:
  2602 ;;		line 66 in file "uart.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;Total ram usage:        9 bytes
  2621 ;; Hardware stack levels used: 1
  2622 ;; Hardware stack levels required when called: 4
  2623 ;; This function calls:
  2624 ;;		_UARTReadByte
  2625 ;;		_exit
  2626 ;;		i1_LCDGoto
  2627 ;;		i1_LCDPutChar
  2628 ;;		i1_LCDWriteStr
  2629 ;; This function is called by:
  2630 ;;		Interrupt level 1
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	intcodelo
  2635   000018                     __pintcodelo:
  2636                           	callstack 0
  2637   000018                     _SerialRxPinInterrupt:
  2638                           	callstack 20
  2639                           
  2640                           ;incstack = 0
  2641   000018  804B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2642   00001A  CFD8 F00C          	movff	status,??_SerialRxPinInterrupt
  2643   00001E  CFE8 F00D          	movff	wreg,??_SerialRxPinInterrupt+1
  2644   000022  CFE0 F00E          	movff	bsr,??_SerialRxPinInterrupt+2
  2645   000026  CFE9 F00F          	movff	fsr0l,??_SerialRxPinInterrupt+3
  2646   00002A  CFEA F010          	movff	fsr0h,??_SerialRxPinInterrupt+4
  2647   00002E  CFF6 F011          	movff	tblptrl,??_SerialRxPinInterrupt+5
  2648   000032  CFF7 F012          	movff	tblptrh,??_SerialRxPinInterrupt+6
  2649   000036  CFF8 F013          	movff	tblptru,??_SerialRxPinInterrupt+7
  2650   00003A  CFF5 F014          	movff	tablat,??_SerialRxPinInterrupt+8
  2651   00003E                     
  2652                           ;uart.c: 68:     if (PIR1bits.RCIF == 1) {
  2653   00003E  AA9E               	btfss	158,5,c	;volatile
  2654   000040  EF24  F000         	goto	i1u110_21
  2655   000044  EF26  F000         	goto	i1u110_20
  2656   000048                     i1u110_21:
  2657   000048  EF5C  F000         	goto	i1l255
  2658   00004C                     i1u110_20:
  2659   00004C                     
  2660                           ;uart.c: 70:         if (RCSTA1bits.FERR) {
  2661   00004C  A4AB               	btfss	171,2,c	;volatile
  2662   00004E  EF2B  F000         	goto	i1u111_21
  2663   000052  EF2D  F000         	goto	i1u111_20
  2664   000056                     i1u111_21:
  2665   000056  EF42  F000         	goto	i1l251
  2666   00005A                     i1u111_20:
  2667   00005A                     
  2668                           ;uart.c: 71:             LCDGoto(0, 1);
  2669   00005A  0E01               	movlw	1
  2670   00005C  6E06               	movwf	i1LCDGoto@row^0,c
  2671   00005E  0E00               	movlw	0
  2672   000060  EC3A  F00B         	call	i1_LCDGoto
  2673   000064                     
  2674                           ;uart.c: 72:             LCDWriteStr("Framing Error");
  2675   000064  0E22               	movlw	low STR_4
  2676   000066  6E07               	movwf	i1LCDWriteStr@string^0,c
  2677   000068  5007               	movf	i1LCDWriteStr@string^0,w,c
  2678   00006A  A4D8               	btfss	status,2,c
  2679   00006C  0E10               	movlw	high __smallconst
  2680   00006E  6E08               	movwf	(i1LCDWriteStr@string+1)^0,c
  2681   000070  ECC7  F00A         	call	i1_LCDWriteStr	;wreg free
  2682   000074                     i1l2080:
  2683                           
  2684                           ;uart.c: 73:             exit(1);
  2685   000074  0E00               	movlw	0
  2686   000076  6E04               	movwf	(exit@code+1)^0,c
  2687   000078  0E01               	movlw	1
  2688   00007A  6E03               	movwf	exit@code^0,c
  2689   00007C  EC11  F00D         	call	_exit	;wreg free
  2690                           
  2691                           ;uart.c: 74:         } else if (RCSTA1bits.OERR) {
  2692   000080  EF5C  F000         	goto	i1l255
  2693   000084                     i1l251:
  2694   000084  A2AB               	btfss	171,1,c	;volatile
  2695   000086  EF47  F000         	goto	i1u112_21
  2696   00008A  EF49  F000         	goto	i1u112_20
  2697   00008E                     i1u112_21:
  2698   00008E  EF58  F000         	goto	i1l2088
  2699   000092                     i1u112_20:
  2700   000092                     
  2701                           ;uart.c: 75:             LCDGoto(0, 1);
  2702   000092  0E01               	movlw	1
  2703   000094  6E06               	movwf	i1LCDGoto@row^0,c
  2704   000096  0E00               	movlw	0
  2705   000098  EC3A  F00B         	call	i1_LCDGoto
  2706   00009C                     
  2707                           ;uart.c: 76:             LCDWriteStr("Overrun Error");
  2708   00009C  0E30               	movlw	low STR_5
  2709   00009E  6E07               	movwf	i1LCDWriteStr@string^0,c
  2710   0000A0  5007               	movf	i1LCDWriteStr@string^0,w,c
  2711   0000A2  A4D8               	btfss	status,2,c
  2712   0000A4  0E10               	movlw	high __smallconst
  2713   0000A6  6E08               	movwf	(i1LCDWriteStr@string+1)^0,c
  2714   0000A8  ECC7  F00A         	call	i1_LCDWriteStr	;wreg free
  2715   0000AC  EF3A  F000         	goto	i1l2080
  2716   0000B0                     i1l2088:
  2717                           
  2718                           ;uart.c: 79:             LCDPutChar(UARTReadByte());
  2719   0000B0  EC1D  F00D         	call	_UARTReadByte	;wreg free
  2720   0000B4  EC08  F00D         	call	i1_LCDPutChar
  2721   0000B8                     i1l255:
  2722   0000B8  C014  FFF5         	movff	??_SerialRxPinInterrupt+8,tablat
  2723   0000BC  C013  FFF8         	movff	??_SerialRxPinInterrupt+7,tblptru
  2724   0000C0  C012  FFF7         	movff	??_SerialRxPinInterrupt+6,tblptrh
  2725   0000C4  C011  FFF6         	movff	??_SerialRxPinInterrupt+5,tblptrl
  2726   0000C8  C010  FFEA         	movff	??_SerialRxPinInterrupt+4,fsr0h
  2727   0000CC  C00F  FFE9         	movff	??_SerialRxPinInterrupt+3,fsr0l
  2728   0000D0  C00E  FFE0         	movff	??_SerialRxPinInterrupt+2,bsr
  2729   0000D4  C00D  FFE8         	movff	??_SerialRxPinInterrupt+1,wreg
  2730   0000D8  C00C  FFD8         	movff	??_SerialRxPinInterrupt,status
  2731   0000DC  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2732   0000DE  0010               	retfie	
  2733   0000E0                     __end_of_SerialRxPinInterrupt:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function i1_LCDWriteStr *****************
  2737 ;; Defined at:
  2738 ;;		line 163 in file "lcd.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  string          2    6[COMRAM] PTR const unsigned char 
  2741 ;;		 -> STR_5(14), STR_4(14), LCDWriteInt@string(3), LCDWriteFloat@string(5), 
  2742 ;;		 -> LCDWriteHexa@string(3), STR_2(16), display_counter@buffer(17), 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  i               1   10[COMRAM] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;Total ram usage:        5 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 3
  2761 ;; This function calls:
  2762 ;;		i1_LCDPutChar
  2763 ;; This function is called by:
  2764 ;;		_SerialRxPinInterrupt
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text23
  2769   00158E                     __ptext23:
  2770                           	callstack 0
  2771   00158E                     i1_LCDWriteStr:
  2772                           	callstack 20
  2773   00158E                     
  2774                           ;lcd.c: 163: void LCDWriteStr(const char *string);lcd.c: 164: {;lcd.c: 165:   UINT8_T i 
      +                          = 0;
  2775   00158E  0E00               	movlw	0
  2776   001590  6E0B               	movwf	i1LCDWriteStr@i^0,c
  2777                           
  2778                           ;lcd.c: 167:   while (string[i])
  2779   001592  EFE5  F00A         	goto	i1l2012
  2780   001596                     i1l2008:
  2781                           
  2782                           ;lcd.c: 168:     LCDPutChar(string[i++]);
  2783   001596  500B               	movf	i1LCDWriteStr@i^0,w,c
  2784   001598  2407               	addwf	i1LCDWriteStr@string^0,w,c
  2785   00159A  6E09               	movwf	??i1_LCDWriteStr^0,c
  2786   00159C  0E00               	movlw	0
  2787   00159E  2008               	addwfc	(i1LCDWriteStr@string+1)^0,w,c
  2788   0015A0  6E0A               	movwf	(??i1_LCDWriteStr+1)^0,c
  2789   0015A2  C009  FFF6         	movff	??i1_LCDWriteStr,tblptrl
  2790   0015A6  C00A  FFF7         	movff	??i1_LCDWriteStr+1,tblptrh
  2791   0015AA  0E00               	movlw	low (__smallconst shr (0+16))
  2792   0015AC  6EF8               	movwf	tblptru,c
  2793   0015AE  0E0F               	movlw	(high __ramtop+-1)
  2794   0015B0  64F7               	cpfsgt	tblptrh,c
  2795   0015B2  D003               	bra	i1u106_27
  2796   0015B4  0008               	tblrd		*
  2797   0015B6  50F5               	movf	tablat,w,c
  2798   0015B8  D005               	bra	i1u106_20
  2799   0015BA                     i1u106_27:
  2800   0015BA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2801   0015BE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2802   0015C2  50EF               	movf	indf0,w,c
  2803   0015C4                     i1u106_20:
  2804   0015C4  EC08  F00D         	call	i1_LCDPutChar
  2805   0015C8  2A0B               	incf	i1LCDWriteStr@i^0,f,c
  2806   0015CA                     i1l2012:
  2807                           
  2808                           ;lcd.c: 167:   while (string[i])
  2809   0015CA  500B               	movf	i1LCDWriteStr@i^0,w,c
  2810   0015CC  2407               	addwf	i1LCDWriteStr@string^0,w,c
  2811   0015CE  6E09               	movwf	??i1_LCDWriteStr^0,c
  2812   0015D0  0E00               	movlw	0
  2813   0015D2  2008               	addwfc	(i1LCDWriteStr@string+1)^0,w,c
  2814   0015D4  6E0A               	movwf	(??i1_LCDWriteStr+1)^0,c
  2815   0015D6  C009  FFF6         	movff	??i1_LCDWriteStr,tblptrl
  2816   0015DA  C00A  FFF7         	movff	??i1_LCDWriteStr+1,tblptrh
  2817   0015DE  0E00               	movlw	low (__smallconst shr (0+16))
  2818   0015E0  6EF8               	movwf	tblptru,c
  2819   0015E2  0E0F               	movlw	(high __ramtop+-1)
  2820   0015E4  64F7               	cpfsgt	tblptrh,c
  2821   0015E6  D003               	bra	i1u107_27
  2822   0015E8  0008               	tblrd		*
  2823   0015EA  50F5               	movf	tablat,w,c
  2824   0015EC  D005               	bra	i1u107_20
  2825   0015EE                     i1u107_27:
  2826   0015EE  CFF6 FFE9          	movff	tblptrl,fsr0l
  2827   0015F2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2828   0015F6  50EF               	movf	indf0,w,c
  2829   0015F8                     i1u107_20:
  2830   0015F8  0900               	iorlw	0
  2831   0015FA  A4D8               	btfss	status,2,c
  2832   0015FC  EF02  F00B         	goto	i1u108_21
  2833   001600  EF04  F00B         	goto	i1u108_20
  2834   001604                     i1u108_21:
  2835   001604  EFCB  F00A         	goto	i1l2008
  2836   001608                     i1u108_20:
  2837   001608  0012               	return		;funcret
  2838   00160A                     __end_ofi1_LCDWriteStr:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function i1_LCDPutChar *****************
  2842 ;; Defined at:
  2843 ;;		line 150 in file "lcd.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  data            1    wreg     unsigned char 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  data            1    5[COMRAM] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;Total ram usage:        1 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 2
  2864 ;; This function calls:
  2865 ;;		i1_WaitLCD
  2866 ;;		i1_WriteByte
  2867 ;; This function is called by:
  2868 ;;		_SerialRxPinInterrupt
  2869 ;;		i1_LCDWriteStr
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text24
  2874   001A10                     __ptext24:
  2875                           	callstack 0
  2876   001A10                     i1_LCDPutChar:
  2877                           	callstack 20
  2878                           
  2879                           ;incstack = 0
  2880                           ;i1LCDPutChar@data stored from wreg
  2881   001A10  6E06               	movwf	i1LCDPutChar@data^0,c
  2882   001A12                     
  2883                           ;lcd.c: 150: void LCDPutChar(UINT8_T data);lcd.c: 151: {;lcd.c: 152:     WriteByte(0, da
      +                          ta);
  2884   001A12  C006  F004         	movff	i1LCDPutChar@data,i1WriteByte@data
  2885   001A16  0E00               	movlw	0
  2886   001A18  ECD3  F00C         	call	i1_WriteByte
  2887                           
  2888                           ;lcd.c: 153:     WaitLCD();
  2889   001A1C  ECAA  F00C         	call	i1_WaitLCD	;wreg free
  2890   001A20  0012               	return		;funcret
  2891   001A22                     __end_ofi1_LCDPutChar:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function i1_LCDGoto *****************
  2895 ;; Defined at:
  2896 ;;		line 141 in file "lcd.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  column          1    wreg     unsigned char 
  2899 ;;  row             1    5[COMRAM] unsigned char 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  column          1   10[COMRAM] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2911 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;Total ram usage:        6 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 2
  2918 ;; This function calls:
  2919 ;;		i1_WaitLCD
  2920 ;;		i1_WriteByte
  2921 ;; This function is called by:
  2922 ;;		_SerialRxPinInterrupt
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text25
  2927   001674                     __ptext25:
  2928                           	callstack 0
  2929   001674                     i1_LCDGoto:
  2930                           	callstack 21
  2931                           
  2932                           ;incstack = 0
  2933                           ;i1LCDGoto@column stored from wreg
  2934   001674  6E0B               	movwf	i1LCDGoto@column^0,c
  2935   001676                     
  2936                           ;lcd.c: 141: void LCDGoto(UINT8_T column, UINT8_T row);lcd.c: 142: {;lcd.c: 143:     if 
      +                          ((row > (2 - 1)) || (column > (16 - 1)))
  2937   001676  0E02               	movlw	2
  2938   001678  6006               	cpfslt	i1LCDGoto@row^0,c
  2939   00167A  EF41  F00B         	goto	i1u103_21
  2940   00167E  EF43  F00B         	goto	i1u103_20
  2941   001682                     i1u103_21:
  2942   001682  EF6E  F00B         	goto	i1l85
  2943   001686                     i1u103_20:
  2944   001686  0E0F               	movlw	15
  2945   001688  640B               	cpfsgt	i1LCDGoto@column^0,c
  2946   00168A  EF49  F00B         	goto	i1u104_21
  2947   00168E  EF4B  F00B         	goto	i1u104_20
  2948   001692                     i1u104_21:
  2949   001692  EF4D  F00B         	goto	i1l1996
  2950   001696                     i1u104_20:
  2951   001696  EF6E  F00B         	goto	i1l85
  2952   00169A                     i1l1996:
  2953                           
  2954                           ;lcd.c: 146:     WriteByte(1, (row == 1) ? (0xC0 | column) : (0x80 | column));
  2955   00169A  0406               	decf	i1LCDGoto@row^0,w,c
  2956   00169C  B4D8               	btfsc	status,2,c
  2957   00169E  EF53  F00B         	goto	i1u105_21
  2958   0016A2  EF55  F00B         	goto	i1u105_20
  2959   0016A6                     i1u105_21:
  2960   0016A6  EF5F  F00B         	goto	i1l2000
  2961   0016AA                     i1u105_20:
  2962   0016AA  0E80               	movlw	128
  2963   0016AC  C00B  F007         	movff	i1LCDGoto@column,??i1_LCDGoto
  2964   0016B0  6A08               	clrf	(??i1_LCDGoto+1)^0,c
  2965   0016B2  1007               	iorwf	??i1_LCDGoto^0,w,c
  2966   0016B4  6E09               	movwf	i1_LCDGoto$307^0,c
  2967   0016B6  5008               	movf	(??i1_LCDGoto+1)^0,w,c
  2968   0016B8  6E0A               	movwf	(i1_LCDGoto$307+1)^0,c
  2969   0016BA  EF67  F00B         	goto	i1l2002
  2970   0016BE                     i1l2000:
  2971   0016BE  0EC0               	movlw	192
  2972   0016C0  C00B  F007         	movff	i1LCDGoto@column,??i1_LCDGoto
  2973   0016C4  6A08               	clrf	(??i1_LCDGoto+1)^0,c
  2974   0016C6  1007               	iorwf	??i1_LCDGoto^0,w,c
  2975   0016C8  6E09               	movwf	i1_LCDGoto$307^0,c
  2976   0016CA  5008               	movf	(??i1_LCDGoto+1)^0,w,c
  2977   0016CC  6E0A               	movwf	(i1_LCDGoto$307+1)^0,c
  2978   0016CE                     i1l2002:
  2979   0016CE  C009  F004         	movff	i1_LCDGoto$307,i1WriteByte@data
  2980   0016D2  0E01               	movlw	1
  2981   0016D4  ECD3  F00C         	call	i1_WriteByte
  2982   0016D8                     
  2983                           ;lcd.c: 147:     WaitLCD();
  2984   0016D8  ECAA  F00C         	call	i1_WaitLCD	;wreg free
  2985   0016DC                     i1l85:
  2986   0016DC  0012               	return		;funcret
  2987   0016DE                     __end_ofi1_LCDGoto:
  2988                           	callstack 0
  2989                           
  2990 ;; *************** function i1_WriteByte *****************
  2991 ;; Defined at:
  2992 ;;		line 88 in file "lcd.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  cmd             1    wreg     unsigned char 
  2995 ;;  data            1    3[COMRAM] unsigned char 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  cmd             1    4[COMRAM] unsigned char 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3007 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;Total ram usage:        2 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; Hardware stack levels required when called: 1
  3014 ;; This function calls:
  3015 ;;		i1_WriteNibble
  3016 ;; This function is called by:
  3017 ;;		i1_LCDGoto
  3018 ;;		i1_LCDPutChar
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text26
  3023   0019A6                     __ptext26:
  3024                           	callstack 0
  3025   0019A6                     i1_WriteByte:
  3026                           	callstack 20
  3027                           
  3028                           ;incstack = 0
  3029                           ;i1WriteByte@cmd stored from wreg
  3030   0019A6  6E05               	movwf	i1WriteByte@cmd^0,c
  3031   0019A8                     
  3032                           ;lcd.c: 88: void WriteByte(UINT8_T cmd, UINT8_T data);lcd.c: 89: {;lcd.c: 90:     WriteN
      +                          ibble(cmd, data >> 4);
  3033   0019A8  3804               	swapf	i1WriteByte@data^0,w,c
  3034   0019AA  0B0F               	andlw	15
  3035   0019AC  6E01               	movwf	i1WriteNibble@data^0,c
  3036   0019AE  5005               	movf	i1WriteByte@cmd^0,w,c
  3037   0019B0  ECBC  F00B         	call	i1_WriteNibble
  3038                           
  3039                           ;lcd.c: 91:     WriteNibble(cmd, data);
  3040   0019B4  C004  F001         	movff	i1WriteByte@data,i1WriteNibble@data
  3041   0019B8  5005               	movf	i1WriteByte@cmd^0,w,c
  3042   0019BA  ECBC  F00B         	call	i1_WriteNibble
  3043   0019BE  0012               	return		;funcret
  3044   0019C0                     __end_ofi1_WriteByte:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function i1_WriteNibble *****************
  3048 ;; Defined at:
  3049 ;;		line 71 in file "lcd.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  cmd             1    wreg     unsigned char 
  3052 ;;  data            1    0[COMRAM] unsigned char 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  cmd             1    2[COMRAM] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3064 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;Total ram usage:        3 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		i1_WriteByte
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text27
  3078   001778                     __ptext27:
  3079                           	callstack 0
  3080   001778                     i1_WriteNibble:
  3081                           	callstack 20
  3082                           
  3083                           ;incstack = 0
  3084                           ;i1WriteNibble@cmd stored from wreg
  3085   001778  6E03               	movwf	i1WriteNibble@cmd^0,c
  3086   00177A                     
  3087                           ;lcd.c: 71: void WriteNibble(UINT8_T cmd, UINT8_T data);lcd.c: 72: {;lcd.c: 73:     LATD
      +                          bits.LATD4 = (cmd ? 0 : 1);
  3088   00177A  5003               	movf	i1WriteNibble@cmd^0,w,c
  3089   00177C  B4D8               	btfsc	status,2,c
  3090   00177E  EFC3  F00B         	goto	i1u93_21
  3091   001782  EFC7  F00B         	goto	i1u93_20
  3092   001786                     i1u93_21:
  3093   001786  6A02               	clrf	??i1_WriteNibble^0,c
  3094   001788  2A02               	incf	??i1_WriteNibble^0,f,c
  3095   00178A  EFC8  F00B         	goto	i1u94_28
  3096   00178E                     i1u93_20:
  3097   00178E  6A02               	clrf	??i1_WriteNibble^0,c
  3098   001790                     i1u94_28:
  3099   001790  3A02               	swapf	??i1_WriteNibble^0,f,c
  3100   001792  508C               	movf	140,w,c	;volatile
  3101   001794  1802               	xorwf	??i1_WriteNibble^0,w,c
  3102   001796  0BEF               	andlw	-17
  3103   001798  1802               	xorwf	??i1_WriteNibble^0,w,c
  3104   00179A  6E8C               	movwf	140,c	;volatile
  3105   00179C                     
  3106                           ;lcd.c: 74:     LATDbits.LATD5 = 0;
  3107   00179C  9A8C               	bcf	140,5,c	;volatile
  3108   00179E                     
  3109                           ;lcd.c: 75:     LATDbits.LATD6 = 1;
  3110   00179E  8C8C               	bsf	140,6,c	;volatile
  3111   0017A0                     
  3112                           ;lcd.c: 77:     LATDbits.LATD0 = LATDbits.LATD1 = LATDbits.LATD2 = LATDbits.LATD3 = 0;
  3113   0017A0  968C               	bcf	140,3,c	;volatile
  3114   0017A2  948C               	bcf	140,2,c	;volatile
  3115   0017A4  928C               	bcf	140,1,c	;volatile
  3116   0017A6  908C               	bcf	140,0,c	;volatile
  3117   0017A8                     
  3118                           ;lcd.c: 78:     __nop();
  3119   0017A8  0000               	nop	
  3120   0017AA                     
  3121                           ;lcd.c: 79:     __nop();
  3122   0017AA  0000               	nop	
  3123                           
  3124                           ;lcd.c: 81:     LATD = (LATD & 0xF0) | (data & 0x0F);
  3125   0017AC  C001  F002         	movff	i1WriteNibble@data,??i1_WriteNibble
  3126   0017B0  0E0F               	movlw	15
  3127   0017B2  1602               	andwf	??i1_WriteNibble^0,f,c
  3128   0017B4  508C               	movf	140,w,c	;volatile
  3129   0017B6  0BF0               	andlw	240
  3130   0017B8  1002               	iorwf	??i1_WriteNibble^0,w,c
  3131   0017BA  6E8C               	movwf	140,c	;volatile
  3132   0017BC                     
  3133                           ;lcd.c: 82:     __nop();
  3134   0017BC  0000               	nop	
  3135   0017BE                     
  3136                           ;lcd.c: 83:     __nop();
  3137   0017BE  0000               	nop	
  3138   0017C0                     
  3139                           ;lcd.c: 85:     LATDbits.LATD6 = 0;
  3140   0017C0  9C8C               	bcf	140,6,c	;volatile
  3141   0017C2  0012               	return		;funcret
  3142   0017C4                     __end_ofi1_WriteNibble:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function i1_WaitLCD *****************
  3146 ;; Defined at:
  3147 ;;		line 57 in file "lcd.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  status          1    1[COMRAM] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;Total ram usage:        1 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 1
  3168 ;; This function calls:
  3169 ;;		i1_ReadByte
  3170 ;; This function is called by:
  3171 ;;		i1_LCDGoto
  3172 ;;		i1_LCDPutChar
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text28
  3177   001954                     __ptext28:
  3178                           	callstack 0
  3179   001954                     i1_WaitLCD:
  3180                           	callstack 20
  3181   001954                     
  3182                           ;lcd.c: 59:     UINT8_T status;;lcd.c: 61:     LATDbits.LATD4 = 0;
  3183   001954  988C               	bcf	140,4,c	;volatile
  3184                           
  3185                           ;lcd.c: 62:     LATDbits.LATD5 = 1;
  3186   001956  8A8C               	bsf	140,5,c	;volatile
  3187   001958                     i1l1884:
  3188                           
  3189                           ;lcd.c: 65:         status = ReadByte();
  3190   001958  EC4E  F00C         	call	i1_ReadByte	;wreg free
  3191   00195C  6E02               	movwf	i1WaitLCD@status^0,c
  3192   00195E                     
  3193                           ;lcd.c: 66:     } while (status & 0x80);
  3194   00195E  BE02               	btfsc	i1WaitLCD@status^0,7,c
  3195   001960  EFB4  F00C         	goto	i1u96_21
  3196   001964  EFB6  F00C         	goto	i1u96_20
  3197   001968                     i1u96_21:
  3198   001968  EFAC  F00C         	goto	i1l1884
  3199   00196C                     i1u96_20:
  3200   00196C                     
  3201                           ;lcd.c: 68:     LATDbits.LATD5 = 0;
  3202   00196C  9A8C               	bcf	140,5,c	;volatile
  3203   00196E  0012               	return		;funcret
  3204   001970                     __end_ofi1_WaitLCD:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function i1_ReadByte *****************
  3208 ;; Defined at:
  3209 ;;		line 26 in file "lcd.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  status          1    0[COMRAM] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      unsigned char 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;Total ram usage:        1 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		i1_WaitLCD
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text29
  3237   00189C                     __ptext29:
  3238                           	callstack 0
  3239   00189C                     i1_ReadByte:
  3240                           	callstack 20
  3241   00189C                     
  3242                           ;lcd.c: 28:     UINT8_T status;;lcd.c: 30:     TRISDbits.TRISD0 = 1;
  3243   00189C  8095               	bsf	149,0,c	;volatile
  3244                           
  3245                           ;lcd.c: 31:     TRISDbits.TRISD1 = 1;
  3246   00189E  8295               	bsf	149,1,c	;volatile
  3247                           
  3248                           ;lcd.c: 32:     TRISDbits.TRISD2 = 1;
  3249   0018A0  8495               	bsf	149,2,c	;volatile
  3250                           
  3251                           ;lcd.c: 33:     TRISDbits.TRISD3 = 1;
  3252   0018A2  8695               	bsf	149,3,c	;volatile
  3253                           
  3254                           ;lcd.c: 35:     LATDbits.LATD6 = 1;
  3255   0018A4  8C8C               	bsf	140,6,c	;volatile
  3256                           
  3257                           ;lcd.c: 36:     __nop();
  3258   0018A6  0000               	nop	
  3259                           
  3260                           ;lcd.c: 37:     __nop();
  3261   0018A8  0000               	nop	
  3262   0018AA                     
  3263                           ;lcd.c: 39:     status = PORTD << 4;
  3264   0018AA  3883               	swapf	131,w,c	;volatile
  3265   0018AC  0BF0               	andlw	240
  3266   0018AE  6E01               	movwf	i1ReadByte@status^0,c
  3267   0018B0                     
  3268                           ;lcd.c: 40:     LATDbits.LATD6 = 0;
  3269   0018B0  9C8C               	bcf	140,6,c	;volatile
  3270   0018B2                     
  3271                           ;lcd.c: 42:     LATDbits.LATD6 = 1;
  3272   0018B2  8C8C               	bsf	140,6,c	;volatile
  3273   0018B4                     
  3274                           ;lcd.c: 43:     __nop();
  3275   0018B4  0000               	nop	
  3276   0018B6                     
  3277                           ;lcd.c: 44:     __nop();
  3278   0018B6  0000               	nop	
  3279                           
  3280                           ;lcd.c: 46:     status |= PORTD & 0x0F;
  3281   0018B8  5083               	movf	131,w,c	;volatile
  3282   0018BA  0B0F               	andlw	15
  3283   0018BC  1201               	iorwf	i1ReadByte@status^0,f,c
  3284   0018BE                     
  3285                           ;lcd.c: 47:     LATDbits.LATD6 = 0;
  3286   0018BE  9C8C               	bcf	140,6,c	;volatile
  3287   0018C0                     
  3288                           ;lcd.c: 49:     TRISDbits.TRISD0 = 0;
  3289   0018C0  9095               	bcf	149,0,c	;volatile
  3290   0018C2                     
  3291                           ;lcd.c: 50:     TRISDbits.TRISD1 = 0;
  3292   0018C2  9295               	bcf	149,1,c	;volatile
  3293   0018C4                     
  3294                           ;lcd.c: 51:     TRISDbits.TRISD2 = 0;
  3295   0018C4  9495               	bcf	149,2,c	;volatile
  3296   0018C6                     
  3297                           ;lcd.c: 52:     TRISDbits.TRISD3 = 0;
  3298   0018C6  9695               	bcf	149,3,c	;volatile
  3299   0018C8                     
  3300                           ;lcd.c: 54:     return(status);
  3301   0018C8  5001               	movf	i1ReadByte@status^0,w,c
  3302   0018CA  0012               	return		;funcret
  3303   0018CC                     __end_ofi1_ReadByte:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _exit *****************
  3307 ;; Defined at:
  3308 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\exit.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  code            2    2[COMRAM] int 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        2 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 1
  3329 ;; This function calls:
  3330 ;;		__Exit
  3331 ;;		___funcs_on_exit
  3332 ;; This function is called by:
  3333 ;;		_SerialRxPinInterrupt
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text30
  3338   001A22                     __ptext30:
  3339                           	callstack 0
  3340   001A22                     _exit:
  3341                           	callstack 22
  3342   001A22  ECB8  F00C         	call	___funcs_on_exit	;wreg free
  3343   001A26  C003  F001         	movff	exit@code,__Exit@ec
  3344   001A2A  C004  F002         	movff	exit@code+1,__Exit@ec+1
  3345   001A2E  EC1A  F00D         	call	__Exit	;wreg free
  3346   001A32  0012               	return		;funcret
  3347   001A34                     __end_of_exit:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function ___funcs_on_exit *****************
  3351 ;; Defined at:
  3352 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\atexit.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  func            2    0        PTR FTN()void 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;Total ram usage:        0 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_exit
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text31
  3380   001970                     __ptext31:
  3381                           	callstack 0
  3382   001970                     ___funcs_on_exit:
  3383                           	callstack 22
  3384   001970  EFBB  F00C         	goto	i1l1346
  3385   001974                     i1l1344:
  3386   001974  064A               	decf	_count^0,f,c
  3387   001976                     i1l1346:
  3388   001976  504A               	movf	_count^0,w,c
  3389   001978  0A80               	xorlw	128
  3390   00197A  0F7F               	addlw	-129
  3391   00197C  B0D8               	btfsc	status,0,c
  3392   00197E  EFC3  F00C         	goto	i1u41_21
  3393   001982  EFC5  F00C         	goto	i1u41_20
  3394   001986                     i1u41_21:
  3395   001986  EFBA  F00C         	goto	i1l1344
  3396   00198A                     i1u41_20:
  3397   00198A  0012               	return		;funcret
  3398   00198C                     __end_of___funcs_on_exit:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function __Exit *****************
  3402 ;; Defined at:
  3403 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\_Exit.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  ec              2    0[COMRAM] int 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		None
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;Total ram usage:        2 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_exit
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text32
  3431   001A34                     __ptext32:
  3432                           	callstack 0
  3433   001A34                     __Exit:
  3434                           	callstack 22
  3435   001A34                     i1l939:
  3436   001A34  EF1A  F00D         	goto	i1l939
  3437   001A38  0012               	return		;funcret
  3438   001A3A                     __end_of__Exit:
  3439                           	callstack 0
  3440                           
  3441 ;; *************** function _UARTReadByte *****************
  3442 ;; Defined at:
  3443 ;;		line 61 in file "uart.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      unsigned char 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;Total ram usage:        0 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_SerialRxPinInterrupt
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text33
  3471   001A3A                     __ptext33:
  3472                           	callstack 0
  3473   001A3A                     _UARTReadByte:
  3474                           	callstack 23
  3475   001A3A                     
  3476                           ;uart.c: 63:     return(RCREG1);
  3477   001A3A  50AE               	movf	174,w,c	;volatile
  3478   001A3C  0012               	return		;funcret
  3479   001A3E                     __end_of_UARTReadByte:
  3480                           	callstack 0
  3481                           
  3482                           	psect	rparam
  3483   000000                     
  3484                           	psect	temp
  3485   00004B                     btemp:
  3486                           	callstack 0
  3487   00004B                     	ds	1
  3488   000000                     int$flags	set	btemp
  3489   000000                     wtemp8	set	btemp+1
  3490   000000                     ttemp5	set	btemp+1
  3491   000000                     ttemp6	set	btemp+4
  3492   000000                     ttemp7	set	btemp+8
  3493                           
  3494                           	psect	config
  3495                           
  3496                           ; Padding undefined space
  3497   300000                     	org	3145728
  3498   300000  FF                 	db	255
  3499                           
  3500                           ;Config register CONFIG1H @ 0x300001
  3501                           ;	Oscillator Selection bits
  3502                           ;	FOSC = INTIO7, Internal oscillator block, CLKOUT function on OSC2
  3503                           ;	4X PLL Enable
  3504                           ;	PLLCFG = OFF, Oscillator used directly
  3505                           ;	Primary clock enable bit
  3506                           ;	PRICLKEN = ON, Primary clock is always enabled
  3507                           ;	Fail-Safe Clock Monitor Enable bit
  3508                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3509                           ;	Internal/External Oscillator Switchover bit
  3510                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3511   300001                     	org	3145729
  3512   300001  29                 	db	41
  3513                           
  3514                           ;Config register CONFIG2L @ 0x300002
  3515                           ;	Power-up Timer Enable bit
  3516                           ;	PWRTEN = OFF, Power up timer disabled
  3517                           ;	Brown-out Reset Enable bits
  3518                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3519                           ;	Brown Out Reset Voltage bits
  3520                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3521   300002                     	org	3145730
  3522   300002  1F                 	db	31
  3523                           
  3524                           ;Config register CONFIG2H @ 0x300003
  3525                           ;	Watchdog Timer Enable bits
  3526                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3527                           ;	Watchdog Timer Postscale Select bits
  3528                           ;	WDTPS = 32768, 1:32768
  3529   300003                     	org	3145731
  3530   300003  3C                 	db	60
  3531                           
  3532                           ; Padding undefined space
  3533   300004                     	org	3145732
  3534   300004  FF                 	db	255
  3535                           
  3536                           ;Config register CONFIG3H @ 0x300005
  3537                           ;	CCP2 MUX bit
  3538                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3539                           ;	PORTB A/D Enable bit
  3540                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  3541                           ;	P3A/CCP3 Mux bit
  3542                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3543                           ;	HFINTOSC Fast Start-up
  3544                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3545                           ;	Timer3 Clock input mux bit
  3546                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3547                           ;	ECCP2 B output mux bit
  3548                           ;	P2BMX = PORTD2, P2B is on RD2
  3549                           ;	MCLR Pin Enable bit
  3550                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  3551   300005                     	org	3145733
  3552   300005  BF                 	db	191
  3553                           
  3554                           ;Config register CONFIG4L @ 0x300006
  3555                           ;	Stack Full/Underflow Reset Enable bit
  3556                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3557                           ;	Single-Supply ICSP Enable bit
  3558                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  3559                           ;	Extended Instruction Set Enable bit
  3560                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3561                           ;	Background Debug
  3562                           ;	DEBUG = 0x1, unprogrammed default
  3563   300006                     	org	3145734
  3564   300006  85                 	db	133
  3565                           
  3566                           ; Padding undefined space
  3567   300007                     	org	3145735
  3568   300007  FF                 	db	255
  3569                           
  3570                           ;Config register CONFIG5L @ 0x300008
  3571                           ;	Code Protection Block 0
  3572                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3573                           ;	Code Protection Block 1
  3574                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3575                           ;	Code Protection Block 2
  3576                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3577                           ;	Code Protection Block 3
  3578                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3579   300008                     	org	3145736
  3580   300008  0F                 	db	15
  3581                           
  3582                           ;Config register CONFIG5H @ 0x300009
  3583                           ;	Boot Block Code Protection bit
  3584                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3585                           ;	Data EEPROM Code Protection bit
  3586                           ;	CPD = OFF, Data EEPROM not code-protected
  3587   300009                     	org	3145737
  3588   300009  C0                 	db	192
  3589                           
  3590                           ;Config register CONFIG6L @ 0x30000A
  3591                           ;	Write Protection Block 0
  3592                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3593                           ;	Write Protection Block 1
  3594                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3595                           ;	Write Protection Block 2
  3596                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3597                           ;	Write Protection Block 3
  3598                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3599   30000A                     	org	3145738
  3600   30000A  0F                 	db	15
  3601                           
  3602                           ;Config register CONFIG6H @ 0x30000B
  3603                           ;	Configuration Register Write Protection bit
  3604                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3605                           ;	Boot Block Write Protection bit
  3606                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3607                           ;	Data EEPROM Write Protection bit
  3608                           ;	WRTD = OFF, Data EEPROM not write-protected
  3609   30000B                     	org	3145739
  3610   30000B  E0                 	db	224
  3611                           
  3612                           ;Config register CONFIG7L @ 0x30000C
  3613                           ;	Table Read Protection Block 0
  3614                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3615                           ;	Table Read Protection Block 1
  3616                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3617                           ;	Table Read Protection Block 2
  3618                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3619                           ;	Table Read Protection Block 3
  3620                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3621   30000C                     	org	3145740
  3622   30000C  0F                 	db	15
  3623                           
  3624                           ;Config register CONFIG7H @ 0x30000D
  3625                           ;	Boot Block Table Read Protection bit
  3626                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3627   30000D                     	org	3145741
  3628   30000D  40                 	db	64
  3629                           tosu	equ	0xFFF
  3630                           tosh	equ	0xFFE
  3631                           tosl	equ	0xFFD
  3632                           stkptr	equ	0xFFC
  3633                           pclatu	equ	0xFFB
  3634                           pclath	equ	0xFFA
  3635                           pcl	equ	0xFF9
  3636                           tblptru	equ	0xFF8
  3637                           tblptrh	equ	0xFF7
  3638                           tblptrl	equ	0xFF6
  3639                           tablat	equ	0xFF5
  3640                           prodh	equ	0xFF4
  3641                           prodl	equ	0xFF3
  3642                           indf0	equ	0xFEF
  3643                           postinc0	equ	0xFEE
  3644                           postdec0	equ	0xFED
  3645                           preinc0	equ	0xFEC
  3646                           plusw0	equ	0xFEB
  3647                           fsr0h	equ	0xFEA
  3648                           fsr0l	equ	0xFE9
  3649                           wreg	equ	0xFE8
  3650                           indf1	equ	0xFE7
  3651                           postinc1	equ	0xFE6
  3652                           postdec1	equ	0xFE5
  3653                           preinc1	equ	0xFE4
  3654                           plusw1	equ	0xFE3
  3655                           fsr1h	equ	0xFE2
  3656                           fsr1l	equ	0xFE1
  3657                           bsr	equ	0xFE0
  3658                           indf2	equ	0xFDF
  3659                           postinc2	equ	0xFDE
  3660                           postdec2	equ	0xFDD
  3661                           preinc2	equ	0xFDC
  3662                           plusw2	equ	0xFDB
  3663                           fsr2h	equ	0xFDA
  3664                           fsr2l	equ	0xFD9
  3665                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      74
    BANK0           160     22      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    display_message@message	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    __funcs_on_exit@func	PTR FTN()void  size(2) Largest target is 0

    LCDWriteStr@string	PTR const unsigned char  size(2) Largest target is 17
		 -> display_counter@buffer(BANK0[17]), LCDWriteFloat@string(COMRAM[5]), LCDWriteHexa@string(COMRAM[3]), LCDWriteInt@string(COMRAM[3]), 
		 -> STR_2(CODE[16]), STR_4(CODE[14]), STR_5(CODE[14]), 

    S1586$buffer	PTR unsigned char  size(2) Largest target is 0

    S1586$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> display_counter@buffer(BANK0[17]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _display_message->_LCDWriteStr
    _LCDClear->_WriteByte
    _display_counter->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _LCDWriteStr->_LCDPutChar
    _LCDPutChar->_WriteByte
    _LCDGoto->_WriteByte
    _WriteByte->_WriteNibble
    _LCDInit->_WriteNibble
    _WaitLCD->_ReadByte

Critical Paths under _SerialRxPinInterrupt in COMRAM

    _SerialRxPinInterrupt->i1_LCDGoto
    _SerialRxPinInterrupt->i1_LCDWriteStr
    i1_LCDWriteStr->i1_LCDPutChar
    i1_LCDPutChar->i1_WriteByte
    i1_LCDGoto->i1_WriteByte
    i1_WriteByte->i1_WriteNibble
    i1_WaitLCD->i1_ReadByte
    _exit->__Exit

Critical Paths under _main in BANK0

    _main->_display_counter

Critical Paths under _SerialRxPinInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SerialRxPinInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SerialRxPinInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SerialRxPinInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SerialRxPinInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SerialRxPinInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SerialRxPinInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SerialRxPinInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SerialRxPinInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SerialRxPinInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SerialRxPinInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SerialRxPinInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SerialRxPinInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SerialRxPinInterrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SerialRxPinInterrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _SerialRxPinInterrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   17760
                                             19 BANK0      3     3      0
                            _LCDInit
                      _UARTWriteChar
                    _display_counter
                    _display_message
                          _init_UART
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_message                                      1     0      1    4956
                                             31 COMRAM     1     0      1
                           _LCDClear
                        _LCDWriteStr
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             1     1      0    2057
                                             25 COMRAM     1     1      0
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (1) _display_counter                                     19    17      2   11141
                                              0 BANK0     19    17      2
                            _LCDGoto
                        _LCDWriteStr
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    5437
                                             45 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    4951
                                             41 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    4490
                                             30 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                             20 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             26 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1153
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1165
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteStr                                          5     3      2    2778
                                             26 COMRAM     5     3      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           1     1      0    2088
                                             25 COMRAM     1     1      0
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              6     5      1    2719
                                             25 COMRAM     6     5      1
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (4) _WriteByte                                            2     1      1    1986
                                             23 COMRAM     2     1      1
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (1) _UARTWriteChar                                        1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0    1573
                                             23 COMRAM     1     1      0
                            _WaitLCD
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (5) _WriteNibble                                          3     2      1    1502
                                             20 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (4) _WaitLCD                                              1     1      0      71
                                             21 COMRAM     1     1      0
                           _ReadByte
 ---------------------------------------------------------------------------------
 (5) _ReadByte                                             1     1      0      37
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _SerialRxPinInterrupt                                 9     9      0    1471
                                             11 COMRAM     9     9      0
                       _UARTReadByte
                               _exit
                          i1_LCDGoto
                       i1_LCDPutChar
                      i1_LCDWriteStr
 ---------------------------------------------------------------------------------
 (8) i1_LCDWriteStr                                        5     3      2     447
                                              6 COMRAM     5     3      2
                       i1_LCDPutChar
 ---------------------------------------------------------------------------------
 (9) i1_LCDPutChar                                         1     1      0     305
                                              5 COMRAM     1     1      0
                          i1_WaitLCD
                        i1_WriteByte
 ---------------------------------------------------------------------------------
 (8) i1_LCDGoto                                            6     5      1     469
                                              5 COMRAM     6     5      1
                          i1_WaitLCD
                        i1_WriteByte
 ---------------------------------------------------------------------------------
 (10) i1_WriteByte                                         2     1      1     236
                                              3 COMRAM     2     1      1
                      i1_WriteNibble
 ---------------------------------------------------------------------------------
 (11) i1_WriteNibble                                       3     2      1      96
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (10) i1_WaitLCD                                           1     1      0      47
                                              1 COMRAM     1     1      0
                         i1_ReadByte
 ---------------------------------------------------------------------------------
 (11) i1_ReadByte                                          1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _exit                                                 2     0      2     250
                                              2 COMRAM     2     0      2
                              __Exit
                    ___funcs_on_exit
 ---------------------------------------------------------------------------------
 (9) ___funcs_on_exit                                      2     2      0       0
 ---------------------------------------------------------------------------------
 (9) __Exit                                                2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _UARTReadByte                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDInit
     _WaitLCD
       _ReadByte
     _WriteNibble
   _UARTWriteChar
   _display_counter
     _LCDGoto
       _WaitLCD
       _WriteByte
         _WriteNibble
     _LCDWriteStr
       _LCDPutChar
         _WaitLCD
         _WriteByte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _display_message
     _LCDClear
       _WaitLCD
       _WriteByte
     _LCDWriteStr
   _init_UART

 _SerialRxPinInterrupt (ROOT)
   _UARTReadByte
   _exit
     __Exit
     ___funcs_on_exit
   i1_LCDGoto
     i1_WaitLCD
       i1_ReadByte
     i1_WriteByte
       i1_WriteNibble
   i1_LCDPutChar
     i1_WaitLCD
     i1_WriteByte
   i1_LCDWriteStr
     i1_LCDPutChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      36       5       33.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      4A       1       78.7%
BITBIGSFRlllh       48      0       0      46        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhh     26      0       0      37        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRhhhlh       C      0       0      39        0.0%
BITBIGSFRhlhh        9      0       0      41        0.0%
BITBIGSFRllh         8      0       0      45        0.0%
BITBIGSFRlh          7      0       0      44        0.0%
BITBIGSFRhhhll       7      0       0      40        0.0%
BITBIGSFRhll         7      0       0      43        0.0%
BITBIGSFRllll        2      0       0      47        0.0%
BITBIGSFRhlhl        1      0       0      42        0.0%
BITBIGSFRhhhhhl      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      48        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Feb 16 10:15:25 2024

                          l30 19FC                            l33 19D8                            l27 19D4  
                 ?_LCDPutChar 0001                            l36 19EA                            l62 189A  
                          l70 1776                            l39 18F4                            l73 19A4  
                          l66 1950                            l67 1952                            l76 12F2  
                          l92 1A0E                            l85 1672                            l79 1936  
                ___awdiv@sign 001A                            bsr 0FE0                   i1_WriteByte 19A6  
                         l101 158C                           l502 1466                           l489 13B6  
                         l962 1836                           _abs 1838                  ___awmod@sign 001A  
                         wreg 0FE8                    _TXSTA1bits 0FAC               __end_of_LCDInit 12F4  
             __end_of_LCDGoto 1674                  ?_LCDWriteStr 001B                          l1000 120A  
                        l1010 1852                          l1013 186A                          l1006 1802  
                        l1025 1510                          ?_abs 001B                          l2100 1886  
                        l1036 1A3E                          l2110 1896                          l2102 188E  
                        l2112 1898                          l2104 1890                          l2120 1752  
                        l2200 1432                          l2106 1892                          l2130 1772  
                        l2122 1754                          l2210 145E                          l2202 143A  
                        l2108 1894                          l2132 1774                          l2124 175C  
                        l2116 172E                          l2140 130E                          l2204 1440  
                        l2220 1492                          l2126 175E                          l2118 1750  
                        l2310 151A                          l2150 1334                          l2142 1312  
                        l2134 12F4                          l2206 1446                          l2230 1846  
                        l2222 14AE                          l2214 1468                          l2302 1918  
                        l2232 1938                          l2128 1770                          l2400 12DA  
                        l2312 154C                          l2160 136A                          l2152 1346  
                        l2144 1320                          l2136 12F8                          l2208 1456  
                        l2224 14E0                          l2216 1478                          l2240 104C  
                        l2320 1814                          l2304 1922                          l2090 186C  
                        l2234 193C                          l2402 12E4                          l2330 161C  
                        l2314 154E                          l2162 1380                          l2154 134E  
                        l2170 1396                          l2146 1328                          l2138 1306  
                        l2218 1488                          l2250 1092                          l2242 1070  
                        l2322 181C                          l2306 1932                          l2410 16E6  
                        l2092 187A                          l2236 1942                          l2404 12EE  
                        l2340 166E                          l2332 1630                          l2308 1512  
                        l2172 13A6                          l2164 1388                          l2156 1356  
                        l2148 132C                          l2180 13BC                          l2228 1838  
                        l2260 1108                          l2252 10B0                          l2244 1078  
                        l2324 182C                          l2316 1804                          l2420 171A  
                        l2412 16EE                          l2094 1880                          l2350 19D8  
                        l2238 198E                          l2334 1640                          l2174 13AE  
                        l2166 138A                          l2158 1364                          l2190 13EC  
                        l2182 13CA                          l2270 1186                          l2262 1138  
                        l2254 10CE                          l2246 1084                          l2318 180C  
                        l2342 19C0                          l2414 16F8                          l2406 16DE  
                        l2096 1882                          l2360 120C                          l2352 19E6  
                        l2336 1654                          l2328 160C                          l2168 1390  
                        l2192 13FE                          l2184 13D2                          l2272 1196  
                        l2264 1154                          l2256 10E6                          l2280 11DA  
                        l2248 1088                          l2344 19C4                          l2416 1704  
                        l2408 16E2                          l2098 1884                          l2370 125A  
                        l2362 121E                          l2338 1664                          l2290 1A00  
                        l2194 1406                          l2186 13D6                          l2178 13B8  
                        l2274 11A8                          l2266 1166                          l2258 10F0  
                        l2354 18CC                          l2346 19EC                          l2418 170A  
                        l2380 128E                          l2372 126C                          l2364 122E  
                        l2196 140E                          l2188 13E4                          l2276 11C2  
                        l2268 1176                          l2284 11E6                          l2292 17C4  
                        l2356 18E0                          l2348 19F0                          l2390 12B4  
                        l2382 1292                          l2374 1276                          l2366 1238  
                        l2198 141C                          l2278 11C4                          l2294 17CC  
                        l2358 18EA                          l2392 12BE                          l2384 129C  
                        l2376 127A                          l2368 1252                          l2296 17DC  
                        l2394 12C2                          l2386 12A6                          l2378 1284  
                        l2298 17FA                          l2396 12CC                          l2388 12AA  
                        l2398 12D6                          STR_1 103E                          STR_2 1012  
                        STR_3 1001                          STR_4 1022                          STR_5 1030  
     __end_of_display_counter 18F6                          u1200 13A6                          u1201 13A2  
                        u1130 1742                          u1210 13CA                          u1131 173A  
                        u1211 13C6                          u1220 13E4                          u1300 14E0  
                        u1221 13E0                          u1301 14DC                          u1150 1306  
                        u1230 13FE                          u1310 1846                          u1151 1302  
                        u1231 13FA                          u1311 1842                          u1320 1950  
                        u1160 1320                          u1240 141C                          u1400 1186  
                        u1321 194C                          u1161 131C                          u1241 1418  
                        u1401 1182                          u1170 1346                          u1250 1432  
                        u1410 1196                          u1330 1070                          u1171 1342  
                        u1251 142E                          u1411 1192                          u1331 106C  
                        u1148 1744                          u1500 19E6                          u1180 1364  
                        u1260 1456                          u1420 11D6                          u1340 10B0  
                        u1501 19E2                          u1181 1360                          u1261 1452  
                        u1421 11D2                          u1341 10AC                          u1190 1380  
                        u1270 1478                          u1350 10CE                          u1430 17FA  
                        u1191 137C                          u1271 1474                          u1351 10CA  
                        u1431 17F6                          u1440 1548                          u1280 1488  
                        u1360 1104                          _LATD 0F8C                          u1281 1484  
                        u1361 10FE                          u1450 157C                          u1290 14AE  
                        u1370 1106                          u1291 14AA                          u1460 158C  
                        u1380 1166                          u1461 1588                          u1381 1162  
                        u1470 161C                          u1390 1176                          u1471 1618  
                        u1447 153E                          u1391 1172                          u1527 1712  
                        u1480 162C                          u1481 1628                          u1457 1572  
                        u1537 1928                          u1490 1640                          u1547 1224  
                        u1491 163C                          u1557 123E                          u1567 1254  
                        u1577 1266                   main@counter 0094                          _PEIE 7F96  
                        _RCIE 7CED                          _RCIF 7CF5                          i1l62 18CA  
                        i1l70 17C2                          i1l73 19BE                          i1l66 196C  
                        i1l67 196E                          i1l92 1A20                          i1l85 16DC  
                        _RCIP 7CFD       __end_of_display_message 19D6                          abs@a 001B  
                        _dbuf 0060                          _main 16DE                          _exit 1A22  
                        _prec 0047                          fsr0h 0FEA                          fsr1h 0FE2  
                        indf0 0FEF                          fsr2h 0FDA                          fsr0l 0FE9  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        btemp 004B                          start 00E0                  ___param_bank 0000  
            __end_of_LCDClear 1938                         ??_abs 001D               __end_of_WaitLCD 1954  
                _BAUDCON1bits 0FB8                 i1_WriteNibble 1778                         ?_main 0001  
                       ?_exit 0003               __end_of___awdiv 13B8               __end_of___awmod 1468  
             ___awdiv@divisor 0017                         i1l101 1608                         i1l251 0084  
                       i1l245 1A3C                         i1l255 00B8                         i1l951 198A  
                       i1l936 1A32                         i1l939 1A34               ___awdiv@counter 0019  
                vfpfcnvrt@fmt 0020                         _PORTD 0F83                         __Exit 1A34  
                       _flags 0049                         _count 004A                         _funcs 003F  
                       _fputc 1468                   ?i1_ReadByte 0001                         _width 0045  
                       _putch 1A3E                         tablat 0FF5                         ttemp5 004C  
                       ttemp6 004F                         ttemp7 0053                         status 0FD8  
                       wtemp8 004C               __end_of_sprintf 1838                 WaitLCD@status 0016  
           i1WriteNibble@data 0001               __initialization 18F6                  __end_of_main 172C  
                __end_of_exit 1A34              __end_of_ReadByte 189C                ?i1_WriteNibble 0001  
                      ??_main 0093                        ??_exit 0005                 __activetblptr 0003  
                   ??_LCDInit 0018                     ??_LCDGoto 001B                        ?__Exit 0001  
            i1ReadByte@status 0001                        ?_fputc 0015              ___awdiv@dividend 0015  
           __end_ofi1_LCDGoto 16DE                        ?_putch 0001                 LCDGoto@column 001F  
               ?i1_LCDPutChar 0001              ?_display_counter 0080                        i1l2000 16BE  
                      i1l2002 16CE                        i1l2010 15C8                        i1l2004 16D8  
                      i1l2012 15CA                        i1l2006 158E                        i1l2008 1596  
                      i1l1342 1970                        i1l1344 1974                        i1l2080 0074  
                      i1l2072 003E                        i1l1418 1A3A                        i1l1346 1976  
                      i1l2082 0092                        i1l2074 004C                        i1l2084 009C  
                      i1l2076 005A                        i1l2078 0064                        i1l2088 00B0  
                      i1l1830 18B0                        i1l1840 18C0                        i1l1832 18B2  
                      i1l1842 18C2                        i1l1834 18B4                        i1l1826 189C  
                      i1l1930 1A12                        i1l1844 18C4                        i1l1836 18B6  
                      i1l1828 18AA                        i1l1860 17A8                        i1l1852 177A  
                      i1l1846 18C6                        i1l1838 18BE                        i1l1862 17AA  
                      i1l1854 179C                        i1l1848 18C8                        i1l1864 17BC  
                      i1l1856 179E                        i1l1882 1954                        i1l1866 17BE  
                      i1l1858 17A0                        i1l1884 1958                        i1l1868 17C0  
                      i1l1990 1A26                        i1l1886 195E                        i1l1888 19A8  
                      i1l1992 1676                        i1l1994 1686                        i1l1988 1A22  
                      i1l1996 169A                        i1l1998 16AA                        _RCREG1 0FAE  
                      _RCSTA1 0FAB              ?_display_message 0020                 vfpfcnvrt@done 0023  
                      _SPBRG1 0FAF                        _TXREG1 0FAD                        _TXSTA1 0FAC  
                   ??_WaitLCD 0016                  vfprintf@cfmt 002D                     ??___awdiv 0019  
                   ??___awmod 0019             __end_ofi1_WaitLCD 1970                        clear_0 18FC  
                      clear_1 1908              ___awdiv@quotient 001B               ___awmod@divisor 0017  
                      isa$std 0001               ___awmod@counter 0019                        fputc@c 0015  
                __mediumconst 0000                        tblptrh 0FF7                  LCDWriteStr@i 001F  
                      tblptrl 0FF6                        tblptru 0FF8                        putch@c 0001  
            __end_of_vfprintf 1804                     ??_sprintf 0032                ??i1_LCDPutChar 0006  
                   ?_LCDClear 0001                    __accesstop 0060       __end_of__initialization 190E  
               ___rparam_used 0001                 i1_LCDGoto$307 0009                __pcstackCOMRAM 0001  
              WriteNibble@cmd 0017                 __end_of__Exit 1A3A               ??i1_WriteNibble 0002  
             i1WaitLCD@status 0002                 __end_of_fputc 1512                  ??_LCDPutChar 001A  
               __end_of_putch 1A40         __end_of_UARTWriteChar 19EC                  ?i1_WriteByte 0004  
                i1LCDGoto@row 0006             ??___funcs_on_exit 0001                       ??__Exit 0003  
              i1LCDWriteStr@i 000B                       ??_fputc 0018                       ??_putch 0015  
               i1_LCDWriteStr 158E                    __pbssBANK0 0060                  WriteByte@cmd 0019  
                  ??_LCDClear 001A                     ?_ReadByte 0001            __end_of_LCDPutChar 1A10  
             i1LCDGoto@column 000B                 ??_WriteNibble 0016             UARTWriteChar@data 0015  
           __end_of_WriteByte 19A6                       _LCDInit 120C                       _LCDGoto 160A  
                     i1u41_20 198A                       i1u41_21 1986                       i1u93_20 178E  
                     i1u93_21 1786                       i1u94_28 1790                       i1u96_20 196C  
                     i1u96_21 1968                       _SPBRGH1 0FB0                       _SSP1ADD 0FC8  
                     _SSP1BUF 0FC9                 ?_UARTReadByte 0001                ?i1_LCDWriteStr 0007  
                ??i1_ReadByte 0001                    ??_ReadByte 0015                i1WriteByte@cmd 0005  
                     __Hparam 0000                       _WaitLCD 1938                       __Lparam 0000  
                     ___awdiv 12F4                       ___awmod 13B8                     ?_vfprintf 002A  
                __psmallconst 1000          __end_ofi1_LCDPutChar 1A22                       __pcinit 18F6  
                     __ramtop 1000            __end_ofi1_ReadByte 18CC                       __ptext0 16DE  
                     __ptext1 19EC                       __ptext2 19C0                       __ptext3 1918  
                     __ptext4 18CC                       __ptext5 1804                       __ptext6 17C4  
                     __ptext7 104C                       __ptext8 1468                       __ptext9 1A3E  
           __end_of_init_UART 19FE           __end_of_WriteNibble 1778              ___awmod@dividend 0015  
              ??_UARTReadByte 0001                       _sprintf 1804          end_of_initialization 190E  
                     fputc@fp 0017                     i1_LCDGoto 1674             LCDWriteStr@string 001B  
           __end_of_vfpfcnvrt 120C                       postdec2 0FDD                       postinc0 0FEE  
                     postinc1 0FE6                       postinc2 0FDE              vfpfcnvrt@convarg 0025  
                  ??_vfprintf 002D                     i1_WaitLCD 1954                     _TRISCbits 0F94  
                   _TRISDbits 0F95               ??i1_LCDWriteStr 0009                    ?i1_LCDGoto 0006  
                   _TXSTAbits 0FAC                    LCDGoto@row 001A               WriteNibble@data 0015  
             ___funcs_on_exit 1970                   vfpfcnvrt@ap 0021                   _WriteNibble 172C  
                 vfpfcnvrt@cp 0024                   vfpfcnvrt@fp 001F  __end_of_SerialRxPinInterrupt 00E0  
                  ?i1_WaitLCD 0001           start_initialization 18F6              i1WriteNibble@cmd 0003  
                 __end_of_abs 186C                 ??_LCDWriteStr 001D                   vfprintf@fmt 002B  
        __end_of_UARTReadByte 1A3E         __end_ofi1_WriteNibble 17C4                      ?_LCDInit 0001  
                    ?_LCDGoto 001A                 WriteByte@data 0018                   __pbssCOMRAM 003F  
               __pcstackBANK0 0080                     _WriteByte 198C                LCDPutChar@data 001A  
      display_message@message 0020                  i1_LCDPutChar 1A10                   ??i1_LCDGoto 0007  
     __end_of___funcs_on_exit 198C           __end_of_LCDWriteStr 158E                      ?_WaitLCD 0001  
                    ?___awdiv 0015                      ?___awmod 0015                   __pintcodelo 0018  
           ??_display_counter 003F             ??_display_message 0021                   __smallconst 1000  
                 ??i1_WaitLCD 0002                     _init_UART 19EC                    ?_WriteByte 0018  
                    ?_sprintf 002E                      _LCDClear 1918                      _LATDbits 0F8C  
                    _PIE1bits 0F9D                      i1u110_20 004C                      i1u110_21 0048  
                    i1u103_20 1686                      i1u111_20 005A                      i1u103_21 1682  
                    i1u111_21 0056                      i1u104_20 1696                      i1u112_20 0092  
                    i1u104_21 1692                      i1u112_21 008E                      i1u105_20 16AA  
                    i1u105_21 16A6          _SerialRxPinInterrupt 0018                      i1u106_20 15C4  
                    i1u106_27 15BA                      i1u107_20 15F8                      i1u107_27 15EE  
                    i1u108_20 1608                      i1u108_21 1604                   _LCDGoto$307 001D  
                    _PIR1bits 0F9E                      _PIR2bits 0FA1                      _SSP1CON1 0FC6  
                    _SSP1CON2 0FC5                     _vfpfcnvrt 104C                 _UARTWriteChar 19D6  
                  ?_init_UART 0001                    vfpfcnvrt@c 0029                   _LCDWriteStr 1512  
             i1WriteByte@data 0004                      _ReadByte 186C              ?___funcs_on_exit 0001  
       ?_SerialRxPinInterrupt 0001                      __Exit@ec 0001                      __Hrparam 0000  
                  vfprintf@ap 002C                      __Lrparam 0000                    vfprintf@fp 002A  
       display_counter@buffer 0082                  ?_WriteNibble 0015                ?_UARTWriteChar 0001  
                  ?_vfpfcnvrt 001F                 ??i1_WriteByte 0005                    _ANSELCbits 0F3A  
                  sprintf@fmt 002F           i1LCDWriteStr@string 0007                   ??_WriteByte 0019  
                    __ptext10 1838                      __ptext11 13B8                      __ptext20 1938  
                    __ptext12 12F4                      __ptext21 186C                      __ptext13 1512  
                    __ptext30 1A22                      __ptext14 19FE                      __ptext31 1970  
                    __ptext23 158E                      __ptext15 160A                      __ptext32 1A34  
                    __ptext24 1A10                      __ptext16 198C                      __ptext33 1A3A  
                    __ptext25 1674                      __ptext17 19D6                      __ptext26 19A6  
                    __ptext18 120C                      __ptext27 1778                      __ptext19 172C  
                    __ptext28 1954                      __ptext29 189C                  _SSP1CON2bits 0FC5  
                _SSP1CON3bits 0FCB         __end_ofi1_LCDWriteStr 160A                  _UARTReadByte 1A3A  
                    isa$xinst 0000                ReadByte@status 0015                      int$flags 004B  
                    _vfprintf 17C4                    _LCDPutChar 19FE                  _SSP1STATbits 0FC7  
                    exit@code 0003                   ??_init_UART 0015           __end_ofi1_WriteByte 19C0  
        display_counter@count 0080                      intlevel1 0000                     sprintf@ap 0032  
      ??_SerialRxPinInterrupt 000C                    _RCSTA1bits 0FAB               _display_counter 18CC  
             _display_message 19C0              i1LCDPutChar@data 0006               ??_UARTWriteChar 0015  
                 ??_vfpfcnvrt 0022                      sprintf@f 0033                      sprintf@s 002E  
                  i1_ReadByte 189C  
